
// Tabeeb test page, iMedia Solutions LLC


//---- case-objects.js globals ----

// var global_case_info = {};

//---- case-events.js globals ----

// var case_info;
// var case_id;
// var global_current_case_id = 0;
// var mouse_down;
// var mouse_down_x;
// var mouse_down_y;
// var events_top_mouse_down;
// var events_top_touch_start;
// var touch_move_start = { 'x': 0, 'y': 0 };
// var global_screen_width;
// var global_screen_height;

//---- case-events-functions.js globals ----

// var global_case_events_height;

//---- case-events-touch-functions.js globals ----

// var global_event_state = [];
// var global_event_dy = 0;
// var global_last_event_selected;

//---- case-events-status-menu-functions.js globals ----

// var global_case_status_button_menu_state = 'hidden';

//---- case-events-tag-functions.js globals ----

// var global_tags_display_state = 'hidden';
// var global_tags_hidden_height;

//---- case-events-publish-functions.js globals ----

// var global_publish_section_is_added = 0;
// var global_most_helpful_doctor = '';

//---- case-summary.js globals ----

// var global_case_summary_height;
// var global_case_summary_bottom;
// var global_case_summary_state = 'show';

//---- case-comments.js globals ----

// var global_dr_profile = '';
// var global_patient_name = '';
// var global_comments_width;

//---- case-comment-touch-functions.js globals ----

// var global_comment_state = [];
// var global_comment_helpful_state = [];
// var global_last_comment_selected;
// var global_comment_slider_moves;
// var global_comment_slider_first_move;
// var global_comment_slider_direction;
// var comments_slider_start_top;
// var comment_start_x;
// var global_comment_dx;

//---- case-list-functions.js globals ----

// var global_case_list_filter_option_status = "active";
// var global_server_timestamp;

//---- case-list-search-functions.js globals ----

// var global_case_list_search_results;
// var global_case_list_sort_order = 'Newest';
// var global_case_list_query_owner = 'mine';

//---- case-list-menu-functions.js globals ----

// var global_case_list_options_menu_state = 'hidden';
// var global_case_list_sort_menu_state = 'hidden';

//---- case-create-functions.js globals ----

// var case_button_bar_height;
// var global_case_input_info = {};
// var global_case_input_rows = [];
// var global_case_input_current_row = '';
// var global_new_case_id = 124;

//---- case-create-submit-functions.js globals ----

// var case_title_input_added = 0;
// var case_summary_input_added = 0;
// var case_event_input_added = 0;
// var comment_shade_added = 0;
// var global_previous_screen;
// var global_cancel_button_menu_state;
// var select_patient_state = [];
// var selected_patient;

//---- case-create-input-functions.js globals ----

// var global_case_input_slider_start_top;
// var global_case_event_focus_was_called = 0;
// var global_button_has_focus = 0;
// var global_case_tag_check = [];

//---- case-create-input-icon-functions.js globals ----

// var global_icon_has_focus = 0;
// var global_last_row_selected;

//---- case-create-calendar-functions.js globals ----

// var year_state  = [];
// var month_state = [];
// var day_state   = [];
// var days_of_the_week = [ 'Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat' ];
// var day_index_of = { 'Sun': 0, 'Mon': 1, 'Tues': 2, 'Wed': 3, 'Thurs': 4, 'Fri': 5, 'Sat': 6 };
// var months_of_the_year = [ 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec' ];
// var name_of_month = { 'Jan': 'January',
// var short_name_of_month = { 'Jan': 'Jan',
// var days_in = {};
// var last_selected_day = 0;
// var last_selected_day_div;
// var last_selected_day_of_week;
// var last_selected_month;
// var last_selected_year;
// var selected_day = 0;
// var selected_day_div;
// var selected_day_of_week;
// var selected_month;
// var selected_year;
// var day_row_height, day_column_width;;
// var calendar_font_height;
// var calendar_font_size;
// var global_year_slider_height;
// var global_month_slider_height;
// var global_calendar_button_row_height;

//---- case-create-calendar-touch-functions.js globals ----

// var global_calendar_ui_year_start_top;
// var global_calendar_ui_month_start_top;

//---- case-create-category-functions.js globals ----

// var global_category_info = { 'Category':   { 'icon': 'tabeeb-select-category-icon.png',
// var global_category_list = [ 'History', 'Imaging', 'Labs', 'Symptom', 'Medicine', 'Condition', 'Diagnosis' ];
// var global_category_ui_width;

//---- case-create-category-touch-functions.js globals ----

// var global_category_ui_start_left;

//---- case-create-tag-functions.js globals ----

// var global_create_case_tags_edit_flag = 0;

//---- tabeeb-navigation-header.js globals ----

// var navigation_bar_height;
// var nav_bar_is_showing, nav_bar_is_down;
// var events_bar_is_showing, events_bar_is_down;
// var nav_header_top, nav_header_start_top, nav_header_current_top;
// var events_slider_top, events_slider_start_top, events_slider_current_top;
// var page_container_top;
// var events_top_bar_can_slide = 0;
// var events_slider_hit_top = 0;
// var events_slider_height = 0;
// var events_slider_min_y = 0;
// var nav_panel_state = 'hidden';
// var navigation_panel_height;
// var navigation_panel_width;
// var navigation_bar_button_height;
// var navigation_bar_font_size;
// var touch_move_start = { 'x': 0, 'y': 0 };

//---- patient-list-functions.js globals ----

// var global_patient_info = [

//---- patient-add-functions.js globals ----

// var global_new_anonymous_patient;
// var global_new_anonymous_patient_id;

//---- dashboard-functions.js globals ----

// var page_container_top, page_container_start_top, page_container_current_top;
// var page_container_min_y;

//---- camera-functions.js globals ----

// var global_images_list = {};
// var global_input_image_list = [];
// var global_create_case_images = 0;

//---- login-and-set-globals.js globals ----

// var global = {};
// var global_screen_mode;
// var global_screen_width;
// var global_screen_height;
// var global_screen_height_with_keyboard;
// var global_keyboard_height;
// var global_user_name;

//---- page-handler.js globals ----

// var global_timeline_width;
// var global_events_width;
// var global_events_width;
// var global_button_bar_height;
// var global_navigation_header_height;
// var global_screen_width;
// var global_screen_height;
// var global_last_page_state;
// var is_mobile = 0;


//---- case-objects.js ------------------------------------------------------------------------------------





// hard-code test info for case 123

// global_case_info[case_info.id] = case_info;


// comments can be on events, or on the case 
// list comments under event?  a comment can only be on one event

// check all comments when doing events, each event?

// separate lists with the same info?  build that info on the api anyway?




var global_case_info = {};



// add loop index to arrays, event, comment

// add flags to signal changed info

// set flags on ids for temp id or database id

// flag which says this event was deleted

// flag for new event in create case




function get_case_info(case_id) {

  // check local storage for last update

  // if over x minutes, start server ping and refresh loop

  // show status on nav bar



  var info = {};


  info.id = '123';
  info.case_id = '123';

  info.status = 'active';

  info.owner = 'DR Lefort';

  info.doctor = { name: 'Dr Eric Benoit' };

  info.title = 'Progressive respiratory failure in a patient with lung transplant';

  info.summary = 'I would appreciate your efforts in reviewing this undiagnosed case of a 4 months old patient and accepting him into one of your centers for further diagnosis and management.';


  // change to info.patient_id

  // global patient list


  // array of patient objects

  // info.patients[0].name


  info.name = 'Jason Knowles';

  info.picture = 'tabeeb-jason-knowles.png';

  info.age = '4mo';

  info.gender = 'Male';



  var events = [];

  info.events = events;


  // the first and second event are title and summary

  // case events list shows events 2 through n


  // list of comments on each event?
  // the api sends the json, from sql tables



  info.events.push(info.title);

  info.events.push(info.summary);


  var a = {};
  a.text = 'Born to non consanguineous parents by NVD.  <a href="http://www.education.gov.yk.ca/pdf/pdf-test.pdf">This is a link to a test pdf.</a>  <a href="http://databases.about.com/library/samples/address.xls">This is a test xls file.</a>';
  a.type = 'History';
  a.date = '24.Feb, 3:41 am';
  a.id = 123;
  a.comments = [
                 {
                   picture: 'tabeeb-doctor-1.png',
                   text: 'This comment is not marked helpful.  It is a comment on the first event in the case.',
                   timestamp: '10 days ago',
                   poster: 'DR Lefort',
                   speciality: 'Pediatrics',
                   event_id: 123,
                   id: 128
                 },
                 {
                   "new_comment": true,
                   "picture": "tabeeb-current-user-pic.png",
                   "text": "This is a test comment on the first event.",
                   "timestamp": "2 mins ago",
                   "poster": "current user",
                   "speciality": "Infrastructure",
                   "event_id": 123,
                   "temporary_id": true,
                   "id": 5
                 }
               ];
  info.events.push(a);

  var b = {};
  b.text = 'After delivery he developed respiratory distress.';
  b.type = 'Symptom';
  b.date = '24.Feb';
  b.id = 124;
  info.events.push(b);  

  var c = {};
  c.text = 'Kept in NICU with oxygen through nasal cannula for 5 days and received Ampicillin and Claforan.';
  c.type = 'History';
  c.date = '24-29.Feb';
  c.id = 125;
  c.comments = [ 
                 { picture: 'tabeeb-doctor-1.png',
                   text: 'Yes, there appears to be no redness or swelling in the patients throat.  <a href="http://www.education.gov.yk.ca/pdf/pdf-test.pdf">This is a link to a test pdf.</a>  <a href="http://databases.about.com/library/samples/address.xls">This is a test xls file.</a>',
                   timestamp: '2 mins ago',
                   poster: 'DR Lefort',
                   speciality: 'Pediatrics',
                   event_id: 125,
                   temporary_id: 'true',
                   id: 123
                 },
                 { picture: 'tabeeb-doctor-2.png',
                   text: 'Have you taken a look at the patients throat?',
                   timestamp: '32 mins ago',
                   poster: 'DR Bonome',
                   speciality: 'Pediatrics',
                   event_id: 125,
                   temporary_id: 'true',
                   id: 124
                 }
               ];
  info.events.push(c);

  var d = {};
  d.text = 'After discharge he was having mild tachypnea.  So he was taken back to hospital on D10 of life and was referred to the hospital but patient did not turn up.';
  d.type = 'Symptom';
  d.date = '5.Mar';
  d.id = 125;
  info.events.push(d);

  var e = {};
  e.text = 'His present complaint started as cough and cold of 2 days duration and respiratory distress of 1 day duration. His BGA showed respiratory acidosis and he was tachypneic.  So he was shifted to PICU.';
  e.type = 'Conditions';
  e.date = '5.Mar';
  e.tags = [ { word: 'respiratory acidosis' } ];
  e.id = 126;
  e.comments = [
                 { picture: 'tabeeb-doctor-3.png',
                   text: 'Interesting case.  What does the patients diet consist of?  I\'d particularly pay attention to any high sodium foods.',
                   timestamp: '1 day ago',
                   poster: 'DR Alves',
                   speciality: 'Pediatrics',
                   event_id: 126,
                   temporary_id: 'true',
                   id: 125
                 }
               ];
  info.events.push(e);

  var f = {};
  f.text = 'In PICU initially he was put on nasal CPAP, for 4 days.';
  f.date = '5-9.Mar';
  f.id = 127;
  info.events.push(f);

  var g = {};
  g.text = 'extubated.';
  g.date = '9-15.Mar';
  g.id = 128;
  info.events.push(g);

  var h = {};
  h.text = 'His chest X-rays were showing persistent collapse of right lower zone.';
  h.type = 'Imaging';
  h.image = [ 'tabeeb-image_1.jpg' ];
  h.date = '9-15.Mar';
  h.id = 129;
  info.events.push(h);

  var i = {};
  i.text = 'CT Chest with contrast (attached, first CT): sub segmental consolidation collapse of right upper and bilateral lower lobes with consequent hyperinflation of right middle and left upper lobes.';
  i.type = 'Imaging';
  i.image = [ 'tabeeb-image_2.jpg' ];
  i.date = '9-15.Mar';
  i.id = 130;
  i.comments = [
                 { picture: 'tabeeb-doctor-4.png',
                   text: 'I don\'t think you are getting the right level of detail on your x-rays.  You need a super microscopic lens to find issues within the lung.',
                   timestamp: '6 days ago',
                   poster: 'DR Liquori',
                   speciality: 'Pediatrics',
                   event_id: 130,
                   temporary_id: 'true',
                   id: 126
                 }
               ];
  info.events.push(i);

  var j = {};
  j.text = 'Barium swallow: free flow of the contrast through the esophagus. It appears of normal caliber with no evidence of fistulas, filling defects strictures, or abnormal extrinsic compressions. Normal gastro esophageal junction with no detectable reflux during the examination.';
  j.type = 'Symptom';
  j.date = '15.Mar';
  j.id = 131;
  info.events.push(j);

  var k = {};
  k.text = 'Flexible brochoscopy showed only secretions and the left upper lobe bronchus was narrowed (at that time, he was intubated and ventilated), unfortunately, I don\'t have pictures.';
  k.type = 'Symptom';
  k.date = '15.Mar';
  k.id = 132;
  info.events.push(k);

  var l = {};
  l.text = 'Further work-up:\nNormal CBC and diff., Glu, Urea, Creat, Electrolytes and LFT.\nNasopharyngeal aspirate Culture: Ecoli, H influenza\nBlood C/S: No growth\nTracheal aspirate Virology: Positive for CMV\nH1N1: Negative\nTracheal aspirate Culture: Normal flora\nChest X-rays Reported: Serial X-rays- persistent right lower zone collapse\nEcho:\nPFO (2m, Tiny L ? R shunt, PG-3mmHg\nNo abdominal venous drainage seen to IVC\nTrivial TR, PG? 18mmHG\nNo RA and RV dilatation\nTiny closing PDA (1mm), Tiny L ? R shunt';
  l.type = 'History';
  l.date = '14.Jun';
  l.id = 133;
  info.events.push(l);

  var t1 = {};
  t1.text = 'test event, history';
  t1.type = 'History';
  t1.date = '14.Jun';
  t1.id = 134;
  info.events.push(t1);

  var t2 = {};
  t2.text = 'test event, conditions';
  t2.type = 'Conditions';
  t2.date = '14.Jun';
  t2.id = 135;
  info.events.push(t2);

  var t3 = {};
  t3.text = 'test event, symptom';
  t3.type = 'Symptom';
  t3.date = '14.Jun';
  t3.id = 136;
  info.events.push(t3);

  var t4 = {};
  t4.text = 'test event, diagnosis';
  t4.type = 'Diagnosis';
  t4.date = '14.Jun';
  t4.id = 137;
  info.events.push(t4);

  var t5 = {};
  t5.text = 'test event, imaging';
  t5.type = 'Imaging';
  t5.date = '14.Jun';
  t5.id = 138;
  info.events.push(t5);

  var t6 = {};
  t6.text = 'test event, labs';
  t6.type = 'Labs';
  t6.date = '14.Jun';
  t6.id = 139;
  info.events.push(t6);

  var t7 = {};
  t7.text = 'test event, medications';
  t7.type = 'Medications';
  t7.date = '14.Jun';
  t7.id = 140;
  info.events.push(t7);

  var t8 = {};
  t8.text = 'test event, published';
  t8.type = 'Published';
  t8.date = '14.Jun';
  t8.id = 141;
  info.events.push(t8);

  var t9 = {};
  t9.text = 'test event, opened';
  t9.type = 'Opened';
  t9.date = '14.Jun';
  t9.id = 142;
  t9.comments = [
                  { picture: 'tabeeb-current-user-pic.png',
                    text: 'This comment is in the test data, added on the event at the end of the case events list.',
                    timestamp: '2 mins ago',
                    poster: 'current user',
                    speciality: 'Infrastructure',
                    event_id: 142,
                    temporary_id: 'true',
                    id: 4
                  }
                ];
  info.events.push(t9);


  var tags = [];

  tags.push( { word: 'Losec' } );
  tags.push( { word: 'Meropenum' } );
  tags.push( { word: 'Motilium' } );

  // global tags object, local storage?  body.html(') and load the case template from the tags check page?  draw_page with that template, init_case_info?

  info.tags = tags;


  // comment can be on an event or on the case
  // each event has a list of comment numbers
  // are comments listed under each case, or is there a global list of comment id's


  // case_event_id in case_tags is the id of the event that the comment is from

  //  events have id's and ordinals, case_event_id is not the loop index or ordinal, it's the events[i].id




  var comments = [];

  var mmm = {
              "new_comment": true,
              "picture": "tabeeb-current-user-pic.png",
              "text": "This is a test comment on the first event.",
              "timestamp": "2 mins ago",
              "poster": "current user",
              "speciality": "Infrastructure",
              "event_id": 123,
              "temporary_id": true,
              "id": 5
            };
  comments.push(mmm);

  var mm = {
             picture: 'tabeeb-current-user-pic.png',
             text: 'This comment is in the test data, added on the event at the end of the case events list.',
             timestamp: '2 mins ago',
             poster: 'current user',
             speciality: 'Infrastructure',
             event_id: 142,
             temporary_id: 'true',
             id: 4
           };
  comments.push(mm);

  var m = {};
  m.picture    = 'tabeeb-doctor-1.png';
  m.text       = 'Yes, there appears to be no redness or swelling in the patients throat.  <a href="http://www.education.gov.yk.ca/pdf/pdf-test.pdf">This is a link to a test pdf.</a>  <a href="http://databases.about.com/library/samples/address.xls">This is a test xls file.</a>';
  m.timestamp  = '2 mins ago';
  m.poster     = 'DR Lefort';
  m.speciality = 'Pediatrics';
  m.event_id   = 125;
  m.id         = 123;
  comments.push(m);

  var n = {};
  n.picture    = 'tabeeb-doctor-2.png';
  n.text       = 'Have you taken a look at the patients throat?';
  n.timestamp  = '32 mins ago';
  n.poster     = 'DR Bonome';
  n.speciality = 'Pediatrics';
  n.event_id   = 125;
  n.id         = 124;
  comments.push(n);

  var o = {};
  o.picture    = 'tabeeb-doctor-3.png';
  o.text       = 'Interesting case.  What does the patients diet consist of?  I\'d particularly pay attention to any high sodium foods.';
  o.timestamp  = '1 day ago';
  o.poster     = 'DR Alves';
  o.speciality = 'Pediatrics';
  o.event_id   = 126;
  o.id         = 125;
  o.helpful    = 2;
  comments.push(o);

  var p = {};
  p.picture    = 'tabeeb-doctor-4.png';
  p.text       = 'I don\'t think you are getting the right level of detail on your x-rays.  You need a super microscopic lens to find issues within the lung.';
  p.timestamp  = '6 days ago';
  p.poster     = 'DR Liquori';
  p.speciality = 'Pediatrics';
  p.event_id   = 130;
  p.id         = 126;
  p.helpful    = 1;
  comments.push(p);

  var q = {};
  q.picture    = 'tabeeb-doctor-3.png';
  q.text       = 'This is another comment on the patients diet.  This comment is marked helpful.';
  q.timestamp  = '7 days ago';
  q.poster     = 'DR Alves';
  q.speciality = 'Pediatrics';
  q.id         = 127;
  q.helpful    = 1;
  comments.push(q);

  var r = {};
  r.picture    = 'tabeeb-doctor-1.png';
  r.text       = 'This comment is not marked helpful.  It is a comment on the first event in the case.';
  r.timestamp  = '10 days ago';
  r.poster     = 'DR Lefort';
  r.speciality = 'Pediatrics';
  r.event_id   = 123;
  r.id         = 128;
  comments.push(r);


  info.comments = comments;
  

  console.log('case objects, case id is ' + info.id);

  // global_current_case_id = info.id;

  global_case_info[info.id] = info;



  return info;

}



//---- case-timeline.js ------------------------------------------------------------------------------------



// load case timeline, click to scroll events div to date, drag down on timeline to go to cases?



function load_case_timeline(events) {

  // get total number of days from first to last event

  // get each event's number of days from the first event

  // get number of days between events for adding date label vs not

  // scroll the timeline?


  $('#case_timeline').append('<div id="case_timeline_top"></div>');

  $('#case_timeline_top').css( { 'float': 'top',
                                 'background-color': '#2d2b2c',
                                 'height': 30 } );

  $('#case_timeline_top').append('<div style="padding-top: 3; "><center><img src="tabeeb-history-timeline.png"></center></div>');
  $('#case_timeline_top').append('<div style="padding-top: 49;"><center><img src="tabeeb-symptoms-timeline.png"></center></div>');
  $('#case_timeline_top').append('<div style="padding-top: 7; "><center><img src="tabeeb-history-timeline.png"></center></div>');
  $('#case_timeline_top').append('<div style="padding-top: 13;"><center><img src="tabeeb-symptoms-timeline.png"></center></div>');
  $('#case_timeline_top').append('<div style="padding-top: 4; "><center><img src="tabeeb-conditions-timeline.png"></center></div>');
  $('#case_timeline_top').append('<div style="padding-top: 7; "><center><img src="tabeeb-imaging-timeline.png"></center></div>');
  $('#case_timeline_top').append('<div style="padding-top: 16;"><center><img src="tabeeb-imaging-timeline.png"></center></div>');
  $('#case_timeline_top').append('<div style="padding-top: 77;"><center><img src="tabeeb-symptoms-timeline.png"></center></div>');
  $('#case_timeline_top').append('<div style="padding-top: 2; "><center><img src="tabeeb-symptoms-timeline.png"></center></div>');

  $('#case_timeline_top').append('<div style="padding-top: 61;"><center><img src="tabeeb-history-timeline.png"></center></div>');
  $('#case_timeline_top').append('<div style="padding-top: 10; "><center><img src="tabeeb-conditions-timeline.png"></center></div>');
  $('#case_timeline_top').append('<div style="padding-top: 10; "><center><img src="tabeeb-symptoms-timeline.png"></center></div>');
  $('#case_timeline_top').append('<div style="padding-top: 10; "><center><img src="tabeeb-diagnosis-timeline.png"></center></div>');
  $('#case_timeline_top').append('<div style="padding-top: 10; "><center><img src="tabeeb-imaging-timeline.png"></center></div>');
  $('#case_timeline_top').append('<div style="padding-top: 10; "><center><img src="tabeeb-labs-timeline.png"></center></div>');
  $('#case_timeline_top').append('<div style="padding-top: 10; "><center><img src="tabeeb-medications-timeline.png"></center></div>');
  $('#case_timeline_top').append('<div style="padding-top: 10; "><center><img src="tabeeb-published-timeline.png"></center></div>');


}



function scroll_events_from_timeline() {

}



//---- case-events.js ------------------------------------------------------------------------------------



// get case info, load the divs, add event handlers to divs



var case_info;
var case_id;

var global_current_case_id = 0;
// var global_current_case_info = {};



var mouse_down;
var mouse_down_x;
var mouse_down_y;
var events_top_mouse_down;


var events_top_touch_start;
var touch_move_start = { 'x': 0, 'y': 0 };


var global_screen_width;
var global_screen_height;




function init_case_events_page() {

  if ( typeof global_screen_height == 'undefined' ) { get_global_variables(); }

  if ( isNaN( global_screen_height ) ) { load_page('login'); return; }

  set_cookie('last_page_state', 'case_events', 365)


  // tags are not displayed

  global_tags_display_state = 'hidden';


  // publish section is not displayed

  global_publish_section_is_added = 0;



  // get case id from global case id?  set global id on current cases page, then load_page('case_events');

  // load case events info has to use global case info[case id] instead of case_info


  console.log('init case events, global current case id is ' + global_current_case_id);


  if (global_current_case_id == 0) {

    case_id = get_case_id();

    global_current_case_id = case_id;

  } else {

    case_id = global_current_case_id;

    case_info = global_case_info[case_id];

  }


  if (case_info == null) {
    case_info = get_case_info(case_id);
  }


  load_case_events_info(case_info);

}



function get_case_id() {

  return 123;

}



// load events, comments, timeline

function load_case_events_info(case_info) {

  var screen_width  = $(window).width();
  var screen_height = $(window).height();

  // check global_screen_height and use window height if > 

  screen_height = global_screen_height;
  screen_width = global_screen_width;


  // set global screen height on all pages

  var screen_height = $(window).height();

  if ( screen_height != global_screen_height ) { global_screen_height = screen_height; }



  add_navigation_header();

  var nav_header_height = parseInt( $('#nav_header_bar').height() );


  // nav header bar starts hidden, page starts at top 0
  // nav header bar is fixed in case v07

  events_slider_start_top = 0;

  comments_slider_start_top = 0;


  // nav_header_start_top = nav_header_height * -1;

  nav_header_start_top = 0;


  $('#nav_header_bar').css( { 'top': nav_header_start_top } );

  nav_panel_state = 'hidden';



  // if the current user is the case owner, 
  //   add the case status button 
  //   put the units, bookmark, and sharing icons to the left of the case status button


  // add status button to nav header, capitalize case info status

  var case_status_button_text = case_info.status.charAt(0).toUpperCase() + case_info.status.slice(1);

  var button_top_padding = 6;
  var button_font_size = 16;

  if (nav_header_height > 40) {

    var bar_height_difference = nav_header_height - 40;

    // var font_size_increase = Math.floor(bar_height_difference / 6);
    // button_font_size = button_font_size + font_size_increase;

    var padding_increase = Math.floor(bar_height_difference / 3);
    button_top_padding = button_top_padding + padding_increase;

  }


  // get button width from screen width

  var button_width = 120;
  var button_height = nav_header_height - ( 10 + button_top_padding );

  var button_css = {  width: button_width,
                      height: button_height,
                     'border-radius': 4,
                      color: '#ffffff',
                     'background-color': '#0084cb',
                     'font-family': 'Droid Sans',
                      font: button_font_size + 'px "Droid Sans", sans-serif' };


  $('#nav_header_bar').append('<div id="case_status_button"><center>' + case_status_button_text + '</center></div>');

  $('#case_status_button').css(button_css);

  var case_status_button_left = global_screen_width - ( button_width + 5 );

  $('#case_status_button').css( {  position: 'absolute',
                                   top: 5,
                                  'padding-top': button_top_padding,
                                   left: case_status_button_left } ); 

  $('#case_status_button').on('click', function() { toggle_case_status_button_menu(); } );


  // case status menu

  var status_button_height = button_height + button_top_padding;
  var menu_top             = status_button_height + 5 + 5;
  var menu_width           = Math.floor( button_width * 1.197 );
  var menu_left            = Math.floor( ( case_status_button_left + ( button_width / 2 ) ) - ( menu_width / 2 ) ) - 8;

  create_case_status_button_menu( menu_top, menu_left, menu_width, status_button_height, button_font_size, case_info.status );

  global_case_status_button_menu_state = 'hidden';



  // add share case and bookmark case icons to nav header bar

  var mode = get_orientation_mode();

  var bookmark_icon_left = $('#case_status_button').position().left - 150;

  if ( mode == 'portrait' ) { bookmark_icon_left += 60; }


  $('#nav_header_bar').append('<div id="bookmark_case_button" style="padding-top: 4;"><center><img src="tabeeb-bookmark-case-icon.png" height=22 width=12 ></img></center></div>');

  $('#bookmark_case_button').css( { position: 'absolute',
                                    top: 7,
                                    left: bookmark_icon_left,
                                    width: 30,
                                    height: 26 } );

  if ( case_info.bookmarked == true ) {
    $('#bookmark_case_button').css( { 'background-color': '#0084ca' } );
  }

  if ( is_mobile ) {
    $('#bookmark_case_button').on('touchend', function() { bookmark_current_case(); } );
  } else {
    $('#bookmark_case_button').on('click', function() { bookmark_current_case(); } );
  }



  // share case button

  var share_icon_left = bookmark_icon_left + 65;

  if ( mode == 'portrait' )  { share_icon_left = bookmark_icon_left + 42; }
  if ( mode == 'landscape' ) { share_icon_left = bookmark_icon_left + 70; }

  $('#nav_header_bar').append('<div id="share_case_button" style="padding-top: 4;"><center><img src="tabeeb-share-case-icon.png" height=22 width=25 ></img></center></div>');

  $('#share_case_button').css( { position: 'absolute',
                                 top: 7,
                                 left: share_icon_left,
                                 width: 30,
                                 height: 26 } );

  // on click, share_this_case()



  // add notification and comment icons to nav header bar

  var notification_icon_left = $('#nav_panel_icon').width();

  if ( mode == 'landscape' ) { notification_icon_left += 50; }
                        else { notification_icon_left += 40; }

  $('#nav_header_bar').append('<div id="notification_button" style="padding-top: 4;"><center><img src="tabeeb-notification-case-icon.png" height=22 width=20 ></img></center></div>');

  $('#notification_button').css( { position: 'absolute',
                                   top: 7,
                                   left: notification_icon_left,
                                   width: 30,
                                   height: 26 } );

  // on click, toggle notifications list menu 

 

  // comment icon

  var comment_icon_left = notification_icon_left + 60;

  if ( mode == 'portrait' )  { comment_icon_left = notification_icon_left + 50; }
  if ( mode == 'landscape' ) { comment_icon_left = notification_icon_left + 70; }

  $('#nav_header_bar').append('<div id="comment_button" style="padding-top: 4;"><center><img src="tabeeb-comment-case-icon.png" height=22 width=25 ></img></center></div>');

  $('#comment_button').css( { position: 'absolute',
                                   top: 7,
                                   left: comment_icon_left,
                                   width: 30,
                                   height: 26 } );

  // on click, toggle comments list menu
 




  // page columns

  // change nav bar to fixed, set top of page container to nav bar height
  // page height is screen height - nav bar height

  $('#page_container').css( { 'position': 'fixed',
                              'top': nav_header_height,
                              'left': 0 } );

  // page starts at nav header bar

  var page_height = global_screen_height - nav_header_height;


  // turn off scroll bars

  $('body').css( { 'overflow': 'hidden' } );


  // set width and height of timeline, events, and comments

  // timeline is not on the case events screen in phase 1

  // var timeline_width = Math.floor(screen_width * 0.0528);
  // if (timeline_width < 44) { timeline_width = 44; }

  var timeline_width = 0;

  $('#case_timeline').width(timeline_width)
  $('#case_timeline').height(page_height);

  global_timeline_width = timeline_width;


  // var comments_width = Math.floor(screen_width * 0.2545);
  // if (comments_width < 212) { comments_width = 212; }

  var comments_width = Math.floor(global_screen_width * 0.2687);

  var comments_x = screen_width - comments_width;

  $('#case_comments').width(comments_width)
  $('#case_comments').height(page_height);

  global_comments_width = comments_width;



  var events_width = screen_width - ( timeline_width + comments_width );
  global_events_width = events_width;

 
  $('#case_events_container').css( { 'position': 'absolute',
                                     'top': 0, 
                                     'left': timeline_width,
                                     'overflow': 'hidden',
                                     'height': page_height,
                                     'width': events_width,
                                     'z-index': 0 } );


  // case events div

  $('#case_events_container').append('<div id="case_events"></div>')

  $('#case_events').css( { 'position': 'absolute',
                           'top': 0,
                           'left': 0,
                           'height': page_height,
                           'width': events_width,
                           'z-index': 1 });


  // position of timeline and comments

  $('#case_timeline').css( { 'position': 'absolute' } );
  $('#case_timeline').offset( { top: nav_header_height, left: 0 } );

  $('#case_comments').css( { 'position': 'absolute' } );
  $('#case_comments').offset( { top: nav_header_height, left: comments_x } );



  // mouse bind to events div

  // mouse down

  $('#case_events_container').on('mousedown', function(e) {
    mouse_down = true;
    mouse_down_y = e.pageY;
    events_top_mouse_down = $('#case_events').offset().top;
  });



  // mouse move

  $('#case_events_container').on('mousemove', function(e) {
    if (mouse_down) {
      var current_y = e.pageY;
      var diff_y = current_y - mouse_down_y;
      var events_top_current = events_top_mouse_down + diff_y;
      if (events_top_current <= 0) {
        $('#case_events').css( { 'top': events_top_current } );
      }
    }
  });



  // mouse up

  $('#case_events_container').on('mouseup', function() { mouse_down = false; });



  // mouse wheel
 
  $('#case_events_container').on('mousewheel', function(e, delta) {

    var comment_icon_bar_height = parseInt( $('#comment_icon_bar').height() );

    events_slider_min_y = ( global_screen_height - comment_icon_bar_height ) - global_case_events_height;


    var events_top;

    if(e.originalEvent.wheelDelta/120 > 0) {

      events_top = $('#case_events').offset().top + 200;

      if (events_top > 0) { events_top = 0; }

      if (events_top <= 0) {
        $('#case_events').css( { 'top': events_top } );
      }

    } else {

      events_top = $('#case_events').offset().top - 200;

      if ( events_top < events_slider_min_y ) { events_top = events_slider_min_y; }
      
      $('#case_events').css( { 'top': events_top } );

    }

  });



/*

  // touch bind to events div

  function touch_start(e) {

    e.preventDefault();

    var touch = e.originalEvent.touches[0];

    touch_move_start.y = touch.pageY;

    events_top_touch_start = $('#case_events').offset().top;

  }


  function touch_move(e) {

    e.preventDefault();

    var touch = e.originalEvent.touches[0];

    var dy = touch.pageY - touch_move_start.y;
    var events_top = events_top_touch_start + ( dy * 2 );

    if (events_top > 0) { events_top = 0; }

    if (events_top <= 0) {
      $('#case_events').css( { 'top': events_top } );
    }

  };


  function touch_end(e) {

    e.preventDefault();

    // start interval for y + last dy, dy *= .9

  };

*/


  if (is_mobile) {

    $('#case_events').on('touchstart', function(e) { events_touch_start(e); } );
    $('#case_events').on('touchmove',  function(e) { events_touch_move(e); } );
    $('#case_events').on('touchend',   function(e) { events_touch_end(e); } );

  }



  // if status is published, header for resolved or unsolved

  var published_case_header_height = 0;
  var published_case_header_total_height = 0;
  var published_case_header_conclusion;
  var published_case_header_background_color;

  if ( case_info.status == 'published' ) {

    published_case_header_height = 30;
    published_case_header_conclusion = 'UNSOLVED';
    published_case_header_background_color;

    if ( ( case_info.conclusion != '' ) 
      && ( case_info.conclusion != 'Enter the diagnosis and/or treatment that helped you with the case...' ) ) {

      published_case_header_conclusion = 'RESOLVED - ' + case_info.conclusion;

    }


    if ( case_info.resolved_state == 'resolved' ) {

      published_case_header_background_color = '#96b38c';

      if ( published_case_header_conclusion == 'UNSOLVED' ) {

        published_case_header_conclusion = 'RESOLVED';

      }

    } else {

      published_case_header_background_color = '#bb6f74';

    }


    $('#case_events').append('<div id="published_case_header">' + published_case_header_conclusion + '</div>');

    $('#published_case_header').css( { height: published_case_header_height,
                                       width: events_width,
                                      'padding-left': 20,
                                      'padding-top': 7,
                                       font: 'bold 20px "Droid Sans", sans-serif',
                                       color: '#ffffff',
                                      'background-color': published_case_header_background_color } );

    published_case_header_total_height = published_case_header_height + 7;

  }



  // patient info, hgraph

  var patient_info_height = Math.floor( events_width * 0.113 );

  if ( patient_info_height < 65 ) { patient_info_height = 65; }

  if ( patient_info_height > 80 ) { patient_info_height = 80; }

  $('#case_events').append('<div id="patient_info_events"></div>');

  $('#patient_info_events').css( { height: patient_info_height,
                                   width: events_width,
                                  'background-color': '#ebecec' });

  if ( is_mobile ) {
    $('#patient_info_events').on('touchstart', function() { 
      global_previous_screen = 'case_events';
      global_patient_name = case_info.name; 
      load_page('patient_info'); 
    } );
  } else {
    $('#patient_info_events').on('click', function() { 
      global_previous_screen = 'case_events';
      global_patient_name = case_info.name; 
      load_page('patient_info'); 
    } );
  }


  // patient info 

  var patient_info_left = patient_info_height;

  if ( is_mobile ) { patient_info_left = Math.floor( patient_info_height * 1.1 ); }

  var patient_info_top = Math.floor( patient_info_height * 0.3 ) + published_case_header_total_height;

  $('#patient_info_events').append('<div id="patient_info"></div>');

  $('#patient_info').css( { position: 'absolute',
                            top: patient_info_top,
                            left: patient_info_left,
                           'font-family': 'Droid Sans',
                           'font': '25px "Droid Sans", sans-serif' } );

  var patient_info_text;

  if ( ( case_info.gender == '' ) || ( ( typeof case_info.gender ) == 'undefined' ) ) {

    if ( ( case_info.age == '' ) || ( ( typeof case_info.age ) == 'undefined' ) ) { 
      patient_info_text = 'Anonymous patient'; 
    } else { 
      patient_info_text = 'Anonymous ' + case_info.age; 
    }

  } else {

    if ( ( case_info.age == '' ) || ( ( typeof case_info.age ) == 'undefined' ) ) { 
      patient_info_text = case_info.gender; 
    } else { 
      patient_info_text = case_info.age + ', ' + case_info.gender; 
    }

  }

  $('#patient_info').html(patient_info_text + ' in USA');



  /*

  // hgraph

  var patient_hgraph_height = Math.floor( patient_info_height * 0.60 );
  var patient_hgraph_top    = Math.floor( patient_info_height * 0.15 );
  var patient_hgraph_left   = Math.floor( patient_info_height * 0.12 );
  var patient_hgraph_radius = patient_hgraph_height * 0.6;
  var patient_hgraph_border = 10;

  patient_hgraph_height = patient_hgraph_height - ( patient_hgraph_border * 1.4 );

  $('#patient_info_events').append('<div id="patient_hgraph_info"></div>');

  $('#patient_hgraph_info').css( { position: 'absolute',
                                   top: patient_hgraph_top,
                                   left: patient_hgraph_left,
                                   height: patient_hgraph_height,
                                   width: patient_hgraph_height,
                                  'border-radius': patient_hgraph_radius,
                                   border: patient_hgraph_border + 'px solid #99bd8e' } );

  */


  var case_title_background_left_margin = 31;

  // hgraph canvas instead of div

  create_hgraph_icon( 'patient_info_events', patient_info_height, case_title_background_left_margin );




  // instead of background, append top, append title, append bottom, append summary

  // case title background top

  // get this from global screen width
  // var case_title_background_left_margin = 33;

  var case_title_background_width = events_width - case_title_background_left_margin;

  $('#case_events').append('<div id="case_title_background_top"></div>');

  $('#case_title_background_top').css( { 'top': 0,
                                         'height': 14,
                                         'margin-left': case_title_background_left_margin,
                                         'margin-top': 0,
                                         'border-left': '5px solid #7f8386',
                                         'width': case_title_background_width } );


  // case title

  // get this from global screen width
  var case_title_left_margin = 20;

  $('#case_events').append('<div id="case_title"></div>');

  $('#case_title').css( { 'font-family': 'Droid Sans',
                          'font': 'bold 33px "Droid Sans", sans-serif',
                          'background-color': '#ffffff',
                          'padding-top': 4,
                          'padding-bottom': 4,
                          'margin-left': case_title_left_margin,
                          'margin-right': 20,
                          'color': '#535154' } );

  $('#case_title').html(case_info.title);



  // case title background bottom

  $('#case_events').append('<div id="case_title_background_bottom"></div>');

  $('#case_title_background_bottom').css( { 'height': 20,
                                            'margin-left': case_title_background_left_margin,
                                            'margin-top': 0,
                                            'border-left': '5px solid #7f8386',
                                            'width': case_title_background_width } );


  // case summary

  // not used,

  // get these from global screen width, case events right padding is width of date column

  var case_events_left_padding = 29;
  var case_events_right_padding = 75;
  var case_events_width = case_title_background_width - ( case_events_left_padding + case_events_right_padding );

  // load_case_summary(case_info.summary, case_events_width, case_title_background_left_margin, case_events_left_padding, case_events_right_padding);

 
  // case events

  var events   = case_info.events;
  var tags     = case_info.tags;
  var comments = case_info.comments;

  load_case_events(events, case_events_width, case_title_background_left_margin, case_events_left_padding, case_events_right_padding, tags, comments);


  // case comments

  load_case_comments(case_info);


  // case time line

  load_case_timeline(events);


}



function bookmark_current_case() {

  console.log('bookmark_current_case ' + global_current_case_id );

  var bookmark_data = { case_id: global_current_case_id,
                        doctor_id: 1 };


  $.ajax( { contentType: 'application/json',
            type: 'GET',
            url: '/api/ping_server.json',
            timeout: 4000,
            dataType: 'json',

            success: function( data, textStatus ) {

              console.log('ping_server, textStatus ' + textStatus + ', ' + JSON.stringify( data, undefined, 2 ) );

              global_server_timestamp = data.server_time_stamp;

              bookmark_case( bookmark_data );

            },

            error: function( jqXHR, textStatus, errorThrown ) {

              console.log('ping_server, textStatus ' + textStatus + ', error from the api');

              // add bookmark case event to autonomous retry queue

            },

            processData: false

  } );

}



function bookmark_case( bookmark_data ) {

  $.ajax( { contentType: 'application/json',
            type: 'POST',
            url: '/api/toggle_bookmark_case.json',
            data: JSON.stringify( bookmark_data ),

            success: function( data, textStatus ) {

              console.log('bookmark case, ajax success, textStatus ' + textStatus + ', data ' + JSON.stringify( data, undefined, 2 ) );

              // update server timestamp


              $('#bookmark_case_button').css( { 'background-color': '#006600' } );


              // toggle bookmarked status in global case info instead of reloading the case

              if ( global_case_info[ global_current_case_id ].bookmarked == true ) {
                global_case_info[ global_current_case_id ].bookmarked = false;
              } else {
                global_case_info[ global_current_case_id ].bookmarked = true;
              }

            },

            error: function( jqXHR, textStatus, errorThrown ) {

              console.log('bookmark case, ajax error, textStatus ' + textStatus + ', errorThrown ' + errorThrown );

            },

            dataType: 'json',
            processData: false

  } );

}



//---- case-events-functions.js ------------------------------------------------------------------------------------



// load case events, add case event


// add header bar with navigation panel icon, tabeeb logo

// add blank space to top of page also

// header slides down as soon as scrolling down starts, like chrome tabs and url header



var global_case_events_height;




function load_case_events(events, width, left_margin, left_padding, right_padding, tags, comments) {

  var mode = get_orientation_mode();


  // append a div for the list of events

  $('#case_events').append('<div id="case_events_list"></div>');


  // summary is not used,

  // var case_summary_bottom = $('#case_summary').offset().top + $('#case_summary').outerHeight();

  // $('#case_events_list').offset( { top: case_summary_bottom } );


  var case_title_bottom = $('#case_title_background_bottom').offset().top + $('#case_title_background_bottom').outerHeight();

  $('#case_events_list').offset( { top: case_title_bottom } );



  var events_width = $('#case_events').width();

  $('#case_events_list').css( { 'width': events_width } ); 



  for (var i in events) {

    // first and second event are title and summary

    // summary is not used,

    if (i < 1) { continue; }


    var div_id      = 'case_event_' + i;
    var div_icon_id = 'case_event_icon_' + i;

    var j_div_id      = '#' + div_id;
    var j_div_icon_id = '#' + div_icon_id;

    var icon;

    if ( ( ( typeof events[i].type ) != 'undefined' ) && ( events[i].type != null ) ) {

      icon = 'tabeeb-' + events[i].type.toLowerCase() + '-event.png';

    } else {

      icon = '';

    }


    global_event_state[div_id] = 'not selected';


    // if the event has an image, append the image to the events list
    //   handle multiple images on an event?  grid with zoom on click?


    // images

    if ( ( typeof events[i].image ) != 'undefined' ) {

      for ( var g in events[i].image ) {

        // if the image is listed, set the src to the global image src

        if ( ( typeof global_images_list[ events[i].image[g] ] ) != 'undefined' ) {

          $('#case_events_list').append('<div><img src="' + global_images_list[ events[i].image[g] ].src + '" width="' + events_width + '"></div>');

        } else {

          $('#case_events_list').append('<div><img src="' + events[i].image[g] + '" width="' + events_width + '"></div>');

        }

        // add space between the image and the event icon

        $('#case_events_list').append('<div style="border-left: 5px solid #7f8386; margin-left: ' + left_margin + '; height: 8px;"></div>');

      }

    }



    // append div for the event

    // padding-bottom 0 so the bottom of the div isn't past the comment div

    $('#case_events_list').append('<div id="' + div_id + '"></div>');

    $(j_div_id).css( { 'position': 'relative',
                       'padding-left': left_padding,
                       'padding-right': right_padding,
                       'padding-top': 10,
                       'padding-bottom': 0,
                       'margin-left': left_margin,
                       'border-left': '5px solid #7f8386',
                       'font-family': 'Droid Sans',
                       'font': '14px "Droid Sans", sans-serif',
                       'color': '#535154' } );


    // event type is Category for default, 

    if (events[i].type != '') {

      // append div for the event icon, set its width to 0

      $(j_div_id).append('<div id="' + div_icon_id + '"></div>');

      $(j_div_icon_id).css( { 'position': 'relative',
                              'float': 'left',
                              'overflow': 'visible',
                              'width': 0,
                              'z-index': 99,
                              'left': -46,
                              'top': -6 } );

      $(j_div_icon_id).html('<img src="' + icon + '">');

    }


    // append the event text to the event div

    if ( ( ( typeof events[i].text ) != 'undefined' ) && ( events[i].text != null ) ) {

      $(j_div_id).append('<div>' + events[i].text + '</div>');


      if ( ( ( typeof events[i].date ) != 'undefined' ) && ( events[i].date != null ) ) {

       $(j_div_id).append('<div style="color: #c2c4b9">' + events[i].date + '</div>');

      }


      // comments on event

      if ( ( ( typeof events[i].comments ) != 'undefined' ) && ( events[i].comments.length > 0 ) ) {

        // append div with comment count, on click change size and add text?  

        // div around the "hide comments" for onclick to close, not the whole comment_div

        // set global_case_events_height


        var comment_count = events[i].comments.length;

        var count_text = " COMMENTS";
        if ( comment_count == 1 ) { count_text = " COMMENT"; }

        var comment_div        = 'case_event_comment_' + i;
        var comment_toggle_div = 'case_event_comment_toggle_' + i;

        $(j_div_id).append('<div id="' + comment_div + '" style="color: #c2c4b9; margin-left: ' + ( left_margin * 2 ) + ';">' 
                         + '<div id="' + comment_toggle_div + '" style="padding-top: 5; padding-bottom: 15;">' + comment_count + count_text + '</div></div>');

        if ( is_mobile ) {
          $('#' + comment_toggle_div).on('touchend', function(e) { toggle_comment_display(e, this); } );
        } else {
          $('#' + comment_toggle_div).on('click', function(e) { toggle_comment_display(e, this); } );
        }

      } else {

        // adjust the spacing if no comments

        $(j_div_id).css( { 'padding-bottom': 20 } );

      }


    }



    // toggle select of event, check global events dy

    if ( is_mobile ) {
      $(j_div_id).on('touchend', function() { toggle_event_from_paragraph(this); } );
    } else {
      $(j_div_id).on('click', function() { toggle_event_from_paragraph(this); } );
    }

  }


  // if height is < page, add blank line to bottom of page

  var case_events_height = $('#case_title_background_top').height()
                         + $('#case_title').height()
                         + $('#case_title_background_bottom').height()
                         + $('#case_summary').height()
                         + $('#case_events_list').height();

  var case_height_difference = 0;

  if ( case_events_height < global_screen_height ) {
    case_height_difference = global_screen_height - case_events_height;
  }

  if ( case_height_difference < 20 ) { case_height_difference = 20; }


  // spacer to bottom of screen

  $('#case_events_list').append('<div id="case_list_spacer_1"></div>');

  $('#case_list_spacer_1').css( {  position: 'relative',
                                  'margin-left': left_margin,
                                  'border-left': '5px solid #7f8386',
                                   height: case_height_difference } );



  console.log('status of this case is ' + global_case_info[ global_current_case_id ].status );


  // if status = active, add buttons for adding an event and publish

  var case_list_button_height       = Math.floor( events_width * 0.089 );

  console.log('case_list_button_height ' + case_list_button_height );

  if ( case_list_button_height > 60 ) { case_list_button_height = 60; }


  var case_list_button_left_margin  = Math.floor( events_width * 0.055 );
  var case_list_button_right_margin = Math.floor( events_width * 0.057 );


  if ( global_case_info[ global_current_case_id ].status == 'active' ) {


    $('#case_events_list').append('<div id="case_list_add_event"></div>');

    $('#case_list_add_event').css( {  position: 'relative',
                                     'margin-left': left_margin,
                                     'border-left': '5px solid #7f8386',
                                      height: case_list_button_height } );

    $('#case_list_add_event').append('<div id="case_list_add_event_button"></div>');

    $('#case_list_add_event_button').append('<div id="add_event_text"><center>Add Event</center></div>');

    var add_event_height = $('#add_event_text').height();
    var add_event_top_padding = ( case_list_button_height - add_event_height ) / 2;
    var add_event_button_height = case_list_button_height - add_event_top_padding;

    $('#case_list_add_event_button').css( {  position: 'relative',
                                            'padding-top': add_event_top_padding,
                                            'margin-left': case_list_button_left_margin,
                                            'margin-right': case_list_button_right_margin,
                                             border: '1px solid #cccdcf',
                                            'border-radius': 4,
                                            'background-color': '#f6f6f6',
                                             color: '#545456',
                                             height: add_event_button_height } );

    $('#case_list_add_event_button').on('click', function() { add_event_from_case_events(); } );



    // spacer 

    var case_list_button_spacer_height = Math.floor( case_list_button_height * 0.375 );

    $('#case_events_list').append('<div id="case_list_spacer_2"></div>');

    $('#case_list_spacer_2').css( {  position: 'relative',
                                    'margin-left': left_margin,
                                    'border-left': '5px solid #7f8386',
                                     height: case_list_button_spacer_height } );

  
    // publish

    $('#case_events_list').append('<div id="case_list_publish"></div>');

    $('#case_list_publish').css( {  position: 'relative',
                                   'margin-left': left_margin,
                                   'border-left': '5px solid #7f8386',
                                    height: case_list_button_height } );

    $('#case_list_publish').append('<div id="case_list_publish_button"></div>');

    $('#case_list_publish_button').append('<div id="publish_text"><center>Publish</center></div>');

    var publish_height = $('#publish_text').height();
    var publish_top_padding = ( case_list_button_height - publish_height ) / 2;
    var publish_button_height = case_list_button_height - publish_top_padding;

    $('#case_list_publish_button').css( {  position: 'relative',
                                          'padding-top': publish_top_padding,
                                          'margin-left': case_list_button_left_margin,
                                          'margin-right': case_list_button_right_margin,
                                           border: '1px solid #465e88',
                                          'border-radius': 4,
                                          'background-color': '#5c7097',
                                           color: '#ffffff',
                                           height: publish_button_height } );

    if ( is_mobile ) {
      $('#case_list_publish_button').on('touchend', function() { add_publish_case_input(); } );
    } else {
      $('#case_list_publish_button').on('click', function() { add_publish_case_input(); } );
    }

 

    // bottom spacer

    var case_list_bottom_spacer_height = Math.floor( case_list_button_height * 0.477 );

    $('#case_events_list').append('<div id="case_list_spacer_3"></div>');

    $('#case_list_spacer_3').css( {  position: 'relative',
                                    'margin-left': left_margin,
                                    'border-left': '5px solid #7f8386',
                                     height: case_list_bottom_spacer_height } );

  }

  // end of if status = active



  // last poster, tags

  // var case_list_end_height = Math.floor( events_width * 0.24 );
  var case_list_end_height;

  if ( mode == 'portrait' ) { case_list_end_height = Math.floor( case_list_button_height * 3 ); } 
                       else { case_list_end_height = Math.floor( case_list_button_height * 2 ); }

  $('#case_events_list').append('<div id="case_list_end"></div>');

  $('#case_list_end').css( {  position: 'relative',
                              height: case_list_end_height,
                             'border-top': '1px solid #e7e7e8',
                             'border-bottom': '1px solid #e7e7e8',
                             'background-color': '#f7f7f8' } );


  // last poster

  var case_tags_width  = Math.floor( events_width * 0.70 );
  var case_tags_left   = ( events_width - case_tags_width ) / 2;

  if ( ( typeof comments[0] ) != 'undefined' ) {

    $('#case_list_end').append('<div id="last_poster"><img src="' + comments[0].picture + '">'
                             + '<div style="position: absolute; top: 13; left: 53; width: ' + case_tags_width + '">' + comments[0].poster + ' <font color="#b7b8bb">posted</font> ' + comments[0].timestamp + '</div>'
                             + '</div>');

    var lp_css = {  position: 'absolute',
                    top: 16,
                    left: case_tags_left };

    $('#last_poster').css( lp_css );

    $('#case_list_end').append('<div style="float: none"></div>');

  }
  


  // tags

  var case_tags_height = 40;
  var case_tags_top    = case_list_end_height - ( case_tags_height + 5 );

  var case_tags_top_padding  = Math.floor( case_tags_height * 0.15 );
  var case_tags_left_padding = Math.floor( case_tags_height * 0.3 );
  var case_tags_right_margin = Math.floor( case_tags_left_padding * 0.4 );

  var case_tags_radius = ( case_tags_height + ( case_tags_top_padding * 2 ) ) / 2;

  var tags_height = case_tags_height - case_tags_top_padding;


  $('#case_list_end').append('<div id="case_list_tags"></div>');

  var clt_css = {  position: 'relative',
                   top: case_tags_top,
                   left: case_tags_left,
                   width: case_tags_width,
                   height: tags_height,
                   color: '#545456' };

  $('#case_list_tags').css( clt_css );



  // div on each tag

  var ct_css = {  float: 'left',
                 'padding-top': case_tags_top_padding,
                 'padding-bottom': case_tags_top_padding,
                 'padding-left': case_tags_left_padding,
                 'padding-right': case_tags_left_padding,
                 'margin-right': case_tags_right_margin,
                 'background-color': '#e9e9eb',
                 'border-radius': case_tags_radius };

  var case_tags_max_x = Math.floor( case_tags_width * 0.80 );
  var case_tags_x;
  var case_list_done = 0;

  var last_tag_added;

  for ( var t in tags ) {

    if ( case_list_done != 1 ) {

      $('#case_list_tags').append('<div id="case_tag_' + t + '">' + tags[t].word + '</div>');

      $('#case_tag_' + t).css( ct_css );

      console.log('#case_tag_' + t + ', ' + tags[t].count );

      if ( tags[t].count == 2 ) { $('#case_tag_' + t).css( { 'background-color': '#d9d9db' } ); }
      if ( tags[t].count == 3 ) { $('#case_tag_' + t).css( { 'background-color': '#c9c9cb' } ); }
      if ( tags[t].count == 4 ) { $('#case_tag_' + t).css( { 'background-color': '#b9b9bb' } ); }
      if ( tags[t].count == 5 ) { $('#case_tag_' + t).css( { 'background-color': '#a9a9ab' } ); }
      if ( tags[t].count >  5 ) { $('#case_tag_' + t).css( { 'background-color': '#99999b' } ); }


      last_tag_added = 'case_tag_' + t;


      case_tags_x = $('#case_tag_' + t).position().left + $('#case_tag_' + t).outerWidth();

      if ( case_tags_x > case_tags_max_x ) {

        case_list_done = 1;

      }
 
      // console.log('left of ' + tags[t] + ', ' + $('#case_tag_' + t).position().left );
      // console.log('width of ' + tags[t] + ', ' + $('#case_tag_' + t).outerWidth() );

    }


  }


  // if last tag added is over case tags max x, remove last tag

  if ( ( typeof last_tag_added ) != 'undefined' ) {

    case_tags_x = $('#' + last_tag_added).position().left + $('#' + last_tag_added).outerWidth();

    if ( case_tags_x > case_tags_max_x ) { $('#' + last_tag_added).remove(); }

  }


  
  if ( ( typeof tags[0] ) != 'undefined' ) {

    $('#case_list_tags').append('<div id="case_tag_toggle"> + </div>');

    $('#case_tag_toggle').css ( ct_css );
    $('#case_tag_toggle').css ( {  float: 'right' } );

 
    if ( mode == 'pc' ) {
 
      $('#case_tag_toggle').on('click', function() { toggle_tags_list_display( case_tags_top_padding, case_tags_left_padding, case_tags_right_margin, case_tags_radius, tags ); } );

    } else {

      $('#case_tag_toggle').on('touchend', function() { toggle_tags_list_display( case_tags_top_padding, case_tags_left_padding, case_tags_right_margin, case_tags_radius, tags ); } );

    }


    // float none

    $('#case_list_end').append('<div style="float: none"></div>');

  }



  // set global case events height
  // make this a function call

  setTimeout( function() { 

    global_case_events_height = $('#published_case_header').outerHeight()
                              + $('#patient_info_events').outerHeight()
                              + $('#case_title_background_top').outerHeight()
                              + $('#case_title').outerHeight()
                              + $('#case_title_background_bottom').outerHeight()
                              + $('#case_summary').outerHeight()
                              + $('#case_events_list').outerHeight() 
                              + 50;


    // if global_last_event_selected is set, scroll to that div and then clear it
    // global last event selected top, also ?  scroll to the position that the div was at ?

    if ( ( ( typeof global_last_event_selected ) != 'undefined' ) && ( global_last_event_selected != '' ) ) {

      var n = global_last_event_selected.split('_');
      var i = n[2];

      var event_div       = 'case_event_' + i;
      var event_top       = $('#' + event_div).position().top;
      var case_events_top = -1 * ( event_top - 30 );


      // $('#case_events').css( { top: case_events_top } );


      $('#case_events').animate( { top: case_events_top }, 250, function() {

        // animate the background color ?

        // $('#' + event_div).css( { 'background-color': '#e0f2fc' } );

        // $('#' + event_div).animate( { backgroundColor: '#ffffff' }, 1000 );

        // $('#' + event_div).fadeTo( 1000, 0 );

      } );


      global_last_event_selected = '';

    }

  }, 300 );


}



function toggle_comment_display(e, div) {

  // e.preventDefault();
  e.stopPropagation();


  // called from the toggle div now, not the comment div

  console.log('toggle_comment_display ' + div.id);

  var n = div.id.split('_');
  var i = n[4];

  var comment_div = 'case_event_comment_' + i;


  // event comments text

  var state_text = $('#' + comment_div).text();

  console.log('state_text ' + state_text);


  // comment icon changes from + to - for show


  if ( /^HIDE/.test(state_text) ) {

    // set text to n comments

    var comment_count = window.case_info.events[i].comments.length;

    var count_text = " COMMENTS";
    if ( comment_count == 1 ) { count_text = " COMMENT"; }

    $('#' + comment_div).html('<div id="' + div.id + '" style="padding-top: 5; padding-bottom: 15;">' + comment_count + count_text + '</div>');

    if ( is_mobile ) {
      $('#' + div.id).on('touchend', function(e) { toggle_comment_display(e, this); } );
    } else {
      $('#' + div.id).on('click', function(e) { toggle_comment_display(e, this); } );
    }

  } else {

    // set text to 'hide comments'
    // picture, text, timestamp

    $('#' + comment_div).html('<div id="' + div.id + '" style="padding-top: 5; padding-bottom: 10;">HIDE COMMENTS</div>');

    if ( is_mobile ) {
      $('#' + div.id).on('touchend', function(e) { toggle_comment_display(e, this); } );
    } else {
      $('#' + div.id).on('click', function(e) { toggle_comment_display(e, this); } );
    }

    for ( var c in window.case_info.events[i].comments ) {

      var comment_div_id = 'event_' + i + '_comment_' + c;
      var text_div_id    = 'event_' + i + '_comment_text_' + c;
      var picture_div_id = 'event_' + i + '_comment_picture_' + c;

      $('#' + comment_div).append('<div id="' + comment_div_id + '"></div>');


      var this_comment = window.case_info.events[i].comments[c];


      // picture

      $('#' + comment_div_id).append('<div id="' + picture_div_id + '"><img src="' + this_comment.picture + '"></div>');

      $('#' + picture_div_id).css( {  float: 'left',
                                      width: 46,
                                      height: 46,
                                     'padding-top': 7 } );

      if ( is_mobile ) {
        $('#' + picture_div_id).on('touchend', function() { global_dr_profile = this_comment.poster; load_page('dr_profile'); } );
      } else {
        $('#' + picture_div_id).on('click', function() { global_dr_profile = this_comment.poster; load_page('dr_profile'); } );
      }

      // text

      var comment_text_width = $('#case_events').width() - 270;


      $('#' + comment_div_id).append('<div id="' + text_div_id + '">' + this_comment.text + '</div>');

      $('#' + text_div_id).css( {  float: 'left',
                                   width: comment_text_width,
                                  'padding-top': 6,
                                  'padding-bottom': 10,
                                  'padding-left': 9,
                                   color: '#535154',
                                  'font-family': 'Droid Sans',
                                   font: '14px "Droid Sans", sans-serif' } );

      $('#' + text_div_id).append('<div style="color: #c2c4b9; font: 11px \'Droid Sans\'; padding-top: 5">' 
                                + this_comment.timestamp + ' by ' + this_comment.poster + '</div>');


      $('#' + comment_div_id).append('<div style="clear: both;"></div>');



      // images

      if ( ( typeof this_comment.image ) != 'undefined' ) {

        for ( var j in this_comment.image ) {

          var n = this_comment.image[j].split('.');
          var image_name = n[0];

          // change all spaces to underscore, what else?

          // the image should have the type also
          // checking global image list for every name means they all have to be on that list
          //   or only the local ones are, until they get saved, and then removed from the list

          if ( ( typeof global_images_list[ this_comment.image[j] ] ) != 'undefined' ) {

            $('#' + comment_div_id).append('<div style="width: ' + ( comment_text_width + 46 + 9 ) + '; padding-top: 15; padding-bottom: 5;"><img id="' + image_name + '" src="" /></div>');

            $('#' + image_name).css( { width: '100%',
                                       height: 'auto' } );

            $('#' + image_name).attr('src', global_images_list[ this_comment.image[j] ].src );

          } else {

            // img src = http://tabeeb-db.myimedia.com/ ...

          }


        }

      }



    }

    // spacer at bottom of comment div

    $('#' + comment_div_id).append('<div style="height: 15;"></div>');


  }


  global_case_events_height = $('#published_case_header').outerHeight()
                            + $('#patient_info_events').outerHeight()
                            + $('#case_title_background_top').outerHeight()
                            + $('#case_title').outerHeight()
                            + $('#case_title_background_bottom').outerHeight()
                            + $('#case_summary').outerHeight()
                            + $('#case_events_list').outerHeight()
                            + 50;

}



//---- case-events-touch-functions.js ------------------------------------------------------------------------------------




// tap case event icon to comment on an event

// tap event to comment on it


// tap underlined word in event to display tag information



// move events touch functions from navigation header js to here




var global_event_state = [];

var global_event_dy = 0;

var global_last_event_selected;





function events_touch_start(e) {

  e.preventDefault();

  var touch = e.originalEvent.touches[0];


  touch_move_start.y = touch.pageY;


  global_event_dy = 0;


  if (events_slider_hit_top) { events_top_bar_can_slide = 1 }
                        else { events_top_bar_can_slide = 0 };

  var comment_icon_bar_height = parseInt( $('#comment_icon_bar').height() );

  events_slider_min_y = ( global_screen_height - comment_icon_bar_height ) - global_case_events_height;

}



function events_touch_move(e) {

  e.preventDefault();

  var touch = e.originalEvent.touches[0];


  var dy = touch.pageY - touch_move_start.y;

  global_event_dy = dy;


  nav_header_current_top = nav_header_start_top + dy;

  if ( nav_header_current_top > 0 ) { nav_header_current_top = 0; }

  if ( nav_header_current_top < nav_header_top ) { nav_header_current_top = nav_header_top; }



  // nav bar slides the page down
  // or, slides the comment column and redraws the timeline?
  // nav header is fixed

  /*

  if ( ( nav_header_current_top >= nav_header_top ) && ( nav_header_current_top <= 0 ) ) {

    $('#nav_header_bar').css( { 'top': nav_header_current_top } );


    page_container_top = ( navigation_bar_height + nav_header_current_top );

    $('#page_container').css( { 'top': page_container_top } );

  }

  */


  events_slider_current_top = events_slider_start_top + ( dy * 2 );


  if ( events_slider_current_top < events_slider_top) {

    events_slider_hit_top = 0;

    events_top_bar_can_slide = 0;

  }


  if ( events_slider_current_top > events_slider_top ) {

    if ( events_top_bar_can_slide ) {

      if ( events_slider_current_top > 0 ) { events_slider_current_top = 0; }

    } else {

      events_slider_hit_top = 1;

      events_slider_current_top = events_slider_top;

    }

  }


  if ( events_slider_current_top < events_slider_min_y ) { events_slider_current_top = events_slider_min_y; }


  $('#case_events').css( { 'top': events_slider_current_top } );


};



function events_touch_end(e) {

  e.preventDefault();


  nav_header_start_top = nav_header_current_top;

  events_slider_start_top = events_slider_current_top;

};



function toggle_event_from_icon(div) {

  $('#patient_text').html('toggle icon ' + div.id);

}



function toggle_event_from_paragraph(div) {

  if ( global_event_dy == 0 ) {

    if ( global_event_state[div.id] == 'not selected' ) {

      $('#' + div.id).css( { 'background-color': '#e0f2fc' } );

      global_event_state[div.id] = 'selected';


      $('#' + global_last_event_selected).css( { 'background-color': '' } );

      global_event_state[global_last_event_selected] = 'not selected';


      global_last_event_selected = div.id;


      // turn off last comment if selected


    } else {

      $('#' + div.id).css( { 'background-color': '' } );

      global_event_state[div.id] = 'not selected';

      global_last_event_selected = '';

    }

  }


}



function display_tag_information(div, word) {



}


//---- case-events-hgraph-functions.js ------------------------------------------------------------------------------------




// case-events-hgraph-functions.js


// canvas for hgraph in case events instead of divs


// hgraph object?



function create_hgraph_icon( patient_div, patient_info_height, case_title_background_left_margin ) {

  console.log('create_hgraph_icon, patient_div ' + patient_div);

  var half_height = patient_info_height / 2;
  var hgraph_x = case_title_background_left_margin + 2;

  var hgraph_radius = Math.floor( case_title_background_left_margin * 0.68 );

  $('#' + patient_div).append('<canvas id="canvas" width="' + patient_info_height + '" height="' + patient_info_height + '"></canvas>');

  var c = $('#canvas')[0].getContext("2d");

  c.strokeStyle = "rgba(153, 189, 142, 1)";

  c.lineWidth = 10;
  c.beginPath();
  c.arc(hgraph_x, half_height, hgraph_radius, 0, Math.PI*2, true);
  c.closePath();
  c.stroke();

  // for i in hgraph object
  // angle = 360 / hgraph.length
  // radius = hgraph.i.value, between max and min
  // color = outside of max or min

}



//---- case-events-status-menu-functions.js ------------------------------------------------------------------------------------




// case-status-menu-functions.js

// publish, edit, delete, under 'active' button in case events view

// text is set to case_info.status


// edit calls create case, create case checks global_case_info[case_id].status of active



var global_case_status_button_menu_state = 'hidden';




function toggle_case_status_button_menu() {


  if ( global_case_status_button_menu_state == 'hidden' ) {

    $('body').append('<div id="status_button_menu_shade"></div>');

    $('#status_button_menu_shade').css( { position: 'absolute',
                                          top: 0,
                                          left: 0,
                                          width: $(window).width(),
                                          height: $(window).height(),
                                         'z-index': 100,
                                         'background-color': '#000000',
                                          opacity : 0 } );

    $('#status_button_menu_shade').on('click', function() { toggle_case_status_button_menu(); } );

    $('#status_button_menu_shade').fadeTo(200, 0.3);


    $('#status_button_menu').show();

    global_case_status_button_menu_state = 'showing';

  } else {

    $('#status_button_menu').hide();

    $('#status_button_menu_shade').fadeTo(200, 0, function() { $('#status_button_menu_shade').remove(); } );

    global_case_status_button_menu_state = 'hidden';

  }


}



// "create the case status button menu", status button is in case events view, not create case

function create_case_status_button_menu( menu_top, menu_left, menu_width, status_button_height, menu_font_size, case_status ) {

  // case status is active or published
  // cases with draft status are not loaded into case events 

  // if case status is active, buttons are publish and edit
  // if case status is published, button is re-open


  if ( case_status == 'active' ) {

    var menu_height = Math.floor( status_button_height * 2.304 );

    $('body').append('<div id="status_button_menu"></div>');

    var sbm_css = { position: 'absolute',
                    top: menu_top,
                    left: menu_left,
                    width: menu_width,
                    height: menu_height,
                   'z-index': 101,
                // 'border-radius': 4,
                   'background-color': '#ffffff',
                   'box-shadow': '0px 0px 2px 1px #c4c5c7' };

    $('#status_button_menu').css( sbm_css );


    // triangle, on top of menu

    var square_edge = 8;

    var triangle_top  = 0 - ( square_edge / 2 );
    var triangle_left = ( ( menu_width / 2 ) - ( square_edge / 2 ) );

    $('#status_button_menu').append('<div id="status_button_triangle"></div>');

    var sbt_css = { position: 'absolute',
                    top: triangle_top,
                    left: triangle_left,
                    width: square_edge,
                    height: square_edge,
                   'background-color': '#ffffff',
                    transform: 'rotate(45deg)',
                // 'box-shadow': '0px 0px 4px 2px #c4c5c7'
                  };

    $('#status_button_triangle').css( sbt_css );



    // publish button

    var menu_button_height = Math.floor( menu_height / 2 );

    $('#status_button_menu').append('<div id="publish_button"><center>Publish</center></div>');

    var publish_text_height = $('#publish_button').height();
    var publish_button_top_padding = ( menu_button_height - publish_text_height ) / 2;
    var publish_button_height = menu_button_height - publish_button_top_padding;

    $('#publish_button').css( { width: menu_width,
                                height: publish_button_height,
                               'padding-top': publish_button_top_padding,
                                color: '#545456',
                               'border-bottom': '1px solid #eeeeef' } );

    // publish button on click, set status to published, set case list filter to published, re-load the case

    $('#publish_button').on('click', function() { 

      toggle_case_status_button_menu();

      add_publish_case_input(); 

    } );



    // edit button

    $('#status_button_menu').append('<div id="edit_button"><center>Edit</center></div>');

    var edit_text_height = $('#edit_button').height();
    var edit_button_top_padding = ( menu_button_height - edit_text_height ) / 2;
    var edit_button_height = menu_button_height - edit_button_top_padding;

    $('#edit_button').css( { width: menu_width,
                             height: edit_button_height,
                            'padding-top': edit_button_top_padding,
                             color: '#545456' } );

    $('#edit_button').on('click', function() { 

      // create case checks global_case_info[global_current_case_id].status

      console.log('global_current_case_id ' + global_current_case_id);

      // discard changes has to show the case event page again

      global_previous_screen = 'case_events';

      load_page('create_case'); 

    } );


  }

  // end of if case status = active



  if ( case_status == 'published' ) {

    var menu_height = Math.floor( status_button_height * 1.152 );

    $('body').append('<div id="status_button_menu"></div>');

    var sbm_css = { position: 'absolute',
                    top: menu_top,
                    left: menu_left,
                    width: menu_width,
                    height: menu_height,
                   'z-index': 101,
                // 'border-radius': 4,
                   'background-color': '#ffffff',
                   'box-shadow': '0px 0px 2px 1px #c4c5c7' };

    $('#status_button_menu').css( sbm_css );


    // triangle, on top of menu

    var square_edge = 8;

    var triangle_top  = 0 - ( square_edge / 2 );
    var triangle_left = ( ( menu_width / 2 ) - ( square_edge / 2 ) );

    $('#status_button_menu').append('<div id="status_button_triangle"></div>');

    var sbt_css = { position: 'absolute',
                    top: triangle_top,
                    left: triangle_left,
                    width: square_edge,
                    height: square_edge,
                   'background-color': '#ffffff',
                    transform: 'rotate(45deg)',
                // 'box-shadow': '0px 0px 4px 2px #c4c5c7'
                  };

    $('#status_button_triangle').css( sbt_css );



    // re-open button

    var menu_button_height = menu_height;

    $('#status_button_menu').append('<div id="reopen_button"><center>Re-Open</center></div>');

    var reopen_text_height = $('#reopen_button').height();
    var reopen_button_top_padding = ( menu_button_height - reopen_text_height ) / 2;
    var reopen_button_height = menu_button_height - reopen_button_top_padding;

    $('#reopen_button').css( { width: menu_width,
                               height: reopen_button_height,
                              'padding-top': reopen_button_top_padding,
                               color: '#545456',
                              'border-bottom': '1px solid #eeeeef' } );

    // re-open button on click, set status to active, set case list filter to active, load case list

    $('#reopen_button').on('click', function() {

      global_case_info[ global_current_case_id ].status = 'active';

      global_case_list_filter_option_status = 'active';

      ping_server_and_update_global_current_case();

      load_page('case_list');

    } );


  }



  $('#status_button_menu').hide();

}



function ping_server_and_update_global_current_case() {

    $.ajax( { contentType: 'application/json',
            type: 'GET',
            url: '/api/ping_server.json',
            timeout: 4000,
            dataType: 'json',

            success: function( data, textStatus ) {

              console.log('ping_server, textStatus ' + textStatus + ', ' + JSON.stringify( data, undefined, 2 ) );

              global_server_timestamp = data.server_time_stamp;


              // update case

              $.ajax( { contentType: 'application/json',
                        type: 'POST',
                        url: '/api/update_case.json',
                        data: JSON.stringify( global_case_info[ global_current_case_id ] ),

                        success: function( data, textStatus ) {

                          console.log('update case, ajax success, textStatus ' + textStatus + ', data ' + JSON.stringify( data, undefined, 2 ) );

                          // update server timestamp

                        },

                        error: function( jqXHR, textStatus, errorThrown ) {

                          console.log('update case, ajax error, textStatus ' + textStatus + ', errorThrown ' + errorThrown );

                        },

                        dataType: 'json',
                        processData: false
              } );


            },

            error: function( jqXHR, textStatus, errorThrown ) {

              console.log('ping_server, textStatus ' + textStatus + ', error from the api');

              // add reopen case event to retry queue of asynchronous retry function

            },

            processData: false

  } );


}



//---- case-events-tag-functions.js ------------------------------------------------------------------------------------



// case-events-tag-functions.js



// display case tags at the end of case events



var global_tags_display_state = 'hidden';

var global_tags_hidden_height;

// set this in case events after the first tags are done

// record which tags are showing
// or use the same code, add tags until over 75% and then remove etc?


// toggle fades all but the ones that were showing, and animates the size of the tags div back to hidden_height



function toggle_tags_list_display( case_tags_top_padding, case_tags_left_padding, case_tags_right_margin, case_tags_radius, tags ) {

  if ( global_tags_display_state == 'hidden' ) {

    global_tags_display_state = 'showing';


    var case_tags_width = $('#case_list_tags').width();

    var ct_css = {  float: 'left',
                   'padding-top': case_tags_top_padding,
                   'padding-bottom': case_tags_top_padding,
                   'padding-left': case_tags_left_padding,
                   'padding-right': case_tags_left_padding,
                   'margin-right': case_tags_right_margin,
                   'margin-top': case_tags_right_margin,
                   'background-color': '#e9e9eb',
                   'border-radius': case_tags_radius };


    // remove the tags from case events

    $('#case_list_tags').html('');


    var last_tag_added;
  
    for ( var t in tags ) {

      $('#case_list_tags').append('<div id="case_tag_' + t + '">' + tags[t].word + '</div>');

      $('#case_tag_' + t).css( ct_css );

      console.log('#case_tag_' + t + ', ' + tags[t].count );

      if ( tags[t].count == 2 ) { $('#case_tag_' + t).css( { 'background-color': '#d9d9db' } ); }
      if ( tags[t].count == 3 ) { $('#case_tag_' + t).css( { 'background-color': '#c9c9cb' } ); }
      if ( tags[t].count == 4 ) { $('#case_tag_' + t).css( { 'background-color': '#b9b9bb' } ); }
      if ( tags[t].count == 5 ) { $('#case_tag_' + t).css( { 'background-color': '#a9a9ab' } ); }
      if ( tags[t].count >  5 ) { $('#case_tag_' + t).css( { 'background-color': '#99999b' } ); }

      last_tag_added = 'case_tag_' + t;

    }



    // add a ( - ) button to toggle the display to closed


    // set height of case list tags to last tag added + height + padding

    var last_tag_top    = $('#' + last_tag_added).position().top;
    var last_tag_height = $('#' + last_tag_added).outerHeight();

    var case_tags_top    = $('#case_list_tags').position().top;
    var case_tags_height = case_tags_top + last_tag_top + last_tag_height + 20;

    $('#case_list_end').css( { height: case_tags_height } );


  } else {

    // global tags display state == showing

    // remove tags, redraw tags, copy from case events

  }



  // set global case events height

  setTimeout( function() {

    global_case_events_height = $('#published_case_header').outerHeight()
                              + $('#patient_info_events').outerHeight()
                              + $('#case_title_background_top').outerHeight()
                              + $('#case_title').outerHeight()
                              + $('#case_title_background_bottom').outerHeight()
                              + $('#case_summary').outerHeight()
                              + $('#case_events_list').outerHeight()
                              + 50;

  }, 300 );


  scroll_case_events_to_the_end();


}




//---- case-events-add-event-functions.js ------------------------------------------------------------------------------------




// case-events-add-event-functions.js




function add_event_from_case_events() {

  console.log('add_event_from_case_events');




}




//---- case-events-publish-functions.js ------------------------------------------------------------------------------------




// case-events-publish-functions.js


var global_publish_section_is_added = 0;

var global_most_helpful_doctor = '';



function add_publish_case_input() {

  console.log('add_publish_case_input');


  scroll_case_events_to_the_end();


  if ( global_publish_section_is_added == 1 ) { return; }

  global_publish_section_is_added = 1;



  // conclusion text is "Enter the diagnosis..."

  conclusion_text_start = 1;


  // toggle tags display if open
  // leave open ?



  // hide add event and publish buttons

  // animate height of add event, publish, and spacer 2 to 0.
  // leave spacer 1.  spacer 3 gets text and icon for conclusion

  // leave last poster and tags, cancel and publish buttons in a separate div


  $('#case_list_add_event_button').animate( { opacity: 0 }, 500 );

  $('#case_list_publish_button').animate( { opacity: 0 }, 500, function() {

    $('#case_list_add_event').animate( { height: 0 }, 500 );
    $('#case_list_spacer_2').animate(  { height: 0 }, 500 );
    $('#case_list_publish').animate(   { height: 0 }, 500 );


    // add publish section input divs after the title height and publish section height are done

    var case_events_width = $('#case_events_list').width();

    // if landscape, * 0.5
    // if pc, * 0.75
    // get height from portrait and set max height for pc and landscape
    // animate case list spacer 3 height to case publish title height

    var case_publish_title_height = Math.floor( case_events_width * 0.2 );

    if ( case_publish_title_height > 65 ) { case_publish_title_height = 65; }

    var case_publish_section_height = case_events_width - ( case_publish_title_height * 3 );


    // publish inputs

    $('#case_list_spacer_3').after('<div id="case_publish_section"></div>');

    $('#case_publish_section').css( {  position: 'relative',
                                       left: 0,
                                       height: 0,
                                       width: case_events_width } );

    $('#case_publish_section').animate( { height: case_publish_section_height }, 500 );


    // spacer 3 gets title

    $('#case_list_spacer_3').animate( { height: case_publish_title_height }, 500, function() {

      add_publish_case_divs( case_events_width );

    } );


  } );



  function add_publish_case_divs( case_events_width ) {


    // input text area

    // mark as resolved
    // choose doctor
    // set most helpful on doctor for case events comments display

    $('#case_list_spacer_3').append('<div id="case_conclusion">Case Conclusion</div>');

    $('#case_conclusion').css( { 'padding-top': 0,
                                 'padding-left': 30,
                                  color: '#545456',
                                  font: 'bold 27px "Droid Sans", sans-serif',
                                  opacity: 0 } );

    $('#case_conclusion').animate( { opacity: 1 }, 500 );


    // today's date

    $('#case_list_spacer_3').append('<div id="case_conclusion_date">Today</div>');

    $('#case_conclusion_date').css( { 'padding-top': 0,
                                      'padding-left': 30,
                                       color: '#c2c4b9',
                                       font: '14px "Droid Sans", sans-serif',
                                       opacity: 0 } );

    $('#case_conclusion_date').animate( { opacity: 1 }, 500 );





    // text input

    var case_conclusion_left_margin = 20;
    var case_conclusion_input_width = case_events_width - ( case_conclusion_left_margin * 2 );
    var case_conclusion_input_height = Math.floor( case_conclusion_input_width * 0.35 );

    $('#case_publish_section').append('<div id="case_conclusion_input"></div>');

    $('#case_conclusion_input').css( { 'margin-top': 0,
                                       'margin-left': case_conclusion_left_margin,
                                        width: case_conclusion_input_width,
                                        height: case_conclusion_input_height } );

    $('#case_conclusion_input').addClass('blue_drop_shadow');


    // add div for inset shadow

    $('#case_conclusion_input').append('<div id="case_conclusion_input_inset_shadow_div"></div>');

    $('#case_conclusion_input_inset_shadow_div').css( {  position: 'relative',
                                                         height: case_conclusion_input_height,
                                                         width: case_conclusion_input_width,
                                                         top: 0,
                                                         left: 0,
                                                        'box-shadow': 'inset 0px 0px 3px 1px rgba(0, 0, 0, .4)' } );


    // add input text div

    // textarea does not handle touch events ?

    $('#case_conclusion_input_inset_shadow_div').append('<textarea id="conclusion_text_input" name="conclusion_text_input">');

    // $('#case_conclusion_input_inset_shadow_div').append('<div id="conclusion_text_input"></div>');

    $('#conclusion_text_input').css( {  padding: 5,
                                        height: case_conclusion_input_height - ( 20 + 0 ),
                                        width: case_conclusion_input_width - ( 20 + 0 ),
                                       'margin-top': 10,
                                       'margin-left': 10,
                                        border: 'none',
                                        outline: 'none',
                                        resize: 'none',
                                        color: '#b3b4b7',
                                       'font-family': 'Droid Sans',
                                       'font': '15px "Droid Sans", sans-serif' } );

    // $('#conclusion_text_input').attr('contentEditable', 'true');

    $('#conclusion_text_input').html('Enter the diagnosis and/or treatment that helped you with the case...');

    if ( is_mobile) {
      $('#conclusion_text_input').on('touchend', function() { change_conclusion_text_input_color(); $('#conclusion_text_input').focus(); } );
    } else {
      $('#conclusion_text_input').on('click', function() { change_conclusion_text_input_color(); } );
    }



    // mark as resolved

    $('#case_publish_section').append('<div id="mark_as_resolved"></div>');

    $('#mark_as_resolved').css( { 'margin-top': 20,
                                  'margin-left': case_conclusion_left_margin,
                                   font: '15px "Droid Sans", sans-serif' } );
    
    $('#mark_as_resolved').append('<input type="checkbox" id="case_resolved" name="case_resolved" style="float: left;">');

    $('#mark_as_resolved').append('<div style="float: left; padding-left: 10; padding-top: 2;">Mark as Resolved: I got the help I needed.</div>');

    $('#mark_as_resolved').on('touchstart', function() { $('#conclusion_text_input').blur(); $('#case_resolved').click(); } );

    $('#case_events_list').on('touchstart', function() { $('#conclusion_text_input').blur(); } );



    // choose doctor

    $('#case_publish_section').append('<div style="clear: both;"></div>');

    if ( ( typeof window.case_info.comments ) != 'undefined' ) {

      if ( window.case_info.comments.length > 0 ) {

        $('#case_publish_section').append('<div style="margin-top: 40; margin-left: ' + case_conclusion_left_margin + '; font: 15px \'Droid Sans\', sans-serif;">Choose the Most Helpful Doctor</div>');

      }

    }


    // get the doctors from comments

    // object with doctor's name as key, get count of comments and helpful

    var case_doctors = {};
    var case_doctors_list = [];

    for ( var c in window.case_info.comments ) {

      var this_comment = window.case_info.comments[c];

      if ( ( typeof case_doctors[ this_comment.poster ] ) == 'undefined' ) {
        var info = {};
        case_doctors[ this_comment.poster ] = info;
      }


      if ( ( typeof case_doctors[ this_comment.poster ].picture ) == 'undefined' ) {

        case_doctors[ this_comment.poster ].picture = this_comment.picture;

      }


      if ( ( typeof case_doctors[ this_comment.poster ].count ) == 'undefined' ) {
        case_doctors[ this_comment.poster ].count = 1;
      } else {
        case_doctors[ this_comment.poster ].count++;
      }


      if ( ( typeof this_comment.helpful ) != 'undefined' ) {

        if ( ( typeof case_doctors[ this_comment.poster ].helpful ) == 'undefined' ) {
          case_doctors[ this_comment.poster ].helpful = 0;
        }

        case_doctors[ this_comment.poster ].helpful += this_comment.helpful;

      } else {

        case_doctors[ this_comment.poster ].helpful = 0;

      }


    }


    // for keys of that object, create an object with doctor's name, count of comments, and count of helpful
    //   push that on to an array
    // sort that array by count of helpful

    for ( var d in case_doctors ) {

      var doctor_info = {};

      doctor_info.name = d;
      doctor_info.count = case_doctors[d].count;
      doctor_info.helpful = case_doctors[d].helpful;
      doctor_info.picture = case_doctors[d].picture;

      case_doctors_list.push( doctor_info );

    }


    // sort doctors by total comments

    case_doctors_list = case_doctors_list.sort( function (a, b) {

      if ( a.count > b.count ) { return -1; }
      if ( a.count < b.count ) { return 1; }

    } );


    // append doctors to case publish section

    var doctor_count = 0;
    var last_doctor;

    for ( var d in case_doctors_list ) {

      // append a float clear div before every even d

      var doctor_left_margin = case_conclusion_left_margin + 15; 


      if ( Math.floor( doctor_count / 2 ) == ( doctor_count / 2 ) ) {

        $('#case_publish_section').append('<div style="clear: both;"></div>');

        // doctor_left_margin = case_conclusion_left_margin + 0; 

      }

      doctor_count++;


      var div_id = case_doctors_list[d].name.replace(' ', '_');

      $('#case_publish_section').append('<div id="' + div_id + '" style="float: left;"></div>');

      $('#' + div_id).css( { 'margin-top': 20,
                             'margin-left': doctor_left_margin,
                              font: '15px "Droid Sans", sans-serif' } );

      $('#' + div_id).append('<table><tr><td><img src="' + case_doctors_list[d].picture + '"></td>'
                           + '<td><div style="padding-left: 6;">'
                           + '<div style="font: bold 14px \'Droid Sans\';">' + case_doctors_list[d].name + '</div>'
                           + '<div style="font: 14px \'Droid Sans\';">' + case_doctors_list[d].count + ' Comments - ' + case_doctors_list[d].helpful + ' Helpful</div>'
                           + '</div></td></tr></table>');

      if ( is_mobile ) {
        $('#' + div_id).on('touchend', function() { choose_most_helpful_doctor( this ); } );
      } else {
        $('#' + div_id).on('click', function() { choose_most_helpful_doctor( this ); } );
      }


      last_doctor = div_id;

    }


    // clear floats

    $('#case_publish_section').append('<div style="clear: both;"></div>');



    // space after doctors

    var spacer_after_doctors_height = 30;

    $('#case_publish_section').append('<div id="spacer_after_doctors" style="height: ' + spacer_after_doctors_height + ';"></div>');



    // cancel and publish buttons

    // button height is same as nav bar button
    // background is about half the button height above and below the button

    var events_width = $('#case_events').width();

    var nav_header_height = parseInt( $('#nav_header_bar').height() );

    var button_top_padding = 6;
    var button_font_size = 16;

    if (nav_header_height > 40) {

      var bar_height_difference = nav_header_height - 40;
      var padding_increase = Math.floor(bar_height_difference / 3);
      button_top_padding = button_top_padding + padding_increase;

    }


    // get button width from screen width

    var button_width = 120;
    var button_height = nav_header_height - ( 10 + button_top_padding );

    var button_css = {  width: button_width,
                        height: button_height,
                       'padding-top': button_top_padding,
                       'border-radius': 4,
                        color: '#ffffff',
                       'background-color': '#0084cb',
                       'font-family': 'Droid Sans',
                        font: button_font_size + 'px "Droid Sans", sans-serif' };


    // publish buttons background

    var publish_button_background_height = ( button_height * 2 ) + button_top_padding;
    var publish_button_top = button_height / 2;

    $('#case_publish_section').append('<div id="publish_button_div"></div>');

    var pbd_css = {  height: publish_button_background_height,
                    'background-color': '#f7f7f8' };

    $('#publish_button_div').css( pbd_css );



    // publish button

    $('#publish_button_div').append('<div id="publish_case_button"><center>Publish</center></div>');

    $('#publish_case_button').css( button_css );

    var publish_button_left = events_width - ( button_width + publish_button_top + 8 );

    $('#publish_case_button').css( {  position: 'relative',
                                      top: publish_button_top,
                                      left: publish_button_left } );

    if ( is_mobile ) {
      $('#publish_case_button').on('touchend', function() { publish_this_case(); } );
    } else {
      $('#publish_case_button').on('click', function() { publish_this_case(); } );
    }


    // cancel button

    $('#publish_button_div').append('<div id="cancel_publish_button"><center>Cancel</center></div>');

    var cancel_button_css = {  width: button_width,
                               height: button_height,
                              'padding-top': button_top_padding,
                              'border': '1px solid #c8c9cb',
                              'border-radius': 4,
                               color: '#545456',
                              'background-color': '#f3f3f4',
                              'font-family': 'Droid Sans',
                               font: button_font_size + 'px "Droid Sans", sans-serif' };

    $('#cancel_publish_button').css( cancel_button_css );

    var cancel_button_left = events_width - ( ( ( button_width + publish_button_top ) * 2 ) + 15 );

    $('#cancel_publish_button').css( { position: 'relative',
                                       top: ( publish_button_top - ( button_height + button_top_padding ) ),
                                       left: cancel_button_left } );

    if ( is_mobile ) {
      $('#cancel_publish_button').on('touchend', function() { cancel_publish_this_case(); } );
    } else {
      $('#cancel_publish_button').on('click', function() { cancel_publish_this_case(); } );
    }



    // adding a border to the cancel button changes the height of the background ?

    $('#publish_button_div').css( { height: publish_button_background_height } );




    // set the height of case publish section, last doctor + spacer + buttons

    // if defined

    var last_doctor_top = $('#spacer_after_doctors').position().top;
    var last_doctor_height = 0;

    if ( $('#' + last_doctor).length > 0 ) {

      last_doctor_top    = $('#' + last_doctor).position().top;
      last_doctor_height = $('#' + last_doctor).outerHeight();

    }

    var case_publish_height = last_doctor_top + last_doctor_height 
                            + spacer_after_doctors_height + publish_button_background_height + 20;

    $('#case_publish_section').css( { height: case_publish_height } );


    setTimeout( function() { scroll_case_events_to_the_end(); }, 20 );

  }



  // global_case_info[global_current_case_id].status = 'published';

  // load the case with status of published.  set filter to published also?
  // global_case_list_filter_option_status = 'published';

  // load_page('case_events');

}



function scroll_case_events_to_the_end() {

  // pass the 500 ?

  global_case_events_height = $('#published_case_header').outerHeight()
                            + $('#patient_info_events').outerHeight()
                            + $('#case_title_background_top').outerHeight()
                            + $('#case_title').outerHeight()
                            + $('#case_title_background_bottom').outerHeight()
                            + $('#case_summary').outerHeight()
                            + $('#case_events_list').outerHeight()
                            + 50;

  var comment_icon_bar_height = parseInt( $('#comment_icon_bar').height() );

  
  var case_events_end = ( global_screen_height - comment_icon_bar_height ) - global_case_events_height;

  $('#case_events').animate( { top: case_events_end }, 500 );


  events_slider_start_top = case_events_end;

}



function choose_most_helpful_doctor( div ) {

  console.log('choose_most_helpful_doctor ' + div.id );

  var most_helpful_doctor = div.id.replace('_', ' ');


  // toggle background color of doctor

  // if the background color of this helpful doctor is not set,
  //   set background color
  //   global most helpful = this most helpful
  // else
  //   clear background color
  //   global most helpful = ''

  var current_background = $('#' + div.id).css('background-color');
 
  // console.log('background color of ' + div.id + ' is ' + current_background );

  var global_most_helpful_doctor_div = global_most_helpful_doctor.replace(' ', '_');


  // set current background if white
  // else, set background to white and set most helpful to ''

  if ( current_background == 'rgba(0, 0, 0, 0)' ) {

    console.log('background is white');

    $('#' + div.id).css( { 'background-color': '#e0f2fc' } )


    if ( global_most_helpful_doctor != '' ) {

      $('#' + global_most_helpful_doctor_div).css( { 'background-color': '' } );

    }

    window.case_info.most_helpful = most_helpful_doctor;

    global_most_helpful_doctor = most_helpful_doctor;


  } else {

    console.log('background is ' + current_background );

    $('#' + div.id).css( { 'background-color': '' } );

    window.case_info.most_helpful = '';

    global_most_helpful_doctor = '';

  }


  console.log('most helpful doctor is ' + window.case_info.most_helpful );

}



function change_conclusion_text_input_color() {

  if ( conclusion_text_start == 1 ) {

    $('#conclusion_text_input').css( { color: '#000000' } );

    $('#conclusion_text_input').html('');
    
    conclusion_text_start = 0;

  }

}



function publish_this_case() {

  console.log('publish_this_case');

  // case_id

  console.log('global_current_case_id is ' + global_current_case_id );


  // conclusion

  // if pc, textarea val()
  // else, textarea text()

  var conclusion = $('#conclusion_text_input').val();

  console.log('conclusion is ' + conclusion );


  // status

  // if pc, case_resolved state
  // else, div state

  var status = '';

  if ( $('#case_resolved').is( ':checked' ) ) { status = 'resolved'; }

  console.log('status is ' + status );


  // most helpful doctor has to set id from the div

  // global most helpful doctor

  var helpful_doctor_id = '';



  var publish_info = { case_id: global_current_case_id,
                       conclusion: conclusion,
                       status: status,
                       helpful_doctor_id: helpful_doctor_id };

  console.log('publish_info is ' + JSON.stringify( publish_info, undefined, 2 ) );



  // ping the server

  $.ajax( { contentType: 'application/json',
            type: 'GET',
            url: '/api/ping_server.json',
            timeout: 4000,
            dataType: 'json',

            success: function( data, textStatus ) {

              console.log('ping_server, textStatus ' + textStatus + ', ' + JSON.stringify( data, undefined, 2 ) );

              global_server_timestamp = data.server_time_stamp;


              // publish case
              
              $.ajax( { contentType: 'application/json',
                        type: 'POST',
                        url: '/api/publish_case.json',
                        data: JSON.stringify( publish_info ),

                        success: function( data, textStatus ) {

                          console.log('publish, ajax success, textStatus ' + textStatus + ', data ' + JSON.stringify( data, undefined, 2 ) );

                        },

                        error: function( jqXHR, textStatus, errorThrown ) {

                          console.log('publish, ajax error, textStatus ' + textStatus + ', errorThrown ' + errorThrown );

                        },

                        dataType: 'json',
                        processData: false

                      } );


            },

            error: function( jqXHR, textStatus, errorThrown ) {

              console.log('ping_server, textStatus ' + textStatus + ', error from the api');

              // add publish event to retry queue of asynchronous retry function

            },

            processData: false

          } );





  global_case_info[ global_current_case_id ].status = 'published';
  global_case_info[ global_current_case_id ].conclusion = conclusion;
  global_case_info[ global_current_case_id ].resolved_state = status;
  global_case_info[ global_current_case_id ].helpful_doctor = helpful_doctor_id;


 
  // load the case with status of published.  set filter to published also?

  global_case_list_filter_option_status = 'published';

  load_page('case_events');


}



function cancel_publish_this_case() {

  global_publish_section_is_added = 0;

  load_page('case_events');

}



//---- case-summary.js ------------------------------------------------------------------------------------



// load case summary, add opacity divs, onclick resize animation for summary div



var global_case_summary_height;
var global_case_summary_bottom;
var global_case_summary_state = 'show';



function load_case_summary(case_summary, width, left_margin, left_padding, right_padding) {

  $('#case_events').append('<div id="case_summary">&nbsp;</div>');

  $('#case_summary').css( { 'padding-left': left_padding,
                            'padding-right': right_padding,
                            'padding-bottom': 32,
                            'margin-left': left_margin,
                            'margin-top': 0,
                            'border-left': '5px solid #7f8386',
                            'overflow': 'hidden',
                            'width': width,
                            'font-family': 'Droid Sans',
                            'font': '15px "Droid Sans", sans-serif',
                            'color': '#535154' } );

  $('#case_summary').html(case_summary);

  global_case_summary_height = $('#case_summary').height();

  $('#case_summary').on('click touchstart', function() { toggle_case_summary(width, left_padding, right_padding); } );

}



function toggle_case_summary(width, left_padding, right_padding) {

  if (global_case_summary_state == 'show') {

    $('#case_summary').css( { 'height': 40,
                              'padding-bottom': 25 } );

    global_case_summary_state = 'closed';

    var case_summary_bottom = $('#case_summary').offset().top + $('#case_summary').outerHeight();

    add_case_summary_opacity_divs(width, left_padding, right_padding, case_summary_bottom);

  } else {

    var case_summary_padding_bottom = 36;

    if (is_mobile) { case_summary_padding_bottom = 18; }

    $('#case_summary').css( { 'height': global_case_summary_height,
                              'padding-bottom': case_summary_padding_bottom } );

    global_case_summary_state = 'show';

    for (var i = 0; i < 10; i++) {
      var div_id = 'case_summary_opacity_div_' + i;
      $('#' + div_id).remove();
    }

  }


}



function add_case_summary_opacity_divs(width, left, right, bottom) {

  var div_height = 5;

  var div_left = $('#case_summary').left;

  var opacity_step = 0.1;

  for (var i = 0; i < 10; i++) {

    var div_top = bottom - ( ( i + 1 ) * div_height );

    var div_opacity = ( 10 - i ) * opacity_step;

    var div_id = 'case_summary_opacity_div_' + i;

    $('#case_summary').append('<div id="' + div_id + '"></div>');

    $('#' + div_id).css('position', 'absolute');
    $('#' + div_id).offset( { left: div_left, top: div_top } );
    $('#' + div_id).css( { 'background-color': '#ffffff',
                           'opacity': div_opacity,
                           'height': div_height,
                           'width': width,
                           'z-index': 9 } );

  }

}



//---- case-comments.js ------------------------------------------------------------------------------------



// load case comments, add case comment, swipe or click to set comment helpful
// tap to scroll to event where comment was added
// tap to visit DR's profile



var global_dr_profile = '';
var global_patient_name = '';
var global_comments_width;



// change case info to global_case_info



function load_case_comments(case_info) {

  var comments_width  = $('#case_comments').width();


  // patient info bar at the top, comment icons bar at the bottom

  var patient_profile_height = 90;
  var patient_icons_height   = 40;
  var patient_info_height    = patient_profile_height + patient_icons_height;


  var nav_header_bar_height = $('#nav_header_bar').height();

  // var comment_icon_bar_height = 40;

  var comment_icon_bar_height = Math.floor( nav_header_bar_height * 1.4 );


  patient_info_height = 0;


  /* 

  // add patient info, moved to events slider in case v08

  $('#case_comments').append('<div id="patient_info"></div>');

  $('#patient_info').css( { 'float': 'top',
                            'width': comments_width,
                            'height': patient_info_height,
                            'background-color': '#2d2b2c' } ); 


  $('#patient_info').append('<div id="patient_profile"></div>');

  $('#patient_profile').css( { 'float': 'top',
                               'width': comments_width,
                               'height': patient_profile_height,
                               'border-bottom': '1px solid #444444', } );


 
  var patient_picture_left = ( comments_width - 46 ) / 2;

  $('#patient_profile').append('<div id="patient_picture"><img src="' + case_info.picture + '"></div>');

  $('#patient_picture').css({ 'position': 'absolute',
                              'width': 46,
                              'height': 46,
                              'top': 7,
                              'left': patient_picture_left });

  $('#patient_profile').on('click', function() { global_patient_name = case_info.name; load_page('patient_info'); } );



  var patient_name_top = 7 + 46 + 7;

  $('#patient_profile').append('<div id="patient_name" style="font: bold 14px \'Droid Sans\';">' + case_info.name + '</div>');

  $('#patient_name').css( { 'position': 'absolute',
                            'top': patient_name_top,
                            'color': '#f8f8ff' });

  var patient_name_width = parseInt( $('#patient_name').width() );
  var patient_name_left = ( comments_width - patient_name_width ) / 2;

  $('#patient_name').css( { 'left': patient_name_left } );




  $('#patient_info').append('<div id="patient_text"></div>');

  $('#patient_text').append('<div style="font: 15px \'Droid Sans\'; padding-left: 3;">' + case_info.age + ', ' + case_info.gender + ', USA</div>');

  $('#patient_text').css( { 'position': 'absolute',
                            'top': ( patient_profile_height + 13 ),
                            'left': 13,
                            'color': '#f8f8ff' });


  // add divs, borders, gender icon, case_info.country to patient_text

  */



  // comments container

  var comments_container_height = global_screen_height - ( patient_info_height + comment_icon_bar_height );;

  $('#case_comments').append('<div id="comments_container"></div>');

  $('#comments_container').css( { 'position': 'absolute',
                                  'top': patient_info_height,
                                  'left': 0,
                                  'height': comments_container_height,
                                  'width': comments_width,
                                  'overflow': 'hidden' });
 
  // comments slider

  $('#comments_container').append('<div id="comments_slider"></div>');

  $('#comments_slider').css( { 'position': 'absolute',
                               'top': 0,
                               'left': 0,
                               'width': comments_width,
                               'min-height': 10 });



  // submit case adds the comment array now

  // comment count and sort type

  var comment_count = 0;

  if ( typeof case_info.comments == 'undefined' ) {
    var comment_list = [];
    case_info.comments = comment_list;
  } else {
    comment_count = case_info.comments.length;
  }

  var comment_sort_type = 'Threaded';


  $('#comments_slider').append('<div id="comment_info"></div>');

  var comment_info_left_margin = 6;
  var comment_sort_style_indicator_width = 12;
  var comment_info_width = comments_width - ( (comment_info_left_margin * 2) + comment_sort_style_indicator_width);

  $('#comment_info').css( { 'position': 'absolute',
                            'width': comment_info_width,
                            'min-height': 10,
                            'color': '#848b83',
                            'margin-top': 5,
                            'margin-left': 6 } );

  $('#comment_info').append('<div style="font: 10px \'Droid Sans\'; float: left">' + comment_count + ' Comments' + '</div>');
  $('#comment_info').append('<div id="comment_sort_style" style="font: 10px \'Droid Sans\'; float: right">' + comment_sort_type + '</div>');


  // bind switch of comment sort type and redraw to comment sort style



  switch(comment_sort_type) {

    case 'Threaded':
      load_case_comments_threaded(case_info);
      break;

    case 'Recent':
      load_case_comments_recent(case_info);
      break;

    case 'DR':
      load_case_comments_by_dr(case_info);
      break;

    case 'Specialist':
      load_case_comments_by_specialist(case_info);
      break;

  }



  // comment icons bar at bottom

  // change to input bar across the bottom of the page with white div inside, "Add a Comment..."

  // var comment_icon_bar_left = global_screen_width  - comments_width;
  // $('#case_comments').append('<div id="comment_icon_bar"></div>');

  var comment_icon_bar_top  = global_screen_height - comment_icon_bar_height;
  var comment_icon_bar_left = 0;

  $('body').append('<div id="comment_icon_bar"></div>');

  $('#comment_icon_bar').css( {  position: 'fixed',
                                 top: comment_icon_bar_top,
                                 left: comment_icon_bar_left,
                             //  width: comments_width,
                                 width: global_screen_width,
                                 height: comment_icon_bar_height,
                                'box-shadow': '0px 0px 5px rgba(35, 31, 32, 0.5)',
                                'background-color': '#2d2b2c' } );


  // add white div with border radius 4

  var comment_input_padding = Math.floor( comment_icon_bar_height * 0.12 );
  var comment_input_height  = comment_icon_bar_height - ( comment_input_padding * 2 );
  var comment_input_width   = global_screen_width - ( comment_input_padding * 2 );

  // in portrait mode, add the icon to animate the comments column on to the screen

  $('#comment_icon_bar').append('<div id="comment_icon_input"></div>');

  $('#comment_icon_input').css( {  position: 'absolute',
                                   top: comment_input_padding,
                                   left: comment_input_padding,
                                   height: comment_input_height,
                                   width: comment_input_width,
                                  'border-radius': 4,
                                  'box-shadow': 'inset 0px 0px 5px rgba(35, 31, 32, 0.5)',
                                  'background-color': '#ffffff' } );
 
  $('#comment_icon_input').html('<div style="padding-left: 13; padding-top: 15; color: #999999;">Add a Comment...</div>');



  // height of icon from screen width

  /*

  $('#comment_icon_bar').append('<div id="add_new_comment"><img src="tabeeb-tap-to-add-comment.png"></div>');

  var add_comment_icon_top = 10;

  $('#add_new_comment').css( { 'position': 'absolute',
                               'top': add_comment_icon_top,
                               'right': 10 } );

  */

  // $('#add_new_comment').on('click', function() { add_new_comment(); } );

  $('#comment_icon_bar').on('click', function() { add_new_comment(); } );

}



function load_case_comments_threaded(case_info) {

  // sort by date ?

  for (var i in case_info.comments) {

    add_case_comment(i, case_info.comments[i], case_info);

  }
  
}



function load_case_comments_recent() {

  // sort by date

}



function load_case_comments_by_dr() {

  // get posters from comments, list comments grouped by poster

}



function load_case_comments_by_specialist() {

  // get specialist type from comments, list comments grouped by type

}



function add_case_comment(i, comment, case_info) {

  var comments_width = $('#case_comments').width();

  var comment_info_height = $('#comment_info').height();

  var div_top;


  if ( i == 0 ) {

    div_top = comment_info_height + 10;

  } else {

    var last_comment        = 'comment_' + ( i - 1 );
    var last_comment_top    = parseInt( $('#' + last_comment).css( 'top' ) );
    var last_comment_height = $('#' + last_comment).height();

    div_top = last_comment_top + last_comment_height;

  }


  var div_id         = 'comment_' + i;
  var text_div_id    = 'comment_text_' + i;
  var picture_div_id = 'comment_picture_' + i;
  var helpful_div_id = 'comment_helpful_' + i;


  // helpful div behind comment div

  $('#comments_slider').append('<div id="' + helpful_div_id + '"></div>');

  $('#' + helpful_div_id).css( { 'position': 'absolute',
                                 'top': div_top,
                                 'left': 0,
                                 'width': comments_width,
                                 'min-height': 10 } );


  // comment div

  $('#comments_slider').append('<div id="' + div_id + '"></div>');

  $('#' + div_id).css( { 'position': 'absolute',
                         'top': div_top,
                         'left': 0,
                         'width': comments_width,
                         'min-height': 10,
                         'background-color': '#373538' } );


  // picture

  $('#' + div_id).append('<div id="' + picture_div_id + '"><img src="' + comment.picture + '"></div>');

  $('#' + picture_div_id).css( { 'float': 'left',
                                 'width': 46,
                                 'height': 46,
                                 'padding-top': 7,
                                 'padding-left': 9 } );



  // doctor's pic calls load_page dr_profile
  // dr_profile onclick calls load page global previous screen if defined, case events if not defined

  $('#' + picture_div_id).on('click', function() { global_previous_screen = 'case_events'; global_dr_profile = comment.poster; load_page('dr_profile'); } );



  if (comment.poster == case_info.owner) {
    $('#' + picture_div_id).append('<div style="color: #848b83; font: 10px sans-serif; float: left; padding-top: 2; padding-left: 5;">OWNER</div>');
  }


  // text

  var comment_text_width = comments_width - ( 46 + 9 + 9 );

  $('#' + div_id).append('<div id="' + text_div_id + '">' + comment.text + '</div>');

  $('#' + text_div_id).css( {  float: 'right',
                               width: comment_text_width,
                              'padding-top': 6,
                              'padding-bottom': 10,
                               color: '#e8e8e8',
                              'font-family': 'Droid Sans',
                               font: '14px "Droid Sans", sans-serif' } );

  // console.log('comment.timestamp ' + comment.timestamp );
  // console.log('global_server_timestamp ' + global_server_timestamp );

  var time_ago = time_since( comment.timestamp );

  console.log('time_ago is ' + time_ago );



  // the image should have the type also

  // $('#' + text_div_id).append('<div style="color: #848b83; font: 11px \'Droid Sans\'; padding-top: 5">' + comment.timestamp + ' by ' + comment.poster + '</div>');
  $('#' + text_div_id).append('<div style="color: #848b83; font: 11px \'Droid Sans\'; padding-top: 5">' + time_ago + ' by ' + comment.poster + '</div>');


  // images

  if ( ( typeof comment.image ) != 'undefined' ) {

    $('#' + div_id).append('<div style="clear: both;"></div>');

    for ( var i in comment.image ) {

      var n = comment.image[i].split('.');
      var image_name = n[0];

      // change all spaces to underscore, what else?

      // the image should have the type also
      // checking global image list for every name means they all have to be on that list
      //   or only the local ones are, until they get saved, and then removed from the list

      if ( ( typeof global_images_list[ comment.image[i] ] ) != 'undefined' ) {

        $('#' + div_id).append('<div style="width: ' + comment_text_width + '; padding-left: 30; padding-top: 15; padding-bottom: 5;"><img id="' + image_name + '" src="" /></div>');

        $('#' + image_name).css( { width: '100%',
                                   height: 'auto' } );

        $('#' + image_name).attr('src', global_images_list[ comment.image[i] ].src );

      } else {

        // img src = http://tabeeb-db.myimedia.com/ ...

      }


    }

  }




  // get comment selected state from global last comment selected, should stay selected on redraw

  global_comment_state[div_id] = 'unselected';



  // get helpful or not from global case info, set to not helpful if undefined

  global_comment_helpful_state[div_id] = 'not helpful';



  // why is div_id.height different after global screen height changes?



  // set helpful div size to this div's

  var this_comment_height = $('#' + div_id).height();

  $('#' + helpful_div_id).css( { 'height': this_comment_height,
                                 'background-color': '#555555' } );


  var help_text = 'text_of_' + helpful_div_id;
  var help_icon = 'icon_of_' + helpful_div_id;


  $('#' + helpful_div_id).append('<div id="' + help_text + '"></div>');

  $('#' + help_text).css( { 'color': '#eeeeee',
                            'width': comments_width,
                            'font-family': 'Droid Sans',
                            'font': '21px "Droid Sans", sans-serif' } );

  $('#' + help_text).html('<center>Helpful</center>');


  var help_text_height = $('#' + help_text).height();
  var help_text_top    = ( this_comment_height - help_text_height ) / 2;

  $('#' + help_text).css( { 'position': 'absolute',
                            'top': help_text_top } ); 
  

  
  // comments drag, swipe, tap
  
  bind_comments_touch_events(div_id) 


}



//---- case-comment-functions.js ------------------------------------------------------------------------------------



// init add comments textarea, add tag check



// check global keyboard height


// input_textarea is outside of new_comment_textarea, height


// icon and event paragraph pass event div to add new comment, global last selected event


// comment icon passes comment div, global last selected comment





function add_new_comment() {

  console.log('comment function, add new comment');

  // global last selected event or comment variable


  // clear list of attached images

  global_input_image_list = [];


  // images are not being added in create case here,

  global_create_case_images = 0;



  // fade in opacity div ?

  $('body').append('<div id="add_new_comment_shade" style="width: ' + $(window).width() + '; height: ' +  $(window).height() + ';"></div>');

  // $('#add_new_comment_shade').offset( { top: 0, left: 0 } );

  $('#add_new_comment_shade').css( {  position: 'absolute',
                                      top: 0,
                                      left: 0,
                                     'background-color': '#000000',
                                      opacity: 0,
                                     'z-index': 100 } );


  // click on shade to return to events list without reloading the page

  $('#add_new_comment_shade').on('click', function() { return_to_case_events_from_new_comment('false'); } );


  add_new_comment_dialog();


  $('#add_new_comment_shade').fadeTo(200, 0.8);

  $('#last_event_selected').fadeTo(300, 1);

  $('#add_new_comment_dialog').fadeTo(300, 1, function() { bind_spellcheck_and_tagcheck_to_new_comment(); } );

}



function add_new_comment_dialog() {

  console.log('add dialog box');

  // global_screen_height = $(window).height();

  // reply to events from case v06



  // add inputs for photo

  $('body').append('<div style="height: 0; width: 0; overflow: hidden;">'
                 + '<input id="input_photo" type="file" accept="image/*" capture="camera" onchange="preview_input_image(this);" />'
                 + '</div>');

  $('body').append('<div style="height: 0; width: 0; overflow: hidden;">'
                 + '<input id="attach_photo" type="file" accept="image/*" onchange="preview_input_image(this);" />'
                 + '</div>');



  // preview div on the input textarea, append and hide

  $('body').append('<div id="preview_div"><img id="preview" src="" alt=""></img></div>');

  $('#preview_div').css( { 'position': 'absolute',
                           'top': 20,
                           'left': 20,
                           'z-index': 102 } );

  $('#preview_div').on('click', function() { $('#preview_div').hide(); } );

  set_preview_onload();

  $('#preview_div').hide();



  var events_width = $('#case_events').width();
  var events_left  = ( global_screen_width / 2 ) - ( events_width / 2 );

  var width_center = global_screen_width / 2;
  var height_center = global_screen_height / 2;

  // screen is 828 wide, box is 412
  // var input_div_width = global_screen_width * 0.488;

  var input_div_width = events_width;


  // keyboard height according to tablet or not

  var keyboard_height;

  if (is_mobile) {

    if ( global_keyboard_height > 0 ) {
      keyboard_height = global_keyboard_height;
    } else {
      keyboard_height = Math.floor( global_screen_height * 0.4 );

    }

  } else { 

    keyboard_height = 0; 

  }


  // global_last_event_selected

  // replied to comment height is 0 if adding a new comment

  var replied_event_height = 0;


  if ( ( ( typeof global_last_event_selected ) != 'undefined' ) && ( global_last_event_selected != '' ) ) {

    replied_event_height = $('#' + global_last_event_selected).height();

    // get height of comments and subtract from event height

    var n = global_last_event_selected.split('_');
    var i = n[2];

    var comment_div = 'case_event_comment_' + i;
    var comment_height = 0;
    if ( $('#' + comment_div).length > 0 ) { comment_height = $('#' + comment_div).outerHeight(); }

    var event_height = ( replied_event_height - comment_height ) + 15 + 34;

    $('body').append('<div id="last_event_selected"></div>');

    var les_css = { position: 'absolute',
                    top: 5,
                    left: events_left,
                    width: events_width,
                    height: event_height,
                   'background-color': '#ffffff',
                    opacity: 0,
                   'z-index': 101 };

    $('#last_event_selected').css( les_css );


    var left_padding = 29;
    var right_padding = 75;
    var left_margin = 31;

    $('#last_event_selected').append('<div id="event_text"></div>');

    $('#event_text').css( {  position: 'relative',
                            'padding-left': left_padding,
                            'padding-right': right_padding,
                            'padding-top': 25,
                            'padding-bottom': 40,
                            'margin-left': left_margin,
                            'border-left': '5px solid #7f8386',
                            'font-family': 'Droid Sans',
                             font: '14px "Droid Sans", sans-serif',
                             color: '#535154' } );
    
    $('#event_text').html( global_case_info[global_current_case_id].events[i].text );

  }


  var last_event_selected_height = $('#last_event_selected').height();

  var input_div_height = global_screen_height - ( keyboard_height + last_event_selected_height );


  if ( input_div_height > 300 ) { input_div_height = 300; }


  var input_div_top  = last_event_selected_height + 6;
  var input_div_left = width_center  - (input_div_width / 2);


  $('body').append('<div id="add_new_comment_dialog"></div>');

  $('#add_new_comment_dialog').css( {  position: 'absolute',
                                       top: input_div_top,
                                       left: input_div_left,
                                       width: input_div_width,
                                       width: input_div_width,
                                       height: input_div_height,
                                      'background-color': '#f0f1f3',
                                       opacity: 0,
                                      'z-index': 101 } );


  // send button

  $('#add_new_comment_dialog').append('<div id="send_new_comment"></div>');

  var send_button_width = 88;
  var send_button_height = 29;
  var send_button_right_margin = 16;
  var send_button_bottom_margin = 8;
  var send_button_color = '#0b3e69';

  var send_button_top = input_div_top + input_div_height - ( send_button_height + send_button_bottom_margin );
  var send_button_left = input_div_left + input_div_width - ( send_button_width + send_button_right_margin );

  $('#send_new_comment').offset( { top: send_button_top, left: send_button_left } );
  $('#send_new_comment').css( { 'background-color': send_button_color,
                                'width': send_button_width,
                                'height': send_button_height,
                                'border-radius': 4,
                                'border': '1px solid',
                                'border-top-color': '#9aaab9',
                                'border-left-color': '#4a6787',
                                'border-right-color': '#80929e',
                                'border-bottom-color': '#405f7c',
                                'box-shadow': '1px 1px 1px 0px #b9b8b6',
                                'color': '#ffffff',
                                'font-family': 'Droid Sans',
                                'font': 'bold 15px "Droid Sans", sans-serif' } );

  $('#send_new_comment').html('<center><div style="padding-top: 6;">Send</div></center>');
  $('#send_new_comment').on('click', function() { save_new_comment() } );


  // icon for take a photo

  $('#add_new_comment_dialog').append('<div id="take_a_photo"><img src="tabeeb-take-a-photo.png"></div>');
  $('#take_a_photo').offset( { top: input_div_top + input_div_height - 33, left: input_div_left + 23 } );
  $('#take_a_photo').css( { 'width': 30, 'height': 22 } );
  $('#take_a_photo').on('click', function() { take_a_photo() } );


  // icon for attach a photo from disk

  $('#add_new_comment_dialog').append('<div id="attach_a_photo"><img src="tabeeb-attach-a-photo.png"></div>');
  $('#attach_a_photo').offset( { top: input_div_top + input_div_height - 33, left: input_div_left + 91 } );
  $('#attach_a_photo').css( { 'width': 30, 'height': 22 } );
  $('#attach_a_photo').on('click', function() { attach_a_photo() } );


  // add text area border

  var text_area_margin = 14;
  var text_area_buttons_height = 48;
  var text_area_width = input_div_width - ( text_area_margin * 2 );
  var text_area_height = input_div_height - ( ( text_area_margin * 2 ) + text_area_buttons_height );

  $('#add_new_comment_dialog').append('<div id="new_comment_textarea"></div>');

  $('#new_comment_textarea').offset( { top: ( input_div_top + text_area_margin ), left: ( input_div_left + text_area_margin ) } );
  $('#new_comment_textarea').css( { 'background-color': '#ffffff',
                                    'width': text_area_width,
                                    'height': text_area_height,
                                    'border-radius': 4,
                                    'border': '1px solid',
                                    'border-top-color': '#babbbf',
                                    'border-left-color': '#a0acac',
                                    'border-right-color': '#a0b1bb',
                                    'border-bottom-color': '#a2a7aa',
                                    'box-shadow': '0px 0px 1px 2px #a7d9f0',
                                    'color': '#67797a',
                                    'font-family': 'Droid Sans',
                                    'font': 'bold 15px "Droid Sans", sans-serif' } );


  // add current user id pic over text area

  $('#add_new_comment_dialog').append('<div id="current_user_pic"><img src="tabeeb-current-user-pic.png" height="23" width="23"></div>');

  $('#current_user_pic').offset( { top: input_div_top + text_area_margin + 8, left: input_div_left + text_area_margin + 8 } );
  $('#current_user_pic').css( { 'width': 23,
                                'height': 23 } );


  // add input textarea

  $('#add_new_comment_dialog').append('<div id="comment_textarea"><textarea id="input_textarea" rows="18"></textarea></div>');

  $('#comment_textarea').offset( { top: ( input_div_top + text_area_margin + 8 ), left: ( input_div_left + text_area_margin + 35 ) } );
  $('#comment_textarea').css( { 'width': input_div_width - ( text_area_margin * 2 + 39 ),
                                'height': text_area_height } );

  $('#input_textarea').css( { 'width': '100%',
                              'height': ( text_area_height - text_area_margin ), 
                              'border': 'none', 
                              'outline': 'none',
                              'resize': 'none',
                              'font-family': 'Droid Sans',
                              'font': '14px "Droid Sans", sans-serif' } );



  // $('#input_textarea').append('global_last_event_selected ' + global_last_event_selected + ', ');
  // $('#input_textarea').append('replied_event_height ' + replied_event_height + ', ');
  // $('#input_textarea').append('global_current_case_id ' + global_current_case_id);


  $('#input_textarea').focus();

}



function bind_spellcheck_and_tagcheck_to_new_comment() {

  console.log('bind checks');

}



function save_new_comment() {

  var reload_comments = false;

  if ($('#input_textarea').val() != '') {

    var comment = {};

    comment.new_comment = true;

    comment.picture    = 'tabeeb-current-user-pic.png';
    comment.text       = $('#input_textarea').val();
    comment.timestamp  = '2 mins ago';
    comment.poster     = 'current user';
    comment.speciality = 'Infrastructure';


    // event id of the comment is the actual id, not the loop index

    // get event[i].id

    if ( ( ( typeof global_last_event_selected ) != 'undefined' ) && ( global_last_event_selected != '' ) ) {

      var n = global_last_event_selected.split('_');
      var i = n[2];

      comment.event_id = window.case_info.events[i].id;

      // console.log('save_new_comment event_id ' + comment.event_id );

    }


    comment.temporary_id = true;

    comment.id = window.case_info.comments.length;

    console.log('save_new_comment id ' + comment.id );



    // copy of global input images

    if ( ( typeof global_input_image_list[0] ) != 'undefined' ) {

      comment.image = global_input_image_list.slice(0);

    }

    global_input_image_list = [];



    // add new comment to case_info.comments and case_info.events[i].comments

    if ( ( ( typeof global_last_event_selected ) != 'undefined' ) && ( global_last_event_selected != '' ) ) {

      var n = global_last_event_selected.split('_');
      var i = n[2];

      if ( ( typeof window.case_info.events[i].comments ) == 'undefined' ) {
        var comment_array = [];
        window.case_info.events[i].comments = comment_array;
      }

      window.case_info.events[i].comments.unshift(comment);

      window.case_info.comments.unshift(comment);

    } else {

      window.case_info.comments.unshift(comment);

      // global case info instead of window.case_info, json has the info but don't use the reference

    }


    // send new comment to the api
    // update id from data.id
    // ping server, add the item to the asynchronous retry queue if ping fails

    // update global_server_timestamp from the ping


    // /api/add_comment.json

    var json_data = { case_id: window.case_info.id,
                      event_id: comment.event_id,
                      poster_id: 1,
                      text: comment.text,
                      id: comment.id
                    };

    console.log('json_data is ' + JSON.stringify( json_data, undefined, 2 ) );

    $.ajax( { contentType: 'application/json',
              type: 'GET',
              url: '/api/ping_server.json',
              timeout: 4000,
              dataType: 'json',

              success: function( data, textStatus ) {

                console.log('add_new_comment, ping_server, textStatus ' + textStatus + ', ' + JSON.stringify( data, undefined, 2 ) );


                // global server timestamp

                global_server_timestamp = data.server_time_stamp;



                // add comment

                $.ajax( { contentType: 'application/json',
                          type: 'POST',
                          url: '/api/add_comment.json',
                          data: JSON.stringify( json_data ),

                          success: function( data, textStatus ) {

                            console.log('add_comment, ajax success, textStatus ' + textStatus + ', data ' + JSON.stringify( data, undefined, 2 ) );

                            // change id in event comment and case comments
                            // last comment of window.case_info.events[i].comments and window.case_info.comments

                            if ( ( ( typeof global_last_event_selected ) != 'undefined' ) && ( global_last_event_selected != '' ) ) {

                              var e_c = window.case_info.events[i].comments.length - 1;

                              console.log('event comment id is ' + window.case_info.events[i].comments[e_c].id );
                              console.log('event comment is ' + JSON.stringify( window.case_info.events[i].comments[e_c], undefined, 2) );

                              window.case_info.events[i].comments[e_c].id = data.id;

                              delete window.case_info.events[i].comments[e_c].temporary_id;
                              delete window.case_info.events[i].comments[e_c].new_comment;

                            }

                            // case comments are unshifted to the array
                            // var c_c = window.case_info.comments.length - 1;

                            var c_c = 0;

                            console.log('case comment id is ' + window.case_info.comments[c_c].id );
                            console.log('server id is ' + data.id );

                            window.case_info.comments[c_c].id = data.id;

                            delete window.case_info.comments[c_c].temporary_id;
                            delete window.case_info.comments[c_c].new_comment;

                          },

                          error: function( jqXHR, textStatus, errorThrown ) {

                            console.log('add_new_comment, ajax error, textStatus ' + textStatus + ', errorThrown ' + errorThrown );


                            // add item to asynchronous retry queue and start queue handler



                          },

                          dataType: 'json',
                          processData: false

                } );
                
                



              },

              error: function( jqXHR, textStatus, errorThrown ) {

                console.log('check case timestamp error, textStatus ' + textStatus + ', error from the api');


                // add item to asynchronous retry queue and start queue handler




              },

              processData: false

    } );




    reload_comments = true;

  }

  return_to_case_events_from_new_comment(reload_comments);

}



function return_to_case_events_from_new_comment(reload_comments) {

  // fade dialog and shade to 0% opacity and remove

  $('#add_new_comment_shade').fadeTo(200, 0);

  $('#last_event_selected').fadeTo(300, 0);

  $('#add_new_comment_dialog').fadeTo(300, 0, function() { remove_divs_for_add_new_comment(reload_comments); } );

}



function remove_divs_for_add_new_comment(reload_comments) {

  $('#add_new_comment_dialog').remove();

  $('#add_new_comment_shade').remove();

  $('#last_event_selected').remove();

  
  // reload page for new comment

  if (reload_comments == true) {
    load_page('case_events');
  }


  // case events should be scrolled to the position of the new comment, global last event selected
  // check that in case events

}



function take_a_photo() {

  console.log('take a photo, get icon svg from Eric');

  // this is called from add comment and create case

  global_button_has_focus = 1;

  $('#input_photo').click();


}



function attach_a_photo() {

  console.log('attach a photo, get icon svg from Eric');

  global_button_has_focus = 1;

  $('#attach_photo').click();

}




//---- case-comment-touch-functions.js ------------------------------------------------------------------------------------




// comment functions,

// tap to select for replying
// select is set on touch end, or diagonal move?


// drag up and down

// indicate end of movement?  ui question on buttons also



// swipe left and right to toggle helpful 
// count of helpful on the comment, list of users who have marked it
// list of users who have marked it unhelpful?



// check dx and dy in touch move on first move

// clear first move in touch end


// if dx < n, move is vertical
// if dy < n, move is horizontal
// if dx > n and dy > n, set flag and do not move
// set selected flag?
// select toggles on touch end, does not check do_not_move flag



// redo comment input, size input to keyboard height


// swipe checks distance, animate rest of move if over 1/3 of width




var global_comment_state = [];

var global_comment_helpful_state = [];


var global_last_comment_selected;


// set to 0 if first move is diagonal
var global_comment_slider_moves;

var global_comment_slider_first_move;

var global_comment_slider_direction;



var comments_slider_start_top;

var comment_start_x;

var global_comment_dx;




function bind_comments_touch_events(div_id) {

  $('#' + div_id).on('touchstart', function(event) { comments_touch_start(event);         } );
  $('#' + div_id).on('touchmove',  function(event) { comments_touch_move(event, div_id);  } );
  $('#' + div_id).on('touchend',   function(event) { comments_touch_end(event, div_id);   } );

  $('#' + div_id).on('click',      function(event) { scroll_events_to_comment( div_id );   } );

}



function comments_touch_start(e) { 

  // e.preventDefault();

  var touch = e.originalEvent.touches[0];

  touch_move_start.x = touch.pageX;
  touch_move_start.y = touch.pageY;


  comments_slider_start_top = parseInt( $('#comments_slider').css( 'top' ) );


  global_comment_slider_moves      = 1;
  global_comment_slider_first_move = 1;
  global_comment_slider_direction  = '';

}



function comments_touch_move(e, div) { 

  e.preventDefault();

  var touch = e.originalEvent.touches[0];

  var dx = touch.pageX - touch_move_start.x;
  var dy = touch.pageY - touch_move_start.y;

  var comments_width = $('#comments_container').width();
  var swipe_distance = Math.floor( comments_width / 2 );


  // set movement to horizontal, vertical, or none

  if ( global_comment_slider_first_move == 1 ) {

    if ( Math.abs( dx ) < Math.abs( dy ) ) { global_comment_slider_direction = 'vertical'; }
    if ( Math.abs( dx ) > Math.abs( dy ) ) { global_comment_slider_direction = 'horizontal'; }

    if ( ( Math.abs( dx ) > 5 ) && ( Math.abs( dy ) > 5 ) ) { global_comment_slider_moves = 0 }

    global_comment_slider_first_move = 0;

  }



  if ( global_comment_slider_moves == 1 ) {


    if ( global_comment_slider_direction == 'vertical' ) {

      var last_comment_is     = case_info.comments.length - 1;
      var last_comment        = 'comment_' + last_comment_is;
      var last_comment_top    = parseInt( $('#' + last_comment).css( 'top' ) );
      var last_comment_height = $('#' + last_comment).height();

      // add the height of the icons bar, timestamp on last comment

      var slider_height    = last_comment_top + last_comment_height + 60;
      var container_height = $('#comments_container').height();

      var slider_min_y = container_height - slider_height;
      var slider_top   = comments_slider_start_top + dy;

      if ( slider_height > container_height ) {

        if ( slider_top > 0 ) { slider_top = 0; }

        if ( slider_top < slider_min_y ) { slider_top = slider_min_y; }

 
        $('#comments_slider').css( { 'top': slider_top } );

      }

    }


    if ( global_comment_slider_direction == 'horizontal' ) {

      $('#' + div).css( { 'left': dx } );

      global_comment_dx = dx;

      if ( Math.abs( dx ) > swipe_distance ) {
        global_comment_slider_moves = 0;
        toggle_comment_helpful(div);
      }

    }


  }
  


}



function comments_touch_end(e, div) { 

  // e.preventDefault();


  // comments are not selectable, comments are only added for events

  /*

  if ( global_comment_slider_direction == '' ) {

    // touch end and no movement


    switch(global_comment_state[div]) {

      case 'unselected':

        // mark div selected

        $('#' + div).css( { 'background-color': '#555555' } );

        global_comment_state[div] = 'selected';


        // mark last div unselected

        $('#' + global_last_comment_selected).css( { 'background-color': '#373538' } );

        global_comment_state[global_last_comment_selected] = 'unselected';


        // div is last div selected

        global_last_comment_selected = div;



        // turn off last event if selected


        // if comment was on an event, scroll events slider to position of that event

        scroll_events_to_comment(div);


        break;


      case 'selected':

        // mark div unselected

        $('#' + div).css( { 'background-color': '#373538' } );

        global_comment_state[div] = 'unselected';


        // no last div selected

        global_last_comment_selected = '';


        break;

    }

    
  } 

  */



  if ( ( global_comment_slider_direction == 'horizontal' ) 
    && ( global_comment_slider_moves == 1 ) ) {

    var move_to_zero = -1 * global_comment_dx;

    $('#' + div).animate( { 'left': '+=' + move_to_zero }, 200 );

  }


}



function toggle_comment_helpful(div_id) {

  var comments_width = $('#comments_container').width();

  var d = div_id.split('_');
  var n = d[1];
  var helpful_div  = 'comment_helpful_' + n;
  var helpful_text = 'text_of_comment_helpful_' + n;


  if ( global_comment_helpful_state[div_id] == 'not helpful' ) {

    $('#' + helpful_div).css( { 'background-color': '#448844' } );
    $('#' + helpful_text).html('<center>Helpful</center>');

    global_comment_helpful_state[div_id] = 'helpful';

  } else {

    $('#' + helpful_div).css( { 'background-color': '#884444' } );
    $('#' + helpful_text).html('<center>Not Helpful</center>');

    global_comment_helpful_state[div_id] = 'not helpful';

  }



  var div_left = parseInt( $('#' + div_id).css( 'left' ) );

  var move_distance;


  if ( div_left < 0 ) { move_distance = -1 * ( comments_width + div_left ); } 
                 else { move_distance = comments_width - div_left; }


  $('#' + div_id).animate( { 'left': '+=' + move_distance }, 200, function() {

    setTimeout( function() { 

      $('#' + div_id).css( { 'opacity': 0,
                             'left': 0 } );

      $('#' + div_id).animate( { 'opacity': 1 }, 200 );

    }, 750 );

  } );


  // get comment state
  // toggle state
  // background color and text
  // move comment back to 0 and fade to 1
  // set comment move to 0

}



function scroll_events_to_comment( div_id ) {

  console.log('scroll_events_to_comment, div_id ' + div_id );

  // comment_2

  var n = div_id.split('_');
  var i = n[1];

  var event_id;

  console.log('scroll_events_to_comment, i is ' + i + ', comment i is ' + JSON.stringify( window.case_info.comments[i], undefined, 2 ) );


  if ( ( typeof window.case_info.comments[i].event_id ) != 'undefined' ) {

    event_id = window.case_info.comments[i].event_id;

  } else { 

    // no event id on the comment, return

    console.log('scroll_events_to_comment, event_id ' + event_id );

    return; 

  }

  console.log('scroll_events_to_comment, event_id ' + event_id );


  // get the event id of the event in the div
  // for var in events, if event_id == events[i].id

  var event_div;

  for ( var j in window.case_info.events ) {

    if ( event_id == window.case_info.events[j].id ) { event_div = 'case_event_' + j; }

  }

  console.log('scroll_events_to_comment, event_div ' + event_div );


  var event_top       = $('#' + event_div).position().top;
  var case_events_top = -1 * ( event_top - 30 );

  var case_events_min_y = global_screen_height - global_case_events_height;

  console.log('case_events_top, case_events_min_y, ' + case_events_top + ', ' + case_events_min_y );

  if ( case_events_top < case_events_min_y ) { case_events_top = case_events_min_y; }
  if ( case_events_top > 0 )                 { case_events_top = 0; }

  console.log('case_events_top, case_events_min_y, ' + case_events_top + ', ' + case_events_min_y );



  // $('#case_events').css( { top: case_events_top } );

  $('#case_events').animate( { top: case_events_top }, 500 );



  // set global case events top for events_touch_move

  events_slider_start_top = case_events_top;




  // set background color and fade it ?

  // $('#' + event_div).css( { 'background-color': '#e0f2fc' } );

  // $('#' + event_div).addClass('fade_background_to_white');

}





//---- case-comment-timestamp-functions.js ------------------------------------------------------------------------------------




// case-comment-timestamp-functions.js




function time_since( timestamp ) {

  var since_text = '2 mins ago';

  var comment_date = new Date( timestamp );
  var server_date = new Date( global_server_timestamp );

  if ( ( typeof global_server_timestamp ) == 'undefined' ) {

    return '';

  }


  var milliseconds = server_date - comment_date;

  // console.log('milliseconds is ' + milliseconds );


  // mins, hours, days, weeks, months, years

  var one_minute = 60 * 1000;
  var one_hour = 60 * one_minute;
  var one_day = 24 * one_hour;
  var one_week = 7 * one_day;
  var one_month = 30 * one_day;
  var one_year = 365 * one_day;

  if ( milliseconds < one_minute ) {

    since_text = '1 min ago';

    return since_text;

  }


  if ( ( milliseconds > one_minute ) && ( milliseconds < one_hour ) ) {

    var mins = Math.floor( milliseconds / one_minute );

    // console.log('mins is ' + mins );

    if ( mins == 1 ) { since_text = '1 min ago'; }
                else { since_text = mins + ' mins ago'; }

    return since_text;

  }


  if ( ( milliseconds > one_hour ) && ( milliseconds < one_day ) ) {

    var hours = Math.floor( milliseconds / one_hour );

    // console.log('hours is ' + hours );

    if ( hours == 1 ) { since_text = '1 hour ago'; }
                 else { since_text = hours + ' hours ago'; }

    return since_text;

  }


  if ( ( milliseconds > one_day ) && ( milliseconds < one_week ) ) {

    var days = Math.floor( milliseconds / one_day );

    // console.log('days is ' + days );

    if ( days == 1 ) { since_text = '1 day ago'; }
                else { since_text = days + ' days ago'; }

    return since_text;

  }


  if ( ( milliseconds > one_week ) && ( milliseconds < one_month ) ) {

    var weeks = Math.floor( milliseconds / one_week );

    // console.log('weeks is ' + weeks );

    if ( weeks == 1 ) { since_text = '1 week ago'; }
                 else { since_text = weeks + ' weeks ago'; }

    return since_text;

  }


  if ( ( milliseconds > one_month ) && ( milliseconds < one_year ) ) {

    var months = Math.floor( milliseconds / one_month );

    // console.log('months is ' + months );

    if ( months == 1 ) { since_text = '1 month ago'; }
                  else { since_text = months + ' months ago'; }

    return since_text;

  }


  if ( milliseconds > one_year ) {

    var years = Math.floor( milliseconds / one_year );

    // console.log('years is ' + years );

    if ( years == 1 ) { since_text = '1 year ago'; }
                 else { since_text = years + ' years ago'; }

    return since_text;

  }


}




//---- case-list-functions.js ------------------------------------------------------------------------------------



// init case list page, show list of cases, summary and title in grid of divs



// buttons for remove category from case input paragraph

// move add photo, take photo, calendar etc buttons to left side on smaller screens

// return keydown adds a div to the case input if on the last one

// orientationchange calls init_page() ?  init_page calls draw_page, maybe

// save div text to global info object on submit only, not on keydown

// global_case_input_info.events is not defined, from create case button on case list page



var global_case_list_filter_option_status = "active";


var global_server_timestamp;



function init_case_list_page() {

  console.log('init case list page');

  if ( typeof global_screen_height == 'undefined' ) { get_global_variables(); }

  if ( isNaN( global_screen_height ) ) { load_page('login'); return; }

  set_cookie('last_page_state', 'case_list', 365)


  // hitting discard changes in create case should not load the case as draft in case events

  global_previous_screen = 'case_list';


  // list of cases is longer than the page.  
  // check screen height and set global screen height
  // check in case events and create case also


  console.log('screen is ' + global_screen_width + ' x ' + global_screen_height);

  var center_x = global_screen_width / 2;
  var center_y = global_screen_height / 2;


  // get list of current cases

  if ( typeof global_case_info[123] == 'undefined' ) { get_case_info(); }

  // load global case info from local storage




  // header bar with navigation icon and logo

  add_navigation_header();

  $('#nav_header_bar').css( { 'top': 0 } );

  nav_panel_state = 'hidden';


  var nav_header_height = parseInt( $('#nav_header_bar').height() );

  var button_top_padding = 6;
  var button_font_size = 16;


  if (nav_header_height > 40) {

    var bar_height_difference = nav_header_height - 40;

    var font_size_increase = Math.floor(bar_height_difference / 6);
    button_font_size = button_font_size + font_size_increase;

    var padding_increase = Math.floor(bar_height_difference / 3);
    button_top_padding = button_top_padding + padding_increase;

  }


  // add create case button to header

  var button_width = 120;

  var button_css = { 'width': button_width,
                     'height': ( nav_header_height - ( 10 + button_top_padding ) ),
                     'border-radius': 4,
                     'color': '#eeeeee',
                     'background-color': '#999999',
                     'font-family': 'Droid Sans',
                     'font': button_font_size + 'px "Droid Sans", sans-serif' };


  $('#nav_header_bar').append('<div id="add_new_case"><center>Create Case</center></div>');

  $('#add_new_case').css(button_css);

  $('#add_new_case').css( { 'position': 'absolute',
                            'top': 5,
                            'padding-top': button_top_padding,
                            'left': ( global_screen_width - ( button_width + 5 ) )
                           } );

  $('#add_new_case').on('click', function() { 

    global_current_case_id = ''; 

    global_case_input_info = {};

    var events_array = [];

    global_case_input_info.events = events_array;

    global_previous_screen = 'case_list';

    load_page('create_case'); 

  } );



  // list the current cases

  var case_list_height = global_screen_height - nav_header_height;


  // case list container, case list scrolls like case events column?

  $('#case_list').css( { position: 'absolute',
                         top: nav_header_height,
                         left: 0,
                        'min-height': case_list_height } );



  // filter global case info by status
  // "active published bookmarks draft | all  mine | sort by urgency"
  // sort by urgency, newest, oldest, latest activity

  // change background color and border color when selected, radio buttons

  // button positions, width
  // width = screen width * x
  // center of button = screen width * a, b, c, d
  // left = position - width / 2


  $('#case_list').append('<div id="case_list_options"></div>');

  $('#case_list_options').css( { position: 'absolute',
                                 top: 0,
                                 left: 0,
                                 width: global_screen_width,
                                 height: nav_header_height,
                                'background-color': '#dcdcde' } );

  var options_font_size = '16px "Droid Sans", sans-serif';

  var mode = get_orientation_mode();


  // font size in portrait smaller than landscape ?

  /*

  if ( is_mobile ) { 

    if ( mode == 'portrait' ) { options_font_size = '16px "Droid Sans", sans-serif'; }

    if ( mode == 'landscape' ) { options_font_size = '16px "Droid Sans", sans-serif'; }

  }

  */



  // filter options menu moved to case-list-menu-functions.js

  console.log('mode is ' + mode );


  if ( ( mode == 'pc' ) || ( mode == 'landscape' ) ) {

    add_case_list_filter_menu_items( nav_header_height, options_font_size, mode );

  } else {

    add_case_list_filter_drop_down_menu( nav_header_height, options_font_size, mode );

  }




  /*

  // active

  var case_active_option_left  = Math.floor( global_screen_width * 0.013 );
  var case_active_option_width = Math.floor( global_screen_width * 0.065 );

  $('#case_list_options').append('<div id="case_list_active"><center>Active</center></div>');

  $('#case_list_active').css( { position: 'absolute',
                                top : options_top,
                                left: case_active_option_left,
                               'padding-top': options_padding_top,
                                height: options_height,
                                width: case_active_option_width,
                               'background-color': '#f3f3f4',
                                border: '1px solid #818284',
                               'border-radius': options_radius,
                                font: options_font_size } );

  if ( global_case_list_filter_option_status != 'active' )
    $('#case_list_active').css( { border: '1px solid #dcdcde', 'background-color': '#dcdcde' } );

  if (is_mobile) {
    $('#case_list_active').on('touchstart', function() { set_case_list_option(this); } );
  } else {
    $('#case_list_active').on('click', function() { set_case_list_option(this); } );
  }


  // published

  var case_published_option_left  = Math.floor( global_screen_width * 0.080 );
  var case_published_option_width = Math.floor( global_screen_width * 0.095 );

  $('#case_list_options').append('<div id="case_list_published"><center>Published</center></div>');

  $('#case_list_published').css( { position: 'absolute',
                                   top : options_top,
                                   left: case_published_option_left,
                                  'padding-top': options_padding_top,
                                   height: options_height,
                                   width: case_published_option_width,
                                  'background-color': '#f3f3f4',
                                   border: '1px solid #818284',
                                  'border-radius': options_radius,
                                   font: options_font_size } );

  if ( global_case_list_filter_option_status != 'published' )
    $('#case_list_published').css( { border: '1px solid #dcdcde', 'background-color': '#dcdcde' } );

  if (is_mobile) {
    $('#case_list_published').on('touchstart', function() { set_case_list_option(this); } );
  } else {
    $('#case_list_published').on('click', function() { set_case_list_option(this); } );
  } 


  // bookmarks

  var case_bookmarks_option_left  = Math.floor( global_screen_width * 0.179 );
  var case_bookmarks_option_width = Math.floor( global_screen_width * 0.105 );

  $('#case_list_options').append('<div id="case_list_bookmarks"><center>Bookmarks</center></div>');

  $('#case_list_bookmarks').css( { position: 'absolute',
                                   top : options_top,
                                   left: case_bookmarks_option_left,
                                  'padding-top': options_padding_top,
                                   height: options_height,
                                   width: case_bookmarks_option_width,
                                  'background-color': '#f3f3f4',
                                   border: '1px solid #818284',
                                  'border-radius': options_radius,
                                   font: options_font_size } );

  if ( global_case_list_filter_option_status != 'bookmarks' )
    $('#case_list_bookmarks').css( { border: '1px solid #dcdcde', 'background-color': '#dcdcde' } );

  if (is_mobile) {
    $('#case_list_bookmarks').on('touchstart', function() { set_case_list_option(this); } );
  } else {
    $('#case_list_bookmarks').on('click', function() { set_case_list_option(this); } );
  }


  // draft

  var case_draft_option_left  = Math.floor( global_screen_width * 0.287 );
  var case_draft_option_width = Math.floor( global_screen_width * 0.065 );

  $('#case_list_options').append('<div id="case_list_draft"><center>Draft</center></div>');

  $('#case_list_draft').css( { position: 'absolute',
                               top : options_top,
                               left: case_draft_option_left,
                              'padding-top': options_padding_top,
                               height: options_height,
                               width: case_draft_option_width,
                              'background-color': '#f3f3f4',
                               border: '1px solid #818284',
                              'border-radius': options_radius,
                               font: options_font_size } );

  if ( global_case_list_filter_option_status != 'draft' )
    $('#case_list_draft').css( { border: '1px solid #dcdcde', 'background-color': '#dcdcde' } );

  if (is_mobile) {
    $('#case_list_draft').on('touchstart', function() { set_case_list_option(this); } );
  } else {
    $('#case_list_draft').on('click', function() { set_case_list_option(this); } );
  }
 

  */




  // search input


  var search_bar_height = $('#case_list_options').height();

  var search_input_top_margin   = Math.floor( search_bar_height * 0.17 );
  var search_input_top_padding  = Math.floor( search_bar_height * 0.15 );
  var search_input_left_padding = Math.floor( search_bar_height * 0.3 );
  var search_input_right_margin = Math.floor( search_bar_height * 0.2 );

  var search_button_right_margin = search_input_right_margin;

  if ( mode == 'pc' ) { search_button_right_margin = search_input_right_margin * 4; }

  var search_input_height = search_bar_height  - ( search_input_top_margin * 2 );
  var search_input_radius = Math.floor( search_input_height * 0.7 );
  var search_input_top    = ( search_bar_height - ( search_input_height * 0.75 ) ) / 2;
  var search_input_width  = Math.floor( global_screen_width * 0.2 );

  if ( search_input_width < 150 ) { search_input_width = 150; }


  var input_height = search_input_height - search_input_top_padding;
  var input_width = search_input_width - search_input_left_padding;


  // search button

  $('#case_list_options').append('<div id="search_cases_button"></div>');

  var sb_css = { float: 'right',
                 width: search_input_height,
                 height: search_input_height,
                'margin-top': search_input_top_margin,
                'margin-right': search_input_right_margin,
                 border: '1px solid #707174',
                'border-radius': search_input_radius,
                'background-color': '#888888',
                 color: '#abb3b7' };

  $('#search_cases_button').css( sb_css );

  $('#search_cases_button').on('click', function() { search_cases(); } );



  // search input

  $('#case_list_options').append('<div id="search_cases_input">Search</div>');

  var si_css = { float: 'right',
                 width: ( input_width - search_input_height ),
                 height: input_height,
                'margin-top': search_input_top_margin,
                'margin-right': search_input_right_margin,
                'padding-top': search_input_top_padding,
                'padding-left': search_input_left_padding,
                 border: '1px solid #b4b4b4',
                 outline: 'none',
                 resize: 'none',
                'border-radius': search_input_radius,
                'background-color': '#ffffff',
                 color: '#abb3b7' };

  $('#search_cases_input').css( si_css );

  $('#search_cases_input').attr('contentEditable', 'true');

  $('#search_cases_input').on('click', function() { $('#search_cases_input').html(''); $('#search_cases_input').css( { color: '#000000' } ); } );



  // add magnifying glass icon to search input for button

  // add keypress event for return key




  var options_height = Math.floor( nav_header_height * 0.55 );
  var options_padding_top = Math.floor( nav_header_height * 0.15 );;
  var options_top = ( nav_header_height - ( options_height + options_padding_top ) ) / 2;
  var options_radius = ( options_height + options_padding_top ) / 2;


  // buttons for get_all_cases and get_my_cases

  // all

  var get_all_button_left  = Math.floor( global_screen_width * 0.37 );

  if ( mode == 'portrait' ) { get_all_button_left = Math.floor( global_screen_width * 0.25 ); }

  var get_all_button_width = Math.floor( global_screen_width * 0.04 );

  if ( mode != 'pc' ) { get_all_button_width = Math.floor( $('#case_list_options').height() * 1.7 ); }

  $('#case_list_options').append('<div id="get_all_cases"><center>All</center></div>');

  $('#get_all_cases').css( { position: 'absolute',
                             top : options_top,
                             left: get_all_button_left,
                            'padding-top': options_padding_top,
                             height: options_height,
                             width: get_all_button_width,
                         // 'background-color': '#f3f3f4',
                         //  border: '1px solid #b4b4b4',
                            'border-radius': options_radius,
                             font: options_font_size } );

  $('#get_all_cases').on('click', function() {

    $('#get_all_cases').css( { 'background-color': '#f3f3f4',
                                border: '1px solid #b4b4b4' } );

    $('#get_my_cases').css( { 'background-color': '',
                               border: '' } );

    global_case_list_query_owner = 'all';

  } );



  // mine

  var get_mine_button_left  = get_all_button_left + get_all_button_width + 20;
  var get_mine_button_width = Math.floor( global_screen_width * 0.04 );

  if ( mode != 'pc' ) { get_mine_button_width = Math.floor( $('#case_list_options').height() * 1.7 ); }

  $('#case_list_options').append('<div id="get_my_cases"><center>Mine</center></div>');

  $('#get_my_cases').css( { position: 'absolute',
                            top : options_top,
                            left: get_mine_button_left,
                           'padding-top': options_padding_top,
                            height: options_height,
                            width: get_mine_button_width,
                           'background-color': '#f3f3f4',
                            border: '1px solid #b4b4b4',
                           'border-radius': options_radius,
                            font: options_font_size } );

  $('#get_my_cases').on('click', function() {

    $('#get_my_cases').css( { 'background-color': '#f3f3f4',
                               border: '1px solid #b4b4b4' } );

    $('#get_all_cases').css( { 'background-color': '',
                                border: '' } );

    global_case_list_query_owner = 'mine';

  } );



  // sort by 

  // set global_case_list_search_sort_order to latest_created, oldest, latest_activity, or urgency

  var get_button_right = $('#get_my_cases').position().left + $('#get_my_cases').width();


  var sort_div_left = get_button_right + 20;

  if ( mode == 'landscape' ) { sort_div_left = get_button_right + 40; }
  if ( mode == 'pc' )        { sort_div_left = get_button_right + 120; }


  var sort_div_left_padding = '20px';

  if ( mode == 'pc' ) { sort_div_left_padding = '80px'; }


  var sort_by_text = 'Sort by&nbsp;';

  if ( mode == 'portrait' ) { sort_by_text = ''; }


  $('#case_list_options').append('<div id="sort_by_option">' 
                               + '<div style="display: table-cell; padding-left: ' + sort_div_left_padding + '; border-left: 1px solid #bdbec1; color: #b3b4b7;">' + sort_by_text + '</div>'
                               + '<div id="sort_by_option_text" style="display: table-cell;">' + global_case_list_sort_order + '</div>'
                               + '</div>');
  
  $('#sort_by_option').css( { position: 'absolute',
                              top : options_top,
                              left: sort_div_left,
                             'padding-top': options_padding_top,
                              height: options_height,
                           // width: 200,
                           //'background-color': '#88aa88',
                              font: options_font_size } );

  console.log('nav_header_height ' + nav_header_height + ', options_font_size ' + options_font_size );

  create_case_list_sort_menu( nav_header_height, options_font_size );

  $('#sort_by_option').on('click', function() { toggle_case_list_sort_menu(); } );




  // list of cases

  var case_start_top = nav_header_height;
  var case_title_left_padding = 20;

  var case_background_color = '#fafafb';

  var bg_color = case_background_color;



  // get cases from api instead of global case info

  // set_global_current_id_and_load_case_events checks the global case info and gets the case if not in the array

  // /api/get_my_cases.json/doctor_id=1


  // if global_case_list_filter_option_status = bookmark, call get_bookmarked_cases api instead

  console.log('case list, global_case_list_filter_option_status is ' + global_case_list_filter_option_status );


  var doctor_id = 1;


  if ( global_case_list_filter_option_status == 'bookmarks' ) {

    list_my_bookmarks_for( doctor_id );

  } else {

    // list_all_cases_for( doctor_id );


    list_my_cases_for( doctor_id );

  }



  // success and error functions from the ajax call

  // if caseinfo list .length = 0, case_info_list = global_case_info

  // list_cases_from_global_case_info

  // list_cases_from_case_info_api_list



  // for (var case_id in case_info_api_list)
  // case info api list has .case_id, 




  return;




  // the rest of this function was copied to list_cases_from_global_case_info()


  for (var case_id in global_case_info) {

    if ( global_case_info[case_id].status != global_case_list_filter_option_status ) continue;


    var case_div_id           = "case_"               + case_id;
    var case_title_id         = "case_title_"         + case_id;
    var case_text_id          = "case_text_"          + case_id;
    var case_comments_id      = "case_comments_"      + case_id;
    var case_info_id          = "case_info_"          + case_id;
    var case_patient_id       = "case_patient_"       + case_id;
    var case_summary_id       = "case_summary_"       + case_id;
    var case_last_comment_id  = "case_last_comment_"  + case_id;
    var case_data_id          = "case_data_"          + case_id;
    var case_last_poster_id   = "case_last_poster_"   + case_id;
    var case_comment_text_id  = "case_comment_text_"  + case_id;


    // case div

    $('#case_list').append('<div id="' + case_div_id + '"></div>'); 

    $('#' + case_div_id).css( { position: 'absolute',
                                top: case_start_top,
                                width: global_screen_width,
                               'min-height': 0,
                               'background-color': bg_color } );

    if ( bg_color == case_background_color ) { bg_color = '#ffffff'; }
                                        else { bg_color = case_background_color; }


    if ( global_case_info[case_id].status == 'active' ) 
      $('#' + case_div_id).on('click', function() { set_global_current_id_and_load_case_events(this); } );

    if ( global_case_info[case_id].status == 'draft' )
      $('#' + case_div_id).on('click', function() { set_global_current_id_and_load_create_case(this); } );

    if ( global_case_info[case_id].status == 'published' )
      $('#' + case_div_id).on('click', function() { set_global_current_id_and_load_case_events(this); } );


    // bookmarks




    // case title

    $('#' + case_div_id).append('<div id="' + case_title_id + '">' + global_case_info[case_id].title + '</div>');

    $('#' + case_title_id).css( { 'padding-top': 10,
                                  'padding-left': case_title_left_padding,
                                  'padding-bottom': 10,
                                  'font-family': 'Droid Sans',
                                   font: '25px "Droid Sans", sans-serif' } );


    // case text, case comments

    var half_of_width = global_screen_width / 2;

    $('#' + case_div_id).append('<div id="' + case_text_id + '"></div><div id="' + case_comments_id + '"></div>');

    $('#' + case_text_id).css( {  display: 'table-cell',
                                 'min-height': 10,
                                  width: half_of_width } );

    $('#' + case_comments_id).css( {  display: 'table-cell',
                                     'min-height': 10,
                                      width: half_of_width } );


    // case info, left border is colored, not colored for case v06

    $('#' + case_text_id).append('<div id="' + case_info_id + '"></div>');

    $('#' + case_info_id).css( { 'padding-left': 10,
                                 'margin-left': case_title_left_padding } );
                              // 'border-left': '7px solid #dd8888'


    // case patient info

    $('#' + case_info_id).append('<div id="' + case_patient_id + '"></div>');

    $('#' + case_patient_id).css( { 'font-family': 'Droid Sans',
                                    'font': 'bold 13px "Droid Sans", sans-serif' } );

    /* 

    var case_gender = "gender unknown";
    var case_age = "age unknown";

    if ( typeof( global_case_info[case_id].gender ) != 'undefined' ) { case_gender = global_case_info[case_id].gender; }
    if ( typeof( global_case_info[case_id].age    ) != 'undefined' ) { case_age    = global_case_info[case_id].age;    }

    */

    var patient_info_text;

    if ( global_case_info[case_id].gender == '' ) {

      if ( global_case_info[case_id].age == '' ) { patient_info_text = 'Anonymous patient'; }
                                            else { patient_info_text = 'Anonymous ' + global_case_info[case_id].age; }

    } else {

      if ( global_case_info[case_id].age == '' ) { patient_info_text = global_case_info[case_id].gender; }
                                            else { patient_info_text = global_case_info[case_id].age + ', ' + global_case_info[case_id].gender; }

    }


    $('#' + case_patient_id).append('<div>' + patient_info_text + '</div>');



    // case summary

    $('#' + case_info_id).append('<div id="' + case_summary_id + '"></div>');

    $('#' + case_summary_id).css( { 'padding-top':5,
                                    'padding-right': 20,
                                    'font-family': 'Droid Sans',
                                     font: '14px "Droid Sans", sans-serif' } );

    $('#' + case_summary_id).html(global_case_info[case_id].summary);



    // case comment, v06

    // var last_comment_width = Math.floor( half_of_width * 0.7 );
    // var data_width = half_of_width - last_comment_width;
    // $('#' + case_comments_id).append('<div id="' + case_last_comment_id + '"></div><div id="' + case_data_id + '"></div>');

    $('#' + case_comments_id).append('<div id="' + case_last_comment_id + '"></div>');

    $('#' + case_last_comment_id).css( {  display: 'table-cell',
                                         'min-height': 10,
                                       // width: last_comment_width, 
                                          width: half_of_width, 
                                         'font-family': 'Droid Sans',
                                          font: '13px "Droid Sans", sans-serif' } );

    /* 

    $('#' + case_data_id).css( {  display: 'table-cell',
                                 'min-height': 10,
                                  width: data_width,
                                 'padding-right': case_title_left_padding,
                                 'font-family': 'Droid Sans',
                                  font: '13px "Droid Sans", sans-serif' } );


    // case data, number of comments, consensus, days since case started

    $('#' + case_data_id).html('<br><div style="float: right">12 comments</div>');
    $('#' + case_data_id).append('<br><div style="float: right">+7 consensus</div>');
    $('#' + case_data_id).append('<br><div style="float: right">3 Days Old</div>');

    */


    if ( ( typeof( global_case_info[case_id].comments ) != 'undefined' ) 
      && ( global_case_info[case_id].comments.length > 0 ) ) {

      var n = global_case_info[case_id].comments.length - 1;


      // poster and timestamp

      $('#' + case_last_comment_id).append('<div><font color="#67a7db">' + global_case_info[case_id].comments[n].poster + '</font>'
                                         + ' - ' + global_case_info[case_id].comments[n].timestamp + '</div');


      // picture and comment

      $('#' + case_last_comment_id).append('<div id="' + case_last_poster_id + '"></div><div id="' + case_comment_text_id + '"></div>');

      $('#' + case_last_poster_id).css( {  display: 'table-cell',
                                          'padding-top': 7 } );

      $('#' + case_comment_text_id).css( {  display: 'table-cell',
                                           'padding-top': 7,
                                           'padding-left': 7,
                                           'border-right': '1px solid #dddddd',
                                           'vertical-align': 'top',
                                           'font-family': 'Droid Sans',
                                            font: '14px "Droid Sans", sans-serif' } );

      $('#' + case_last_poster_id).html('<img src="' + global_case_info[case_id].comments[n].picture + '">');

      $('#' + case_comment_text_id).html(global_case_info[case_id].comments[n].text);


    }



    /*

    // tags, case list v06 does not list tags

    var case_tags_id = "case_tags_" + case_id;

    $('#' + case_div_id).append('<div id="' + case_tags_id + '">&nbsp;</div>');

    $('#' + case_tags_id).css( { 'padding-top': 7,
                                 'padding-bottom': 7,
                                 'margin-top': 15,
                                 'background-color': '#fafafb' } );
    
    if ( ( typeof( global_case_info[case_id].tags ) != 'undefined' )
      && ( global_case_info[case_id].tags.length > 0 ) ) {

    }

    */



    // case data instead of tags for v06

    // $('#' + case_comments_id).append('<div id="' + case_last_comment_id + '"></div><div id="' + case_data_id + '"></div>');

    var last_comment_width = Math.floor( half_of_width * 0.7 );
    var data_width = half_of_width - last_comment_width;

    $('#' + case_div_id).append('<div id="' + case_data_id + '"></div>');

    $('#' + case_data_id).css( { 'min-height': 40,
                                  width: global_screen_width,
                              // 'background-color': '#f0fff0',
                                 'font-family': 'Droid Sans',
                                  font: '13px "Droid Sans", sans-serif' } );


    // posted by, case owner

    // number of different commenters

    // number of comments



    // height = title + summary + tags, start = start + height
    // wait 200 ms for this?

    var case_height = $('#' + case_div_id).height();

    case_start_top += case_height;


  }


}



// case list from the api might have cases that are not in the global case info
// check global case info for the case id
// get case from api and update global case info if not listed

// case events and create case


function set_global_current_id_and_load_case_events(div) {

  console.log('set_global_current_id_and_load_case_events, set global current id, div id is ' + div.id);

  var r = div.id.split('_');

  var case_id = r[r.length - 1];

  console.log('set global current id to ' + case_id);

  global_current_case_id = case_id;

  console.log('set, global current case id is ' + global_current_case_id);


  // ping server, get case timestamp, get case if recent changes

  // does the create case function have to do that?  draft cases ?
  // draft cases use the entry in global case info.  
  // save draft cases to the api when edits are done.

  // the create case api call does a get_case if the global case info entry is undefined
  // add a ping check for the server and an error page ?


  // ping server, get case timestamp, get case if timestamp != current timestamp

  $.ajax( { contentType: 'application/json',
            type: 'GET',
            url: '/api/ping_server.json',
            timeout: 4000,
            dataType: 'json',

            success: function( data, textStatus ) {

              console.log('set_global_current_id_and_load_case_events, ping_server, textStatus ' + textStatus + ', ' + JSON.stringify( data, undefined, 2 ) );


              global_server_timestamp = data.server_time_stamp;


              // start load animation
              // set background color ?

              console.log('append shade div');

              $('body').append('<div id="case_list_shade" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: #000000; opacity: 0"></div>');

              $('#case_list_shade').fadeTo(10000, 0.9);


              // send a date that will cause true to be returned, if the case is not in the global case info array
              var case_timestamp = '2001-01-01T12:00:00Z';
              if ( ( typeof global_case_info[ case_id ] ) != 'undefined' ) {
                if ( ( typeof global_case_info[ case_id ].server_timestamp ) != 'undefined' ) {
                  case_timestamp = global_case_info[ case_id ].server_timestamp;
                }
              }
              console.log('timestamp ' + case_timestamp );

              // get case timestamp, get case if timestamp != current timestamp
              // check case timestamp, if data.updated == true then get case
              // else, if entry in global case info is defined, load case events
              //   if the entry is not defined, then get case ?

              $.ajax( { contentType: 'application/json',
                        type: 'GET',
                        url: '/api/check_case_timestamp.json?case_id=' + case_id + '&server_timestamp=' + case_timestamp,
                        dataType: 'json',

                        success: function( data, textStatus ) {

                          console.log('check_case_timestamp, data.updated is ' + data.updated );

                          // if updated is true, get case from api
                          // if not, load case from global case info
                            // if defined in global case info, load page case events
                            // if not defined, get_case from the api

                          // if updated is true or not defined in global case info
                          // else, load from global case info

                          if (  ( data.updated == true )  ||  ( ( typeof global_case_info[ case_id ] ) == 'undefined' )  ) {

                            // get case

                            console.log('getting case');

                            var doctor_id = 1;

                            $.ajax( { contentType: 'application/json',
                                      type: 'GET',
                                      url: '/api/get_case.json?case_id=' + case_id + '&doctor_id=' + doctor_id,
                                      dataType: 'json',

                                      success: function( data, textStatus ) {

                                        // clear interval for loading animation

                                        $('#case_list_shade').remove();

                                        console.log('get case, data is ' + JSON.stringify( data, undefined, 2 ) );
                                        global_case_info[ case_id ] = jQuery.extend( true, {}, data );

                                        // add doctor.name to the global case info entry
                                        // doctor object is being added to the api

                                        global_case_info[ case_id ].doctor = { name: global_case_info[ case_id ].owner };


                                        // add case_id to global case info entry

                                        global_case_info[ case_id ].case_id = global_case_info[ case_id ].id;


                                        load_page('case_events');

                                      },

                                      // error, add shade div and error box that says offline
                                      // this runs after the api check, though
                                      // if offline, the global case info is listed instead of the api

                                      processData: false

                            } );

                          } else {

                              // the case info entry exists, and updated is false,

                              console.log('load case events, global_case_info[case_id] is ' + JSON.stringify( global_case_info[case_id], undefined, 2 ) );
                              load_page('case_events');

                          }


                        },

                        error: function( jqXHR, textStatus, errorThrown ) {

                          console.log('check case timestamp error, textStatus ' + textStatus + ', error from the api');

                          // list_cases_from_global_case_info();

                        },

                        processData: false

              } );




            },

            error: function( jqXHR, textStatus, errorThrown ) {

              console.log('ping_server, textStatus ' + textStatus + ', error from the api');

              if ( ( typeof global_case_info[case_id] ) != 'undefined' ) {

                console.log('load case events, global_case_info[case_id] is ' + JSON.stringify( global_case_info[case_id], undefined, 2 ) );

                load_page('case_events');

              } else {

                // error page ?  case list was returned but case does not load?
                // error, add shade div and error box that says offline

              }

            },

            processData: false

  } );

}



function set_global_current_id_and_load_create_case(div) {

  console.log('set global current id, div id is ' + div.id);

  var r = div.id.split('_');

  var case_id = r[r.length - 1];

  console.log('set global current id to ' + case_id);

  global_current_case_id = case_id;

  console.log('set, global current case id is ' + global_current_case_id);


  // ping the server, get the case if ping is up ?

  // add something to the error function of get_case


  if ( ( typeof global_case_info[case_id] ) != 'undefined' ) {

    console.log('load create case, global_case_info[case_id] is ' + JSON.stringify( global_case_info[case_id], undefined, 2 ) );

    load_page('create_case');

  } else {

    console.log('get case info, type not defined, global_case_info[case_id] is ' + JSON.stringify( global_case_info[case_id], undefined, 2 ) );


    // ping server

    $.ajax( { contentType: 'application/json',
              type: 'GET',
              url: '/api/ping_server.json',
              timeout: 4000,
              dataType: 'json',

              success: function( data, textStatus ) {

                console.log('ping_server, textStatus ' + textStatus + ', ' + JSON.stringify( data, undefined, 2 ) );

                global_server_timestamp = data.server_time_stamp;


                // start loading animation

                console.log('append shade div');

                $('body').append('<div id="case_list_shade" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: #000000; opacity: 0"></div>');

                $('#case_list_shade').fadeTo(10000, 0.9);

                var doctor_id = 1;

                $.ajax( { contentType: 'application/json',
                          type: 'GET',
                          url: '/api/get_case.json?case_id=' + case_id + '&doctor_id=' + doctor_id,
                          dataType: 'json',

                          success: function( data, textStatus ) {

                            global_server_timestamp = data.server_time_stamp;


                            // clear interval for loading animation

                            $('#case_list_shade').remove();


                            console.log('get case, data is ' + JSON.stringify( data, undefined, 2 ) );

                            global_case_info[ case_id ] = jQuery.extend( true, {}, data );

                            global_case_info[ case_id ].doctor = { name: global_case_info[ case_id ].owner };

                            // add case_id to global case info entry

                            global_case_info[ case_id ].case_id = global_case_info[ case_id ].id;

                            load_page('create_case');

                          },

                          // error, add shade div and error box that says offline
                          // this runs after the api check, though
                          // if offline, the global case info is listed instead of the api

                          processData: false

                } );

              },

              error: function( jqXHR, textStatus, errorThrown ) {

                console.log('ping_server, textStatus ' + textStatus + ', error from the api');

                list_cases_from_global_case_info();

              },

              processData: false

    } );


  }


}



function set_case_list_option(div) {

  console.log('set case list option, div is ' + div.id);

  var option_divs = [ 'case_list_active', 'case_list_published', 'case_list_bookmarks', 'case_list_draft' ];

  var option_status;


  for ( var i in option_divs ) {

    var s = option_divs[i].split('_');

    option_status = s[2];

    if ( option_divs[i] == div.id ) { global_case_list_filter_option_status = option_status; } 

  }


  load_page('case_list');

}



//---- case-list-api-functions.js ------------------------------------------------------------------------------------



// case-list-api-functions.js



// ping the api, get the timestamp, etc

// success, get cases from api, list cases from api, update global case info ?

// error, list cases from global case info



// check the server timestamp

// list the current cases if < n minutes ago ?






function list_my_bookmarks_for( doctor_id ) {

  // ping the server

  $.ajax( { contentType: 'application/json',
            type: 'GET',
            url: '/api/ping_server.json',
            timeout: 4000,
            dataType: 'json',

            success: function( data, textStatus ) {

              console.log('ping_server, textStatus ' + textStatus + ', ' + JSON.stringify( data, undefined, 2 ) );

              global_server_timestamp = data.server_time_stamp;


              // start load animation

              $('body').append('<div id="case_list_shade" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: #000000; opacity: 0"></div>');

              $('#case_list_shade').fadeTo(5000, 0.9);

              get_my_bookmarks_from_api( doctor_id );

            },

            error: function( jqXHR, textStatus, errorThrown ) {

              console.log('ping_server, textStatus ' + textStatus + ', error from the api');

            },

            processData: false

  } );

}



function get_my_bookmarks_from_api( doctor_id ) {

  var bookmark_info_api_list = [];

  $.ajax( { contentType: 'application/json',
            type: 'GET',
            url: '/api/get_bookmarked_cases.json?doctor_id=' + doctor_id,
            dataType: 'json',

            success: function( data, textStatus ) {

              // clear interval for loading animation

              $('#case_list_shade').remove();


              bookmark_info_api_list = data;

              console.log('bookmark_info_api_list ' + JSON.stringify( bookmark_info_api_list, undefined, 2 ) );

              list_cases_from( data );

            },

            processData: false

  } );

}



function list_my_cases_for( doctor_id ) {

  // ping the server

  $.ajax( { contentType: 'application/json',
            type: 'GET',
            url: '/api/ping_server.json',
            timeout: 4000,
            dataType: 'json',

            success: function( data, textStatus ) {

              console.log('ping_server, textStatus ' + textStatus + ', ' + JSON.stringify( data, undefined, 2 ) );


              global_server_timestamp = data.server_time_stamp;


              // start load animation

              $('body').append('<div id="case_list_shade" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: #000000; opacity: 0"></div>');

              $('#case_list_shade').fadeTo(5000, 0.9);



              // global_case_list_owner, all or mine


              get_my_cases_from_api( doctor_id );


              // get all cases


            },

            error: function( jqXHR, textStatus, errorThrown ) {

              console.log('ping_server, textStatus ' + textStatus + ', error from the api');

              list_cases_from_global_case_info();

            },

            processData: false

          } );

}



// get my cases from api

// success, list the case api info array

// failure, ?  server returned ping and timestamp but not cases ?  list global case info instead ?



function get_my_cases_from_api( doctor_id ) {

  var case_info_api_list = [];

  console.log('get_my_cases_from_api, status ' + global_case_list_filter_option_status);

  $.ajax( { contentType: 'application/json',
            type: 'GET',
            url: '/api/get_my_cases.json?doctor_id=' + doctor_id + '&status=' + global_case_list_filter_option_status + '&sort_by=' + global_case_list_sort_order,
            dataType: 'json',

            success: function( data, textStatus ) {

              // clear interval for loading animation

              $('#case_list_shade').remove();


              case_info_api_list = data;

              console.log('case_info_api_list ' + JSON.stringify( case_info_api_list, undefined, 2 ) );

              list_cases_from_case_info_api_list( case_info_api_list );

            },

            processData: false

          } );

}



function list_cases_from_global_case_info() {

  console.log('list_cases_from_global_case_info');

  var case_info = global_case_info;

  list_cases_from( case_info );

}



function list_cases_from_case_info_api_list( case_info_api_list ) {

  console.log('list_cases_from_case_info_api_list');

  var case_info = case_info_api_list;

  list_cases_from( case_info );

}



function list_cases_from( case_info ) {

  console.log('list_cases_from, case_info is ' + JSON.stringify( case_info, undefined, 2 ) );

  var nav_header_height = parseInt( $('#nav_header_bar').height() );

  var case_start_top = nav_header_height;
  var case_title_left_padding = 20;

  var case_background_color = '#fafafb';

  var bg_color = case_background_color;


  for (var id in case_info) {

    var this_case = case_info[id];

    var case_id = this_case.case_id;

    if ( global_case_list_filter_option_status != 'bookmarks' ) {

      if ( this_case.status != global_case_list_filter_option_status ) continue;

    }


    var case_div_id           = "case_"               + case_id;
    var case_title_id         = "case_title_"         + case_id;
    var case_text_id          = "case_text_"          + case_id;
    var case_comments_id      = "case_comments_"      + case_id;
    var case_info_id          = "case_info_"          + case_id;
    var case_patient_id       = "case_patient_"       + case_id;
    var case_summary_id       = "case_summary_"       + case_id;
    var case_last_comment_id  = "case_last_comment_"  + case_id;
    var case_data_id          = "case_data_"          + case_id;
    var case_last_poster_id   = "case_last_poster_"   + case_id;
    var case_comment_text_id  = "case_comment_text_"  + case_id;


    // case div

    $('#case_list').append('<div id="' + case_div_id + '"></div>');

    $('#' + case_div_id).css( { position: 'absolute',
                                top: case_start_top,
                                width: global_screen_width,
                               'min-height': 0,
                               'background-color': bg_color } );

    if ( bg_color == case_background_color ) { bg_color = '#ffffff'; }
                                        else { bg_color = case_background_color; }


    if ( this_case.status == 'active' )
      $('#' + case_div_id).on('click', function() { set_global_current_id_and_load_case_events(this); } );

    if ( this_case.status == 'draft' )
      $('#' + case_div_id).on('click', function() { set_global_current_id_and_load_create_case(this); } );

    if ( this_case.status == 'published' )
      $('#' + case_div_id).on('click', function() { set_global_current_id_and_load_case_events(this); } );


    // bookmarks




    // case title

    $('#' + case_div_id).append('<div id="' + case_title_id + '">' + this_case.title + '</div>');

    $('#' + case_title_id).css( { 'padding-top': 10,
                                  'padding-left': case_title_left_padding,
                                  'padding-bottom': 10,
                                  'font-family': 'Droid Sans',
                                   font: '25px "Droid Sans", sans-serif' } );


    // case text, case comments

    var half_of_width = global_screen_width / 2;

    $('#' + case_div_id).append('<div id="' + case_text_id + '"></div><div id="' + case_comments_id + '"></div>');

    $('#' + case_text_id).css( {  display: 'table-cell',
                                 'vertical-align': 'top',
                                 'min-height': 10,
                                  width: half_of_width } );

    $('#' + case_comments_id).css( {  display: 'table-cell',
                                     'vertical-align': 'top',
                                     'padding-top': 13,
                                     'min-height': 10,
                                      width: half_of_width } );


    // case info, left border is colored, not colored for case v06

    $('#' + case_text_id).append('<div id="' + case_info_id + '"></div>');

    $('#' + case_info_id).css( { 'padding-left': 10,
                                 'margin-left': case_title_left_padding } );
                              // 'border-left': '7px solid #dd8888'


    // case patient info

    $('#' + case_info_id).append('<div id="' + case_patient_id + '"></div>');

    $('#' + case_patient_id).css( { 'font-family': 'Droid Sans',
                                    'font': 'bold 13px "Droid Sans", sans-serif' } );

    /*

    var case_gender = "gender unknown";
    var case_age = "age unknown";

    if ( typeof( this_case.gender ) != 'undefined' ) { case_gender = this_case.gender; }
    if ( typeof( this_case.age    ) != 'undefined' ) { case_age    = this_case.age;    }

    */


    var patient_info_text = 'Anonymous patient';

    // this case patients[0] .gender

    if ( ( typeof this_case.patients ) != 'undefined' ) {

      if ( this_case.patients.length > 0 ) {

        if ( ( typeof this_case.patients[0] ) != 'undefined' ) {

          if ( ( this_case.patients[0].gender == '' ) || ( ( typeof this_case.patients[0].gender ) == 'undefined' ) ) {

            if ( ( this_case.patients[0].age == '' ) || ( ( typeof this_case.patients[0].age ) == 'undefined' ) ) { 
              patient_info_text = 'Anonymous patient'; 
            } else { 
              patient_info_text = 'Anonymous ' + this_case.patients[0].age; 
            }

          } else {

            if ( ( this_case.patients[0].age == '' ) || ( ( typeof this_case.patients[0].age ) == 'undefined' ) ) { 
              patient_info_text = this_case.patients[0].gender; 
            } else { 
              patient_info_text = this_case.patients[0].age + ', ' + this_case.patients[0].gender; 
            }

          }

        }

      }

    }

    $('#' + case_patient_id).append('<div>' + patient_info_text + '</div>');



    // case summary

    $('#' + case_info_id).append('<div id="' + case_summary_id + '"></div>');

    $('#' + case_summary_id).css( { 'padding-top':5,
                                    'padding-right': 20,
                                 // 'background-color': '#88aa88',
                                    'font-family': 'Droid Sans',
                                     font: '14px "Droid Sans", sans-serif' } );

    $('#' + case_summary_id).html( this_case.summary );


    // posted by

    var case_timestamp = time_since( this_case.created_at );

    $('#' + case_summary_id).append('<br><br><div>Posted by ' + this_case.doctor.name + ', ' + case_timestamp + '</div>');


    // the test date for case 123 should have doctor.name

    // $('#' + case_summary_id).append('<br><br><div>Posted by ' + this_case.owner + ', ' + case_timestamp + '</div>');





    // case comment, v06

    // var last_comment_width = Math.floor( half_of_width * 0.7 );
    // var data_width = half_of_width - last_comment_width;
    // $('#' + case_comments_id).append('<div id="' + case_last_comment_id + '"></div><div id="' + case_data_id + '"></div>');

    $('#' + case_comments_id).append('<div id="' + case_last_comment_id + '"></div>');

    $('#' + case_last_comment_id).css( {  display: 'table-cell',
                                         'min-height': 10,
                                       // width: last_comment_width,
                                          width: half_of_width,
                                         'font-family': 'Droid Sans',
                                          font: '13px "Droid Sans", sans-serif' } );

    /*

    $('#' + case_data_id).css( {  display: 'table-cell',
                                 'min-height': 10,
                                  width: data_width,
                                 'padding-right': case_title_left_padding,
                                 'font-family': 'Droid Sans',
                                  font: '13px "Droid Sans", sans-serif' } );


    // case data, number of comments, consensus, days since case started

    $('#' + case_data_id).html('<br><div style="float: right">12 comments</div>');
    $('#' + case_data_id).append('<br><div style="float: right">+7 consensus</div>');
    $('#' + case_data_id).append('<br><div style="float: right">3 Days Old</div>');

    */


    // display comment from global case info comments

    if ( ( typeof( this_case.comments ) != 'undefined' )
      && ( this_case.comments.length > 0 ) ) {

      var n = this_case.comments.length - 1;


      // poster and timestamp

      $('#' + case_last_comment_id).append('<div><font color="#67a7db">' + this_case.comments[n].poster + '</font>'
                                         + ' - ' + this_case.comments[n].timestamp + '</div');


      // picture and comment

      $('#' + case_last_comment_id).append('<div id="' + case_last_poster_id + '"></div><div id="' + case_comment_text_id + '"></div>');

      $('#' + case_last_poster_id).css( {  display: 'table-cell',
                                          'padding-top': 10 } );

      $('#' + case_comment_text_id).css( {  display: 'table-cell',
                                           'padding-top': 7,
                                           'padding-left': 7,
                                           'border-right': '1px solid #dddddd',
                                           'vertical-align': 'top',
                                           'font-family': 'Droid Sans',
                                            font: '14px "Droid Sans", sans-serif' } );

      $('#' + case_last_poster_id).html('<img src="' + this_case.comments[n].picture + '">');

      $('#' + case_comment_text_id).html( this_case.comments[n].text );


      // add poster, timestamp, case data



    }





    // display comment from case list api info last_comment

    if ( ( typeof this_case.last_comment ) != 'undefined' ) {

      console.log('last comment was ' + this_case.last_comment.comment_text );

      // find the commentor whose id is in the last comment

      var poster;
      var picture;

      for ( var c in this_case.commentors ) {

        if ( this_case.commentors[c].id == this_case.last_comment.doctor_id ) {
          poster = this_case.commentors[c].name;
          picture = this_case.commentors[c].image_url;
        }

      }

      console.log('poster is ' + poster );

      var timestamp = time_since( this_case.last_comment.created_at );


      // picture and comment

      $('#' + case_last_comment_id).append('<div id="' + case_last_poster_id + '"></div><div id="' + case_comment_text_id + '"></div>');

      $('#' + case_last_poster_id).css( {  display: 'table-cell',
                                          'margin-top': 7,
                                          'padding-left': 18,
                                          'border-left': '2px solid #dddddd' } );

      $('#' + case_comment_text_id).css( {  display: 'table-cell',
                                           'padding-top': 7,
                                           'padding-left': 7,
                                        // 'border-right': '1px solid #dddddd',
                                           'vertical-align': 'top',
                                        // 'background-color': '#8888aa',
                                           'font-family': 'Droid Sans',
                                            font: '14px "Droid Sans", sans-serif' } );

      $('#' + case_last_poster_id).html('<img src="' + picture + '">');

      $('#' + case_comment_text_id).html( this_case.last_comment.comment_text );


      // design for case v08

      $('#' + case_last_comment_id).append('<div style="padding-left: 18; padding-top: 4;"><font color="#67a7db">' + poster + '</font>'
                                         + ' - <font color="#999999">' + timestamp + '</font></div>');


      // participants and comments

      var data_width = Math.floor( half_of_width * 0.9 );

      $('#' + case_last_comment_id).append('<br><div id="' + case_data_id + '"></div>');

      $('#' + case_data_id).css( {  display: 'table-cell',
                                    width: data_width,
                                // 'background-color': '#88aa88',
                                   'font-family': 'Droid Sans',
                                    font: '13px "Droid Sans", sans-serif' } );


      // case data, number of comments, consensus, days since case started

      $('#' + case_data_id).html('<div style="float: left; padding-left: 30; vertical-align: top;">' + this_case.commentors.length + ' Participants</div>'
                               + '<div style="float: right; padding-right: 30; vertical-align: top;">' 
                               + '<img src="tabeeb-comment-case-icon.png" height=15 width=20 style="padding-right: 10;" ></img>'
                               + this_case.comment_count + ' Comments</div><br>');


    }



    

    /*

    // tags, case list v06 does not list tags

    var case_tags_id = "case_tags_" + case_id;

    $('#' + case_div_id).append('<div id="' + case_tags_id + '">&nbsp;</div>');

    $('#' + case_tags_id).css( { 'padding-top': 7,
                                 'padding-bottom': 7,
                                 'margin-top': 15,
                                 'background-color': '#fafafb' } );

    if ( ( typeof( this_case.tags ) != 'undefined' )
      && ( this_case.tags.length > 0 ) ) {

    }

    */



    // posted by, case owner

    // number of different commenters

    // number of comments



    // height = title + summary + tags, start = start + height
    // wait 200 ms for this?

    var case_summary_bottom = $('#' + case_summary_id).position().top + $('#' + case_summary_id).outerHeight();

    var case_data_bottom = 0;

    if ( $('#' + case_data_id).length > 0 ) {

      case_data_bottom = $('#' + case_data_id).position().top + $('#' + case_data_id).outerHeight() + 10;

    }

    // console.log('case_data_bottom is ' + case_data_bottom );


    var case_bottom = case_summary_bottom;

    if ( case_data_bottom > case_bottom ) { case_bottom = case_data_bottom; }

    // console.log('case_bottom is ' + case_bottom );



    // var case_height = $('#' + case_div_id).height();

    var case_height = case_bottom + 20;

    $('#' + case_div_id).css( { height: case_height } );


    case_start_top += case_height;


  }


}



//---- case-list-search-functions.js ------------------------------------------------------------------------------------




// case-list-search-functions.js




var global_case_list_search_results;

// if you get results, then load case list from that set of cases, until one of the filter options is hit


var global_case_list_sort_order = 'Newest';

// latest_created, oldest, latest_activity, urgency


var global_case_list_query_owner = 'mine';

// all, mine




function search_cases() {

  var search_word = $('#search_cases_input').text();

  console.log('search_cases, search_word ' + search_word );


  $.ajax( { contentType: 'application/json',
            type: 'GET',
            url: '/api/ping_server.json',
            timeout: 4000,
            dataType: 'json',

            success: function( data, textStatus ) {

              console.log('ping_server, textStatus ' + textStatus + ', ' + JSON.stringify( data, undefined, 2 ) );


              global_server_timestamp = data.server_time_stamp;


              // toggle active case list div off

              // draft filter option should not have search input ?

              $('#case_list_active').css( { border: '1px solid #dcdcde', 'background-color': '#dcdcde' } );


              // remove case divs from case list

              $('#case_list').children().each(

                function( i, element ) {

                  // console.log('case_list i id is ' + element.id );

                  if ( element.id != 'case_list_options' ) {

                    $('#' + element.id).remove();

                  }

                }

              );



              // start load animation

              $('body').append('<div id="case_list_shade" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: #000000; opacity: 0"></div>');

              $('#case_list_shade').fadeTo(5000, 0.9);

              search_cases_for( search_word );

            },

            error: function( jqXHR, textStatus, errorThrown ) {

              console.log('ping_server, textStatus ' + textStatus + ', error from the api');

              // load case list page from global case info

            },

            processData: false

          } );


}



function search_cases_for( search_word ) {

  var case_info_api_list = [];

  console.log('search_cases_for, global filter option status is ' + global_case_list_filter_option_status );

  var doctor_id = 1;

  $.ajax( { contentType: 'application/json',
            type: 'GET',
            url: '/api/search_cases.json?search_text=' + search_word + '&doctor_id=' + doctor_id + '&sort_by=' + global_case_list_sort_order,
            dataType: 'json',

            success: function( data, textStatus ) {

              // clear interval for loading animation

              $('#case_list_shade').remove();


              console.log('search_cases success, data is ' + JSON.stringify( data, undefined, 2 ) );

              var margin_top = 100;

              if ( $('#case_list').children().length > 1 ) { margin_top = 30; }


              // the search result has cases in other filter statuses
              // check count of cases in current filter status, list cases if > 0
              // show counts of cases in statuses if 0

              if ( data.length > 0 ) {

                var count = { active: 0,
                              published: 0,
                              draft: 0,
                              bookmarks: 0 };

                console.log('count of ' + global_case_list_filter_option_status + ' option is ' + count[ global_case_list_filter_option_status ] );


                for ( var d in data ) {

                  count[ data[d].status ]++;

                  if ( data[d].bookmarked == true ) { count.bookmarks++; }

                }


                if ( count[ global_case_list_filter_option_status ] > 0 ) {
          
                  list_cases_from( data );

                } else {

                  var break_string = ' ';
                  var mode = get_orientation_mode();

                  if ( mode == 'portrait' ) { break_string = '<br>'; }

                  $('#case_list').append('<div style="margin-top: ' + margin_top + '; margin-left: 50; font: 18px \'Droid Sans\';">'
                                       + '<center>There are ' + count.active + ' active, ' + count.published + ' published, ' 
                                       + count.bookmarks + ' bookmarked, and ' + count.draft + ' draft cases' + break_string 
                                       + 'that match "' + search_word + '"</center>'
                                       + '</div>');
                }

              } else {

                // data.length == 0

                $('#case_list').append('<div style="margin-top: ' + margin_top + '; margin-left: 50; font: 18px \'Droid Sans\';"><center>No cases match "' + search_word + '"</center></div>');

              }


            },

            processData: false

          } );


}



//---- case-list-menu-functions.js ------------------------------------------------------------------------------------




// case-list-menu-functions.js



// move menu code here from case-list-functions.js

// add pull-down menu with same options


var global_case_list_options_menu_state = 'hidden';


var global_case_list_sort_menu_state = 'hidden';





function add_case_list_filter_menu_items( nav_header_height, options_font_size, mode ) {

  console.log('add_case_list_filter_menu_items');
  console.log('options_font_size is ' + options_font_size );
  console.log('mode is ' + mode );


  // active

  var case_active_option_left  = Math.floor( global_screen_width * 0.013 );
  var case_active_option_width = Math.floor( global_screen_width * 0.065 );

  var options_height = Math.floor( nav_header_height * 0.54 );

  if ( mode == 'pc' ) { options_height = Math.floor( nav_header_height * 0.56 ); }

  var options_padding_top = Math.floor( nav_header_height * 0.15 );

  if ( mode == 'pc' ) { options_padding_top = Math.floor( nav_header_height * 0.16 ); }

  var options_top = Math.floor( ( nav_header_height - ( options_height + options_padding_top ) ) / 2 );

  var options_radius = Math.floor( ( options_height + options_padding_top ) * 0.6 );


  $('#case_list_options').append('<div id="case_list_active"><center>Active</center></div>');

  $('#case_list_active').css( { position: 'absolute',
                                top : options_top,
                                left: case_active_option_left,
                               'padding-top': options_padding_top,
                                height: options_height,
                                width: case_active_option_width,
                               'background-color': '#f3f3f4',
                                border: '1px solid #b4b4b4',
                               'border-radius': options_radius,
                                font: options_font_size } );

  if ( global_case_list_filter_option_status != 'active' )
    $('#case_list_active').css( { border: '1px solid #dcdcde', 'background-color': '#dcdcde' } );

  if (is_mobile) {
    $('#case_list_active').on('touchstart', function() { set_case_list_option(this); } );
  } else {
    $('#case_list_active').on('click', function() { set_case_list_option(this); } );
  }



  // published

  var case_published_option_left  = Math.floor( global_screen_width * 0.080 );
  var case_published_option_width = Math.floor( global_screen_width * 0.095 );

  $('#case_list_options').append('<div id="case_list_published"><center>Published</center></div>');

  $('#case_list_published').css( { position: 'absolute',
                                   top : options_top,
                                   left: case_published_option_left,
                                  'padding-top': options_padding_top,
                                   height: options_height,
                                   width: case_published_option_width,
                                  'background-color': '#f3f3f4',
                                   border: '1px solid #b4b4b4',
                                  'border-radius': options_radius,
                                   font: options_font_size } );

  if ( global_case_list_filter_option_status != 'published' )
    $('#case_list_published').css( { border: '1px solid #dcdcde', 'background-color': '#dcdcde' } );

  if (is_mobile) {
    $('#case_list_published').on('touchstart', function() { set_case_list_option(this); } );
  } else {
    $('#case_list_published').on('click', function() { set_case_list_option(this); } );
  }



  // bookmarks

  var case_bookmarks_option_left  = Math.floor( global_screen_width * 0.179 );
  var case_bookmarks_option_width = Math.floor( global_screen_width * 0.105 );

  $('#case_list_options').append('<div id="case_list_bookmarks"><center>Bookmarks</center></div>');

  $('#case_list_bookmarks').css( { position: 'absolute',
                                   top : options_top,
                                   left: case_bookmarks_option_left,
                                  'padding-top': options_padding_top,
                                   height: options_height,
                                   width: case_bookmarks_option_width,
                                  'background-color': '#f3f3f4',
                                   border: '1px solid #b4b4b4',
                                  'border-radius': options_radius,
                                   font: options_font_size } );

  if ( global_case_list_filter_option_status != 'bookmarks' )
    $('#case_list_bookmarks').css( { border: '1px solid #dcdcde', 'background-color': '#dcdcde' } );

  if (is_mobile) {
    $('#case_list_bookmarks').on('touchstart', function() { set_case_list_option(this); } );
  } else {
    $('#case_list_bookmarks').on('click', function() { set_case_list_option(this); } );
  }



  // draft

  var case_draft_option_left  = Math.floor( global_screen_width * 0.287 );
  var case_draft_option_width = Math.floor( global_screen_width * 0.065 );

  $('#case_list_options').append('<div id="case_list_draft"><center>Draft</center></div>');

  $('#case_list_draft').css( { position: 'absolute',
                               top : options_top,
                               left: case_draft_option_left,
                              'padding-top': options_padding_top,
                               height: options_height,
                               width: case_draft_option_width,
                              'background-color': '#f3f3f4',
                               border: '1px solid #b4b4b4',
                              'border-radius': options_radius,
                               font: options_font_size } );

  if ( global_case_list_filter_option_status != 'draft' )
    $('#case_list_draft').css( { border: '1px solid #dcdcde', 'background-color': '#dcdcde' } );

  if (is_mobile) {
    $('#case_list_draft').on('touchstart', function() { set_case_list_option(this); } );
  } else {
    $('#case_list_draft').on('click', function() { set_case_list_option(this); } );
  }

}



function add_case_list_filter_drop_down_menu( nav_header_height, options_font_size ) {

  // $('#case_list_options').append('<div>filter is ' + global_case_list_filter_option_status + '</div>');

  var option_list;

  switch( global_case_list_filter_option_status ) {

    case 'active':
      add_case_list_active_filter_item( nav_header_height, options_font_size );
      option_list = [ 'published', 'bookmarks', 'draft' ]
      break;

    case 'draft':
      add_case_list_draft_filter_item( nav_header_height, options_font_size );
      option_list = [ 'active', 'published', 'bookmarks' ]
      break;

    case 'bookmarks':
      add_case_list_bookmarks_filter_item( nav_header_height, options_font_size );
      option_list = [ 'active', 'published', 'draft' ]
      break;

    case 'published':
      add_case_list_published_filter_item( nav_header_height, options_font_size );
      option_list = [ 'active', 'bookmarks', 'draft' ]
      break;

  }


  // create menu with the other two options

  create_case_list_filter_option_menu( nav_header_height, options_font_size, option_list );

}



function add_case_list_active_filter_item( nav_header_height, options_font_size ) {

  console.log('add_case_list_active_filter_item');

  // active

  var case_active_option_left  = Math.floor( global_screen_width * 0.04 );
  var case_active_option_width = Math.floor( global_screen_width * 0.14 );

  var options_height = Math.floor( nav_header_height * 0.55 );
  var options_padding_top = Math.floor( nav_header_height * 0.15 );;
  var options_top = ( nav_header_height - ( options_height + options_padding_top ) ) / 2;
  var options_radius = ( options_height + options_padding_top ) / 2;

  $('#case_list_options').append('<div id="case_list_active"><center>Active</center></div>');

  $('#case_list_active').css( { position: 'absolute',
                                top : options_top,
                                left: case_active_option_left,
                               'padding-top': options_padding_top,
                                height: options_height,
                                width: case_active_option_width,
                               'background-color': '#f3f3f4',
                                border: '1px solid #b4b4b4',
                               'border-radius': options_radius,
                                font: options_font_size } );

  $('#case_list_active').on('touchstart', function() { toggle_case_list_filter_option_menu(); } );

}



function add_case_list_draft_filter_item( nav_header_height, options_font_size ) {

  console.log('add_case_list_draft_filter_item');

  // draft

  var case_draft_option_left  = Math.floor( global_screen_width * 0.04 );
  var case_draft_option_width = Math.floor( global_screen_width * 0.14 );

  var options_height = Math.floor( nav_header_height * 0.55 );
  var options_padding_top = Math.floor( nav_header_height * 0.15 );;
  var options_top = ( nav_header_height - ( options_height + options_padding_top ) ) / 2;
  var options_radius = ( options_height + options_padding_top ) / 2;

  $('#case_list_options').append('<div id="case_list_draft"><center>Draft</center></div>');

  $('#case_list_draft').css( { position: 'absolute',
                                top : options_top,
                                left: case_draft_option_left,
                               'padding-top': options_padding_top,
                                height: options_height,
                                width: case_draft_option_width,
                               'background-color': '#f3f3f4',
                                border: '1px solid #b4b4b4',
                               'border-radius': options_radius,
                                font: options_font_size } );

  $('#case_list_draft').on('touchstart', function() { toggle_case_list_filter_option_menu(); } );

}



function add_case_list_published_filter_item( nav_header_height, options_font_size ) {

  console.log('add_case_list_published_filter_item');

  // draft

  var case_published_option_left  = Math.floor( global_screen_width * 0.04 );
  var case_published_option_width = Math.floor( global_screen_width * 0.20 );

  var options_height = Math.floor( nav_header_height * 0.55 );
  var options_padding_top = Math.floor( nav_header_height * 0.15 );;
  var options_top = ( nav_header_height - ( options_height + options_padding_top ) ) / 2;
  var options_radius = ( options_height + options_padding_top ) / 2;

  $('#case_list_options').append('<div id="case_list_published"><center>Published</center></div>');

  $('#case_list_published').css( { position: 'absolute',
                                   top : options_top,
                                   left: case_published_option_left,
                                  'padding-top': options_padding_top,
                                   height: options_height,
                                   width: case_published_option_width,
                                  'background-color': '#f3f3f4',
                                   border: '1px solid #b4b4b4',
                                  'border-radius': options_radius,
                                   font: options_font_size } );

  $('#case_list_published').on('touchstart', function() { toggle_case_list_filter_option_menu(); } );

}



function add_case_list_bookmarks_filter_item( nav_header_height, options_font_size ) {

  console.log('add_case_list_bookmarks_filter_item');

  // draft

  var case_bookmarks_option_left  = Math.floor( global_screen_width * 0.04 );
  var case_bookmarks_option_width = Math.floor( global_screen_width * 0.20 );

  var options_height = Math.floor( nav_header_height * 0.55 );
  var options_padding_top = Math.floor( nav_header_height * 0.15 );;
  var options_top = ( nav_header_height - ( options_height + options_padding_top ) ) / 2;
  var options_radius = ( options_height + options_padding_top ) / 2;

  $('#case_list_options').append('<div id="case_list_bookmarks"><center>Bookmarks</center></div>');

  $('#case_list_bookmarks').css( { position: 'absolute',
                                   top : options_top,
                                   left: case_bookmarks_option_left,
                                  'padding-top': options_padding_top,
                                   height: options_height,
                                   width: case_bookmarks_option_width,
                                  'background-color': '#f3f3f4',
                                   border: '1px solid #b4b4b4',
                                  'border-radius': options_radius,
                                   font: options_font_size } );

  $('#case_list_bookmarks').on('touchstart', function() { toggle_case_list_filter_option_menu(); } );

}



function create_case_list_filter_option_menu( nav_header_height, options_font_size, option_list ) {

  // shade div

  $('body').append('<div id="filter_option_shade"></div>');

  $('#filter_option_shade').css( { position: 'absolute',
                                   top: 0,
                                   left: 0,
                                   width: $(window).width(),
                                   height: $(window).height(),
                                  'background-color': '#000000',
                                   opacity : 0,
                                  'z-index': 100 } );

  $('#filter_option_shade').on('touchstart', function(e) { e.preventDefault(); toggle_case_list_filter_option_menu(); } );

  $('#filter_option_shade').hide();



  var filter_menu_height = nav_header_height * 3;
  var filter_menu_width = 150;

  var filter_menu_left = 10;

  var case_list_options_top = $('#case_list_options').offset().top;
  var case_list_options_height = $('#case_list_options').outerHeight();

  var filter_menu_top = case_list_options_top + case_list_options_height + 5;


  $('body').append('<div id="filter_option_menu"></div>');

  var fom_css = { position: 'absolute',
                  top: filter_menu_top,
                  left: filter_menu_left,
                  width: filter_menu_width,
                  height: filter_menu_height,
                 'background-color': '#ffffff',
               // border: '1px solid #000000',
                 'box-shadow': '0px 0px 2px 1px #c4c5c7',
              // 'border-radius': 4,
                 'z-index': 101 };

  $('#filter_option_menu').css( fom_css );


  // triangle div pointer to filter option

  var square_edge = 8;

  var triangle_top  = 0 - ( square_edge / 2 );
  var triangle_left = Math.floor( filter_menu_width * 0.35 );

  // if filter option is published, width * 0.5 ?

  if ( ( global_case_list_filter_option_status == 'published' ) 
    || ( global_case_list_filter_option_status == 'bookmarks' ) ) {

    triangle_left = Math.floor( filter_menu_width * 0.46 );

  }

  $('#filter_option_menu').append('<div id="filter_option_triangle"></div>');

  var fot_css = { position: 'absolute',
                  top: triangle_top,
                  left: triangle_left,
                  width: square_edge,
                  height: square_edge,
                 'background-color': '#ffffff',
                  transform: 'rotate(45deg)' 
              // 'box-shadow': '0px 0px 4px 2px #c4c5c7'
                  };

  $('#filter_option_triangle').css( fot_css );
 


  var menu_item_bottom_border = '1px solid #eeeeef';


  for (var i = 0; i < 3; i++ ) {

    var menu_item_top = nav_header_height * i;

    var div_id = 'menu_option_' + option_list[ i ] ;

    $('#filter_option_menu').append('<div id="' + div_id + '"></div>');

    if ( i == 2 ) { menu_item_bottom_border = ''; }

    $('#' + div_id).css( { position: 'absolute',
                           top: menu_item_top,
                           height: ( nav_header_height - 1 ),
                           width: filter_menu_width,
                          'border-bottom': menu_item_bottom_border } );

    var menu_item_text = option_list[i].charAt(0).toUpperCase() + option_list[i].slice(1);

    $('#' + div_id).append('<div style="margin-top: 13"><center>' + menu_item_text + '</center></div>');

    $('#' + div_id).on('touchend', function() { load_case_list_filter_option( this ); } );

  }


  $('#filter_option_menu').hide();

  global_case_list_options_menu_state = 'hidden';

}



function toggle_case_list_filter_option_menu() {

  if ( global_case_list_options_menu_state == 'hidden' ) {

    $('#filter_option_shade').show();

    $('#filter_option_shade').fadeTo(200, 0.3);

    $('#filter_option_menu').show();

    global_case_list_options_menu_state = 'showing';

  } else {

    $('#filter_option_shade').fadeTo(200, 0, function() {

      $('#filter_option_shade').hide();

    } );

    $('#filter_option_menu').hide();

    global_case_list_options_menu_state = 'hidden';

  }

}



function load_case_list_filter_option( div ) {

  var d = div.id.split('_');

  var filter_option = d[2];

  global_case_list_filter_option_status = filter_option;

  setTimeout( function() { load_page('case_list'); }, 50 );

}



function create_case_list_sort_menu( nav_header_height, options_font_size ) {

  console.log('create_case_list_sort_menu, nav_header_height ' + nav_header_height + ', options_font_size ' + options_font_size );

  var mode = get_orientation_mode();

  var sort_option_list = [ 'Urgency', 'Newest', 'Oldest', 'Activity' ];

  // should menu have all options, or leave out the current one ?


  // shade div

  $('body').append('<div id="sort_option_shade"></div>');

  $('#sort_option_shade').css( { position: 'absolute',
                                 top: 0,
                                 left: 0,
                                 width: $(window).width(),
                                 height: $(window).height(),
                                'background-color': '#000000',
                              // opacity : 0,
                                 opacity : 0.4,
                                'z-index': 100 } );

  $('#sort_option_shade').on('click', function(e) { e.preventDefault(); toggle_case_list_sort_menu(); } );

  $('#sort_option_shade').hide();



  var sort_menu_height = nav_header_height * 4;
  var sort_menu_width = 150;

  var sort_menu_left = $('#sort_by_option').position().left;

  if ( mode == 'pc' )       { sort_menu_left += 65; }
  if ( mode == 'portrait' ) { sort_menu_left -= 25; }

  var case_list_options_top = $('#case_list_options').offset().top;
  var case_list_options_height = $('#case_list_options').outerHeight();

  var sort_menu_top = case_list_options_top + case_list_options_height + 5;


  $('body').append('<div id="sort_option_menu"></div>');

  var som_css = { position: 'absolute',
                  top: sort_menu_top,
                  left: sort_menu_left,
                  width: sort_menu_width,
                  height: sort_menu_height,
                 'background-color': '#ffffff',
               // border: '1px solid #000000',
                 'box-shadow': '0px 0px 2px 1px #c4c5c7',
              // 'border-radius': 4,
                 'z-index': 101 };

  $('#sort_option_menu').css( som_css );


  // triangle div pointer to filter option

  var square_edge = 8;

  var triangle_top  = 0 - ( square_edge / 2 );
  var triangle_left = Math.floor( sort_menu_width * 0.45 );


  $('#sort_option_menu').append('<div id="sort_option_triangle"></div>');

  var sot_css = { position: 'absolute',
                  top: triangle_top,
                  left: triangle_left,
                  width: square_edge,
                  height: square_edge,
                 'background-color': '#ffffff',
                  transform: 'rotate(45deg)'
              // 'box-shadow': '0px 0px 4px 2px #c4c5c7'
                  };

  $('#sort_option_triangle').css( sot_css );


  // add menu items

  var menu_item_bottom_border = '1px solid #eeeeef';

  for ( var i = 0; i < 4; i++ ) {

    var menu_item_top = nav_header_height * i;

    var div_id = 'sort_menu_option_' + sort_option_list[ i ] ;

    $('#sort_option_menu').append('<div id="' + div_id + '"></div>');

    if ( i == 3 ) { menu_item_bottom_border = ''; }

    $('#' + div_id).css( { position: 'absolute',
                           top: menu_item_top,
                           height: ( nav_header_height - 1 ),
                           width: sort_menu_width,
                          'border-bottom': menu_item_bottom_border } );

    var menu_item_text = sort_option_list[i];

    $('#' + div_id).append('<div style="margin-top: 13"><center>' + menu_item_text + '</center></div>');

    $('#' + div_id).on('click', function() { set_case_list_sort_option( this ); } );

  }


  $('#sort_option_menu').hide();

}



function toggle_case_list_sort_menu() {

  console.log('toggle_case_list_sort_option_menu, global_case_list_sort_menu_state is ' + global_case_list_sort_menu_state );

  if ( global_case_list_sort_menu_state == 'hidden' ) {

    $('#sort_option_shade').show();

    $('#sort_option_menu').show();

    global_case_list_sort_menu_state = 'showing';

  } else {

    $('#sort_option_shade').hide();

    $('#sort_option_menu').hide();

    global_case_list_sort_menu_state = 'hidden';

  }

}



function set_case_list_sort_option( div ) {

  console.log('set_case_list_sort_option, div is ' + div.id );

  var s = div.id.split('_');

  var sort_option = s[3];

  console.log('sort_option ' + sort_option );

  global_case_list_sort_order = sort_option;

  $('#sort_by_option_text').html( sort_option );

  toggle_case_list_sort_menu();


  // run the current list again

  load_page('case_list');

}

//---- case-create-functions.js ------------------------------------------------------------------------------------




// get case info, load the divs, add event handlers to divs



var case_button_bar_height;

var global_case_input_info = {};

var global_case_input_rows = [];

var global_case_input_current_row = '';

global_case_input_info.events = global_case_input_rows;

global_case_input_info.current_row = global_case_input_current_row;

// 0?


var global_new_case_id = 124;



function init_create_case_page() {

  var case_id;

  console.log('init_create_case_page, global_current_case_id ' + global_current_case_id);


  if ( global_current_case_id == '' ) {

    case_id = get_new_case_id();

    global_current_case_id = case_id;


    var case_object = {};

    var event_array   = [];
    var comment_array = [];
    var tag_array     = [];

    global_case_info[case_id] = case_object;

    global_case_info[case_id].events   = event_array;
    global_case_info[case_id].comments = comment_array;
    global_case_info[case_id].tags     = tag_array;

    global_case_info[case_id].status  = 'new';
    global_case_info[case_id].owner   = '';
    global_case_info[case_id].name    = '';
    global_case_info[case_id].picture = '';
    global_case_info[case_id].age     = '';
    global_case_info[case_id].gender  = '';

    global_case_input_info.status = 'new';

  } else {

    case_id = global_current_case_id;

  }


  // set the global input info name, age, gender, etc from global case info if status is active or draft



  // global input info is only used by create case on reload

  global_case_input_info = {};

  var event_array = [];
  global_case_input_info.events = event_array;

  global_case_input_info.id = case_id;


  console.log('init_create_case_page, case_id ' + case_id);
  console.log('global_current_case_id ' + global_current_case_id);

  load_create_case_inputs(case_id);

}



function get_new_case_id() {

  // check global_case_info[global_new_case_id].status

  // if status is new, use that
  // if status is draft, then get another id

  var new_id = global_new_case_id;

  console.log('get_new_case_id, new_id ' + new_id);


  if ( ( typeof global_case_info[new_id] ) != 'undefined' ) {

    console.log('get_new_case_id, global_case_info[new_id].status ' + global_case_info[new_id].status);


    if ( global_case_info[new_id].status == 'new' ) {

      return new_id;

    } else {

      // global case info status is draft or active,

      new_id++;
      global_new_case_id = new_id;

      return new_id;

    }


  } else {

    // status should be 'new', not undefined?

    return new_id;

  }


}



function load_create_case_inputs(case_id) {

  if ( typeof global_screen_height == 'undefined' ) { get_global_variables(); }

  if ( isNaN( global_screen_height ) ) { load_page('login'); return; }

  set_cookie('last_page_state', 'create_case', 365)


  var mode = get_orientation_mode();


  // add the global current case id to get_global_variables



  // set global screen height on all pages

  // if height is less than global screen height, use original global screen height

  var screen_height = $(window).height();

  if ( screen_height != global_screen_height ) { global_screen_height = screen_height; }



  // console.log('global_current_case_id ' + global_current_case_id);

  // console.log('screen is ' + global_screen_width + ' x ' + global_screen_height);


  // turn off scroll bars

  $('body').css( { 'overflow': 'hidden' } );


  // global flag for photo input
  // if this is true, image names are pushed on to the global case input event image list
  // if false, the name is pushed on to the global input list

  global_create_case_images = 1;
  

  // add inputs for photo

  $('body').append('<div style="height: 0; width: 0; overflow: hidden;">'
                 + '<input id="input_photo" type="file" accept="image/*" capture="camera" onchange="preview_input_image(this);" />'
                 + '</div>');

  $('body').append('<div style="height: 0; width: 0; overflow: hidden;">'
                 + '<input id="attach_photo" type="file" accept="image/*" onchange="preview_input_image(this);" />'
                 + '</div>');



  // preview div for the photo input, append and hide

  /*

  $('body').append('<div id="preview_div"><img id="preview" src="" alt=""></img></div>');

  $('#preview_div').css( { 'position': 'absolute',
                           'top': 40,
                           'left': 70 } );

  $('#preview_div').on('click', function() { $('#preview_div').hide(); } );

  set_preview_onload();

  $('#preview_div').hide();

  */


  // create case v 07
  // button bar is on the top of the screen
  // cancel button is on the left side
  // cancel button menu is below the button, to the right ?
  // photo and category buttons are changed to icons, always show buttons
  // category ui is appended to the button bar, might not need any change ?

  // comment out button bar
  // get button bar height
  // set top of input and tags to button bar height
  // height is the same
  // append button bar div to the page before the input and tags divs
  // comment out the append in the current code
  // leave the rest of the button code after the input and tags code




  // set max height for buttons

  case_button_bar_height = Math.floor(global_screen_width * 0.0556);

  // minimum and maximum height for button bar


  if ( mode != 'pc' ) {

    if ( case_button_bar_height < 54 ) { case_button_bar_height = 54; }
    if ( case_button_bar_height > 60 ) { case_button_bar_height = 60; }

  } else {

    // mode == pc

    if ( case_button_bar_height < 35 ) { case_button_bar_height = 35; }
    if ( case_button_bar_height > 44 ) { case_button_bar_height = 44; }

  }



  // navigation header height code,

  // button top padding has to be changed also

  /*

  if (is_mobile) {

    case_button_bar_height = Math.floor( global_screen_width * 0.07 );

    if ( case_button_bar_height < 44 ) { case_button_bar_height = 44; }
    if ( case_button_bar_height > 49 ) { case_button_bar_height = 49; }

  } else {

    case_button_bar_height = Math.floor( global_screen_width * 0.05 );

    if ( case_button_bar_height > 44 ) { case_button_bar_height = 44; }

  }

  */



  // prepend case button bar to body

  // position fixed, opening the keyboard scrolls the event container

  var case_button_bar_top = 0;

  $('body').prepend('<div id="case_button_bar"></div>');

  $('#case_button_bar').css( { 'position': 'fixed',
                               'top': case_button_bar_top,
                               'left': 0,
                               'z-index': 1,
                               'width': global_screen_width,
                               'height': case_button_bar_height,
                               'background-color': '#292526' } );



  // set width and height of timeline, events, and comments

  // timeline is not on case events page until phase 2


  // button bar minimum height is 52 px
  // size of icons and buttons is ratio of button bar height


  // var timeline_width = Math.floor(global_screen_width * 0.0503);

  var timeline_width = 0;

  // $('#case_timeline').width(timeline_width);
  // $('#case_timeline').height(global_screen_height);


  var comments_width = Math.floor(global_screen_width * 0.2687);
  var comments_x = global_screen_width - comments_width;

  $('#case_comments').width(comments_width);
  $('#case_comments').height(global_screen_height);


  // case events container and case events div

  var events_width = global_screen_width - ( timeline_width + comments_width );
 
  $('#case_events_container').css( { 'position': 'absolute',
                                  // 'top': 0,
                                     'top': case_button_bar_height,
                                     'left': timeline_width,
                                     'overflow': 'hidden',
                                     'height': global_screen_height,
                                     'width': events_width,
                                     'z-index': 0 } );

  $('#case_events_container').append('<div id="case_events"></div>')

  $('#case_events').css( { 'position': 'absolute',
                           'top': 0,
                           'left': 0,
                           'height': global_screen_height,
                           'width': events_width,
                        // 'background-color': '#ffaaaa',
                           'z-index': 1 } );


  // position of timeline and comment columns

  $('#case_timeline').css( { 'position': 'fixed',
                          // 'top': 0, 
                             'top': case_button_bar_height, 
                             'left': 0 } );

  $('#case_comments').css( { 'position': 'fixed',
                          // 'top': 0, 
                             'top': case_button_bar_height, 
                             'left': comments_x } );

  
  // case input background

  var vertical_line_left_margin = Math.floor(global_screen_width * 0.0299);

  if ( vertical_line_left_margin > 30 ) { vertical_line_left_margin = 30; }

  $('#case_events').append('<div id="create_case_vertical_line"></div>');

  $('#create_case_vertical_line').css( { 'position': 'absolute',
                                         'top': 0, 
                                         'left': 0,
                                         'border-right': '5px solid #7f8386',
                                      // 'background-color': '#ffaaaa',
                                         'width': vertical_line_left_margin,
                                         'height': global_screen_height } );


  // case input

  var case_input_top_margin    = Math.floor(global_screen_width * 0.0138);
  var case_input_left_margin   = Math.floor(global_screen_width * 0.0267);
  var case_input_right_margin  = Math.floor(global_screen_width * 0.0100);
  var case_input_bottom_margin = Math.floor(global_screen_width * 0.0100);

  if ( case_input_left_margin > 30 ) { case_input_left_margin = 30; }

  var case_input_top_padding  = Math.floor(global_screen_width * 0.0107);
  var case_input_left_padding = Math.floor(global_screen_width * 0.0117);

  if ( case_input_left_padding > 20 ) { case_input_left_padding = 20; }

  var case_input_left = vertical_line_left_margin + 5 + case_input_left_margin;
  var case_input_width = events_width - ( case_input_left + case_input_right_margin + ( case_input_left_padding * 2 ) );


  /* 

  // global 
  case_button_bar_height = Math.floor(global_screen_width * 0.0556);


  // minimum and maximum height for button bar

  if (case_button_bar_height < 52) { case_button_bar_height = 52; }
  if (case_button_bar_height > 80) { case_button_bar_height = 80; }

  */



  var case_input_height = global_screen_height - ( case_input_top_margin + case_input_bottom_margin + ( case_input_top_padding * 2 ) + case_button_bar_height );


  $('#case_events').append('<div id="case_input"></div>');

  $('#case_input').css( { 'position': 'absolute',
                          'top': case_input_top_margin, 
                          'left': case_input_left,
                          'width': case_input_width,
                          'height': case_input_height,
                      //  'background-color': '#0fffff',
                          'padding-top': case_input_top_padding,
                          'padding-left': case_input_left_padding,
                          'border-radius': 4,
                          'border': '1px solid',
                          'border-top-color': '#909090',
                          'border-left-color': '#b3b3b3',
                          'border-right-color': '#b8b8b8',
                          'border-bottom-color': '#c1c1c1',
                          'color': '#b7b8bd' } );



  // editable divs instead of a text area

  add_case_input_divs( case_id );



  // create category buttons div

  create_category_ui_div( global_screen_width, global_screen_height, case_button_bar_height );


  // hide the photo and category buttons unless a paragraph has focus
  // buttons set a flag checked by case_input_on_blur()



  /* 

  // input button bar, moved to the top of the screen

  var case_button_bar_top = global_screen_height - case_button_bar_height;

  $('body').append('<div id="case_button_bar"></div>');

  $('#case_button_bar').css( { 'position': 'absolute',
                               'top': case_button_bar_top,
                               'left': 0,
                               'width': global_screen_width,
                               'height': case_button_bar_height,
                               'background-color': '#292526' } );

  */



  // create case v 07, get center position, start icons at center - width / 2

  var icons_start_left = ( global_screen_width / 2 ) - 225;



  // add photo buttons

  var photo_button_left_margin = timeline_width + case_input_left;
  var photo_button_top_margin  = Math.floor( case_button_bar_height * 0.18 );
  var photo_button_top         = Math.floor( case_button_bar_height * 0    );
  var photo_button_width       = Math.floor( case_button_bar_height * 1.1  );
  var photo_button_height      = Math.floor( case_button_bar_height * 1    );
  var photo_button_spacing     = Math.floor( case_button_bar_height * 0.2  );


  // take a photo

  var take_a_photo_icon_width  = Math.floor( case_button_bar_height * 0.86 );
  var take_a_photo_icon_height = Math.floor( case_button_bar_height * 0.64 );

  var take_a_photo_icon_top    = ( photo_button_height - take_a_photo_icon_height ) / 2;
  var take_a_photo_icon_left   = ( photo_button_width - take_a_photo_icon_width ) / 2;

  // $('#case_button_bar').append('<div id="take_a_photo_button"><img id="take_a_photo_icon" src="tabeeb-take-a-photo.png"></div>');
  $('#case_button_bar').append('<div id="take_a_photo_button"><img id="take_a_photo_icon" src="tabeeb-take-a-photo-icon-v7.png"></div>');

  $('#take_a_photo_icon').css( { 'position': 'absolute',
                                 'top': take_a_photo_icon_top,
                                 'left': take_a_photo_icon_left,
                                 'width': take_a_photo_icon_width,
                                 'height': take_a_photo_icon_height } );

  $('#take_a_photo_button').css( { 'position': 'absolute',
                                   'top': photo_button_top, 
                                   'left': ( icons_start_left + photo_button_left_margin ),
                                   'width': photo_button_width, 
                                   'height': photo_button_height,
                                   'border-radius': 4,
                                   'background-color': '#2b292a' } );

  $('#take_a_photo_button').on('click', function() { take_a_photo() } );

  // $('#take_a_photo_button').hide();



  // attach a photo from disk

  var attach_a_photo_icon_width  = Math.floor( case_button_bar_height * 0.86 );
  var attach_a_photo_icon_height = Math.floor( case_button_bar_height * 0.64 );

  var attach_a_photo_icon_top    = ( photo_button_height - attach_a_photo_icon_height ) / 2;;
  var attach_a_photo_icon_left   = ( photo_button_width - attach_a_photo_icon_width ) / 2;
  var attach_a_photo_button_left = icons_start_left + photo_button_left_margin + photo_button_width + photo_button_spacing;

  // $('#case_button_bar').append('<div id="attach_a_photo_button"><img id="attach_a_photo_icon" src="tabeeb-attach-a-photo.png"></div>');
  $('#case_button_bar').append('<div id="attach_a_photo_button"><img id="attach_a_photo_icon" src="tabeeb-attach-a-photo-icon-v7.png"></div>');

  $('#attach_a_photo_icon').css( { 'position': 'absolute',
                                   'top': attach_a_photo_icon_top,
                                   'left': attach_a_photo_icon_left,
                                   'width': attach_a_photo_icon_width,
                                   'height': attach_a_photo_icon_height } );

  $('#attach_a_photo_button').css( { 'position': 'absolute',
                                     'top': photo_button_top,
                                     'left': attach_a_photo_button_left,
                                     'width': photo_button_width,
                                     'height': photo_button_height,
                                     'border-radius': 4,
                                     'background-color': '#2b292a' } );

  $('#attach_a_photo_button').on('click', function() { attach_a_photo() } );

  // $('#attach_a_photo_button').hide();



  // calendar button

  var calendar_icon_width  = Math.floor( case_button_bar_height * 0.86 );
  var calendar_icon_height = Math.floor( case_button_bar_height * 0.64 );

  var calendar_icon_top    = ( photo_button_height - calendar_icon_height ) / 2;;
  var calendar_icon_left   = ( photo_button_width - calendar_icon_width ) / 2;
  var calendar_button_left = icons_start_left + photo_button_left_margin + ( ( photo_button_width + photo_button_spacing ) * 2 );

  // $('#case_button_bar').append('<div id="calendar_button"><img id="calendar_icon" src="tabeeb-calendar-icon.png"></div>');
  $('#case_button_bar').append('<div id="calendar_button"><img id="calendar_icon" src="tabeeb-calendar-icon-v7.png"></div>');

  $('#calendar_icon').css( { 'position': 'absolute',
                             'top': calendar_icon_top,
                             'left': calendar_icon_left,
                             'width': calendar_icon_width,
                             'height': calendar_icon_height } );

  $('#calendar_button').css( { 'position': 'absolute',
                               'top': photo_button_top,
                               'left': calendar_button_left,
                               'width': photo_button_width,
                               'height': photo_button_height,
                               'border-radius': 4,
                               'background-color': '#2b292a' } );

  $('#calendar_button').on('click', function() { draw_calendar() } );

  // $('#calendar_button').hide();



  // padding and font ratios if button bar height is > minimum

  var button_top_padding = 6;

  if ( mode != 'pc' ) { button_top_padding = 9; }

  var button_font_size = 16;

  if (case_button_bar_height > 52) {

    var bar_height_difference = case_button_bar_height - 52;

    var font_size_increase = Math.floor(bar_height_difference / 6);
    button_font_size = button_font_size + font_size_increase;

    var padding_increase = Math.floor(bar_height_difference / 3);
    button_top_padding = button_top_padding + padding_increase;

  }



  var case_input_button_height = Math.floor(case_button_bar_height * 0.6730);



  // category button

  var category_button_width      = Math.floor(case_button_bar_height * 2.0961);
  var category_button_height     = case_input_button_height;
  var category_button_top_margin = photo_button_top_margin;
  var category_button_color      = '#d2d3d5';
  var category_button_left       = icons_start_left + photo_button_left_margin + ( ( photo_button_width + photo_button_spacing ) * 3 );

  $('#case_button_bar').append('<div id="category_button"></div>');

  $('#category_button').css( { 'position': 'absolute',
                               'top': category_button_top_margin,
                               'left': category_button_left,
                               'background-color': category_button_color,
                               'width': category_button_width,
                               'height': case_input_button_height,
                               'border-radius': 4,
                               'color': '#515254',
                               'font-family': 'Droid Sans',
                               'font': button_font_size + 'px "Droid Sans", sans-serif' } );


  // category button shows icon and category selected

  var category_selected          = "Category";
  var category_icon              = global_category_info[category_selected].icon;
  var category_icon_width        = Math.floor(case_button_bar_height * ( global_category_info[category_selected].width / 52 ) );
  var category_icon_height       = Math.floor(case_button_bar_height * ( global_category_info[category_selected].height / 52 ) );
  var category_icon_top_padding  = Math.floor(case_button_bar_height * ( global_category_info[category_selected].icon_top / 52 ) );
  var category_text_left_padding = Math.floor(case_button_bar_height * 0.1538);

  $('#category_button').html('<center><div id="category_button_info" style="display: table-row"></div></center>');

  $('#category_button_info').html('<div style="display: table-cell">'
                                +     '<img id="case_category_button_icon" src="' + category_icon + '"></img>' 
                                + '</div>'
                                + '<div style="display: table-cell; vertical-align: top;">'
                                +     '<div id="case_category_selected">' + category_selected + '</div>');
                                + '</div>'

  $('#case_category_button_icon').css( { 'width': category_icon_width, 
                                         'height': category_icon_height,
                                         'padding-top': category_icon_top_padding } );

  $('#case_category_selected').css( { 'padding-top': button_top_padding,
                                      'padding-left': category_text_left_padding,
                                      'display': 'table-cell'
                                    } );


  // run this at the end of the function
  // create_category_ui_div(screen_width, screen_height, case_button_bar_height);

  $('#category_button').on('click', function() { show_category_options(global_screen_width, global_screen_height); } );

  // $('#category_button').hide();


    
  // submit case button

  var submit_button_width        = Math.floor(case_button_bar_height * 2.7307);
  var submit_button_height       = case_input_button_height;
  var submit_button_right_margin = Math.floor(case_button_bar_height * 0.1346);

  var submit_button_top_margin   = photo_button_top_margin;
  var submit_button_left         = global_screen_width - ( submit_button_width  + submit_button_right_margin );
  var submit_button_color        = '#0083cb';

  var submit_button_text = "Submit";

  if ( global_case_info[global_current_case_id].status == 'active' ) { submit_button_text = 'Update'; }


  $('#case_button_bar').append('<div id="submit_case"></div>');

  $('#submit_case').css( { 'position': 'absolute',
                           'top': submit_button_top_margin, 
                           'left': submit_button_left,
                           'background-color': submit_button_color,
                           'width': submit_button_width,
                           'height': submit_button_height,
                           'border-radius': 4,
                           'color': '#ffffff',
                           'font-family': 'Droid Sans',
                           'font': 'bold ' + button_font_size + 'px "Droid Sans", sans-serif' } );

  $('#submit_case').html('<center><div style="padding-top: ' + button_top_padding + ';">' + submit_button_text + '</div></center>');
  $('#submit_case').on('click', function() { submit_case() } );



  // cancel button

  var cancel_button_width        = Math.floor(case_button_bar_height * 1.6346);
  var cancel_button_right_margin = Math.floor(case_button_bar_height * 0.1538);

  var cancel_button_height       = case_input_button_height;
  var cancel_button_top_margin   = photo_button_top_margin;
  var cancel_button_color        = '#d2d3d5';
  var cancel_button_left         = global_screen_width - ( submit_button_width  + submit_button_right_margin + cancel_button_width + cancel_button_right_margin )

  // create case v 07, cancel button is on the left side

  cancel_button_left             = submit_button_right_margin;


  $('#case_button_bar').append('<div id="cancel_submit"></div>');

  $('#cancel_submit').css( { 'position': 'absolute',
                             'top': cancel_button_top_margin,
                             'left': cancel_button_left,
                             'background-color': cancel_button_color,
                             'width': cancel_button_width,
                             'height': cancel_button_height,
                             'border-radius': 4,
                             'color': '#5c5d5f',
                             'font-family': 'Droid Sans',
                             'font': button_font_size + 'px "Droid Sans", sans-serif' } );

  $('#cancel_submit').html('<center><div style="padding-top: ' + button_top_padding + ';">Cancel</div></center>');


  // cancel button draft menu

  var cancel_button_top = parseInt( $('#cancel_submit').offset().top );

  // create case v 07, cancel button is on the left side of the screen

  var cancel_button_move_right = 35;

  if ( mode != 'pc' ) { cancel_button_move_right = 40; }

  create_case_cancel_button_menu( cancel_button_top, ( cancel_button_left + cancel_button_move_right ), cancel_button_width, cancel_button_height, button_font_size ); 

  $('#cancel_submit').on('click', function() { toggle_cancel_button_menu(); } );








  // add top color in comments column

  // height is Select Patient button height + top and bottom

  var add_patient_left_margin = Math.floor(global_screen_width * 0.0128);

  if ( add_patient_left_margin > 10 ) { add_patient_left_margin = 10; }

  var add_patient_height      = submit_button_height;
  var add_patient_top_margin  = add_patient_left_margin;

  var comments_top_bar_height = add_patient_height + ( add_patient_top_margin * 2 );


  var comments_top_bar_color = '#2e2c2d';

  $('#case_comments').append('<div id="comments_top_bar"></div>');

  $('#comments_top_bar').css( { 'top': 0,
                                'width': comments_width,
                                'height': comments_top_bar_height } );



  // Select Patient
 
  // add patient label in comments column

  var add_patient_right_margin = Math.floor(global_screen_width * 0.0139);

  if ( add_patient_right_margin > 10 ) { add_patient_right_margin = 10; }

  var add_patient_width        = comments_width - ( add_patient_left_margin + add_patient_right_margin );

  $('#comments_top_bar').append('<div id="add_patient"></div>');

  $('#add_patient').css( { 'position': 'absolute',
                           'top': add_patient_top_margin,
                           'left': add_patient_left_margin,
                           'width': add_patient_width,
                           'height': add_patient_height,
                           'border-radius': 3,
                           'background-color': '#d2d3d5',
                           'color': '#525355',
                           'font-family': 'Droid Sans',
                           'font': button_font_size + 'px "Droid Sans", sans-serif' } );

  // check the global case input info name, instead of the status
  // init should set the case input info if the status is active or draft

  var select_patient_text = 'Select Patient';

  if ( ( global_case_info[case_id].status == 'active' ) 
    || ( global_case_info[case_id].status == 'draft' ) ) { 

    if ( ( typeof global_case_info[case_id].patients ) != 'undefined' ) {

      if ( ( typeof global_case_info[case_id].patients[0] ) != 'undefined' ) {

        if ( global_case_info[case_id].patients[0].name != '' ) {

          console.log('patient 0 name is ' + global_case_info[case_id].patients[0].name );

          select_patient_text = global_case_info[case_id].patients[0].name; 

          global_case_input_info.owner   = global_case_info[case_id].owner;

          global_case_input_info.name    = global_case_info[case_id].patients[0].name;
          global_case_input_info.picture = global_case_info[case_id].patients[0].picture;
          global_case_input_info.age     = global_case_info[case_id].patients[0].age;
          global_case_input_info.gender  = global_case_info[case_id].patients[0].gender;

        }

      }

    }

  }

  $('#add_patient').html('<center><div id="selected_patient_name" style="padding-top: ' + button_top_padding + ';">' + select_patient_text + '</div></center>');
  $('#add_patient').on('click', function() { create_case_select_patient() } );



  // add tags

  var add_tags_top_margin   = comments_top_bar_height + Math.floor(global_screen_width * 0.0214);
  var add_tags_left_margin  = Math.floor(global_screen_width * 0.0096);
  var add_tags_right_margin = comments_width - Math.floor(global_screen_width * 0.03 );

  var add_tags_button_difference = 10;

  if ( mode == 'portrait' ) { 
    add_tags_right_margin = comments_width - Math.floor(global_screen_width * 0.05 ); 
    add_tags_button_difference = 8;
  }


  $('#case_comments').append('<div id="add_tags">Tags</div>');

  $('#add_tags').css( {  position: 'absolute',
                         top: add_tags_top_margin,
                         left: add_tags_left_margin,
                         width: comments_width,
                         color: '#b0b0b2',
                        'font-family': 'Droid Sans',
                         font: button_font_size + 'px "Droid Sans", sans-serif' } );

  // label is part of the button

  $('#add_tags').on('click', function() { create_case_add_tags() } );


  $('#case_comments').append('<div id="add_tags_button">+</div>');

  $('#add_tags_button').css( {  position: 'absolute',
                                top: ( add_tags_top_margin - add_tags_button_difference ),
                                left: add_tags_right_margin,
                                color: '#b0b0b2',
                               'font-family': 'Droid Sans',
                                font: ( button_font_size + 15 ) + 'px "Droid Sans", sans-serif' } );

  $('#add_tags_button').on('click', function() { create_case_add_tags() } );


  // the tag animation starts below the Tags text

  $('#case_comments').append('<br><br><br><br><br><br><br><br><br>');


  /*

  // case id

  $('#case_comments').append('<div id="debug"></div>');

  $('#debug').css( { 'position': 'absolute',
                     'top': ( add_tags_top_margin * 2 ),
                     'left': add_tags_left_margin,
                     'color': '#808082',
                     'font-family': 'Droid Sans',
                     'font': button_font_size + 'px "Droid Sans", sans-serif' } );

  $('#debug').html('case id ' + case_id + '<br>global id ' + global_current_case_id);

  */


}



//---- case-create-submit-functions.js ------------------------------------------------------------------------------------



// add textareas to inputs, add spellcheck and tags check to inputs
// submit case, cancel, add patient, add tags, invite doctors


var case_title_input_added = 0;
var case_summary_input_added = 0;
var case_event_input_added = 0;

var comment_shade_added = 0;


// create case button is on the nav header for which pages?

var global_previous_screen;

var global_cancel_button_menu_state;


var select_patient_state = [];
var selected_patient;


// editable divs instead of adding input text areas
// add_..._input functions are not used

function add_case_title_input() {

  if (case_title_input_added == 0) {

    $('#case_title').html('');

    var case_title_padding_top = parseInt($('#case_title').css('padding-top'), 10);
    var case_title_height = $('#case_title').height() + case_title_padding_top;

    $('#case_title').css( { 'color': '#535353',
                            'padding-top': 0,
                            'height': case_title_height } );

    $('#case_title').append('<textarea id="case_title_input_textarea" rows="2"></textarea>');

    $('#case_title_input_textarea').css( { 'width': '100%',
                                           'border': 'none',
                                           'outline': 'none',
                                           'resize': 'none',
                                           'color': '#535353',
                                           'font-family': 'Droid Sans',
                                           'font': 'bold 33px "Droid Sans", sans-serif' } );

    $('#case_title_input_textarea').on('focus', function() { $('#case_title').addClass('blue_drop_shadow'); } );
    $('#case_title_input_textarea').on('blur',  function() { $('#case_title').removeClass('blue_drop_shadow'); } );

    $('#case_title_input_textarea').focus();

    var case_title_tags = new Tag_Check('case_title_input_textarea');
    var case_title_spell = new Spell_Check('case_title_input_textarea');

    case_title_input_added = 1;

  }

}



function add_case_summary_input() {

  if (case_summary_input_added == 0) {

    $('#case_summary').html('');

    var case_summary_padding_top = parseInt($('#case_summary').css('padding-top'), 10);
    var case_summary_height = $('#case_summary').height() + case_summary_padding_top - 2;

    $('#case_summary').css( { 'color': '#535353',
                              'padding-top': 2,
                              'height': case_summary_height } );

    $('#case_summary').append('<textarea id="case_summary_input_textarea" rows="3"></textarea>');

    $('#case_summary_input_textarea').css( { 'width': '100%',
                                             'border': 'none',
                                             'outline': 'none',
                                             'resize': 'none',
                                             'font-family': 'Droid Sans',
                                             'font': '15px "Droid Sans", sans-serif' } );

    $('#case_summary_input_textarea').on('focus', function() { $('#case_summary').addClass('blue_drop_shadow'); } );
    $('#case_summary_input_textarea').on('blur',  function() { $('#case_summary').removeClass('blue_drop_shadow'); } );

    $('#case_summary_input_textarea').focus();

    var case_summary_tags = new Tag_Check('case_summary_input_textarea');
    var case_summary_spell = new Spell_Check('case_summary_input_textarea');

    case_summary_input_added = 1;

  }

}



function add_case_event_input() {

  // fade events column, add textarea with 'what happened today'
  // add icon to timeline after selection


  if (comment_shade_added == 0) {


    // div to fade comments

    var comments_width = $('#case_comments').width();
    var comments_x = $(window).width() - comments_width;

    $('body').append('<div id="comment_shade" style="width: ' + comments_width + '; height: ' +  $(window).height() + ';"></div>');

    $('#comment_shade').css( { 'position': 'absolute',
                               'top': 0,
                               'left': comments_x,
                               'background-color': '#373538',
                               'opacity': 0 } );


    // cover the events column instead of reloading the page

    var events_width = $('#case_events_container').width();
    var events_x = $('#case_events_container').offset().left;

    $('body').append('<div id="add_event_background" style="width: ' + events_width + '; height: ' +  $(window).height() + ';"></div>');

    $('#add_event_background').css( { 'position': 'absolute',
                                      'top': 0, 
                                      'left': events_x,
                                      'background-color': '#ffffff',
                                      'opacity': 0 } );


    // menu icon

    var add_icon_width = 29;
    var add_icon_height = 28;
    var add_icon_left = 41;
    var add_icon_top = 13;

    $('#add_event_background').append('<div id="add_event_icon"><img src="tabeeb-select-event-categories.png"></div>');

    $('#add_event_icon').css( { 'position': 'absolute',
                          'top': add_icon_top,
                          'left': add_icon_left } );


    // gray bar at bottom

    var gray_bar_height = 52;
    var gray_bar_top = $(window).height() - gray_bar_height;

    console.log('gray bar top is ' + gray_bar_top);

    $('#add_event_background').append('<div id="add_event_gray_bar" style="width: ' + events_width + '; height: ' +  gray_bar_height + ';"></div>');

    $('#add_event_gray_bar').css( { 'position': 'absolute',
                                    'top': gray_bar_top, 
                                    'left': 0,
                                    'margin': 0,
                                    'background-color': '#bcbdc1' } );


    // buttons on gray bar, cancel, done, add another

    // cancel

    var gray_bar_padding_top = 7;
    var gray_bar_button_height = 30 - gray_bar_padding_top;
    var gray_bar_top_margin = 11;
    var gray_bar_left_margin = 14;

    var gray_bar_cancel_width = 82;

    $('#add_event_gray_bar').append('<div id="add_event_cancel_button" style="width: ' + gray_bar_cancel_width + '; height: ' +  gray_bar_button_height + ';"><center>Cancel</center></div>');

    $('#add_event_cancel_button').css( { 'margin-top': gray_bar_top_margin,
                                         'margin-left': gray_bar_left_margin,
                                         'padding-top': gray_bar_padding_top,
                                         'height': gray_bar_button_height,
                                         'border-radius': 3,
                                         'font-family': 'Droid Sans',
                                         'font': '15px "Droid Sans", sans-serif',
                                         'background-color': '#f6f6f8' } );

    $('#add_event_cancel_button').on('click', function() { cancel_add_event(); } );


    // add another

    var gray_bar_add_width = 112;
    var gray_bar_add_right_margin = 15;
    var gray_bar_add_left = events_width - ( gray_bar_add_width + gray_bar_add_right_margin );

    $('#add_event_gray_bar').append('<div id="add_event_add_button" style="width: ' + gray_bar_add_width + '; height: ' +  gray_bar_button_height + ';"><center>Add Another</center></div>');

    $('#add_event_add_button').css( { 'position': 'absolute',
                                      'top': gray_bar_top_margin,
                                      'left': gray_bar_add_left,
                                      'padding-top': gray_bar_padding_top,
                                      'height': gray_bar_button_height,
                                      'border-radius': 3,
                                      'font-family': 'Droid Sans',
                                      'font': '15px "Droid Sans", sans-serif',
                                      'background-color': '#f6f6f8' } );


    // done

    var gray_bar_done_width = 82;
    var gray_bar_done_right_margin = 16;
    var gray_bar_done_left = events_width - ( gray_bar_done_width + gray_bar_done_right_margin + gray_bar_add_width + gray_bar_add_right_margin );

    $('#add_event_gray_bar').append('<div id="add_event_done_button" style="width: ' + gray_bar_done_width + '; height: ' +  gray_bar_button_height + ';"><center>Done</center></div>');

    $('#add_event_done_button').css( { 'position': 'absolute',
                                       'top': gray_bar_top_margin,
                                       'left': gray_bar_done_left,
                                       'padding-top': gray_bar_padding_top,
                                       'height': gray_bar_button_height,
                                       'border-radius': 3,
                                       'font-family': 'Droid Sans',
                                       'font': '15px "Droid Sans", sans-serif',
                                       'background-color': '#f6f6f8' } );


    // event background and border

    var add_event_left_margin = 53;
    var add_event_left_border = 4;

    $('#add_event_background').append('<div id="add_event_div"></div>');

    $('#add_event_div').css( { 'top': 0,
                               'height': gray_bar_top,
                               'margin-left': add_event_left_margin,
                               'border-left': '4px solid #7f8386' } );
                               

    // event text area div and text area

    $('#add_event_div').append('<div id="add_event_textarea_div"></div>');

    $('#add_event_textarea_div').css( { 'position': 'absolute',
                                        'top': 0,
                                        'margin-top': 16,
                                        'margin-left': 19,
                                        'color': '#535154' } );


    // rows and cols from size of events column

    var event_cols = Math.floor( ( events_width - ( 19 + 9 + 9 ) ) / 9 ) - 5;


    // rows set again on focus of text area?  



    $('#add_event_textarea_div').append('<textarea id="add_event_textarea" rows="15" cols="' + event_cols + '"></textarea>');

    $('#add_event_textarea').css( { 'font-family': 'Droid Sans',
                                    'font': '15px "Droid Sans", sans-serif',
                                    'padding-top': 6,
                                    'padding-left': 9,
                                    'padding-right': 9,
                                    'color': '#535154' } );


    // photo icon position

    var photo_icons_top = $('#add_event_textarea_div').outerHeight() + $('#add_event_textarea_div').position().top + 33;


    // icon for take a photo

    $('#add_event_div').append('<div id="take_a_photo"><img src="tabeeb-take-a-photo.png"></div>');
    $('#take_a_photo').offset( { 'top': photo_icons_top, 'left': events_x + add_event_left_margin + 35 } );
    $('#take_a_photo').css( { 'width': 30, 'height': 22 } );
    $('#take_a_photo').on('click', function() { take_a_photo() } );


    // icon for attach a photo from disk

    $('#add_event_div').append('<div id="attach_a_photo"><img src="tabeeb-attach-a-photo.png"></div>');
    $('#attach_a_photo').offset( { 'top': photo_icons_top, 'left': events_x + add_event_left_margin + 106 } );
    $('#attach_a_photo').css( { 'width': 30, 'height': 22 } );
    $('#attach_a_photo').on('click', function() { attach_a_photo() } );


    // text area on focus

    $('#add_event_textarea').on('focus', function() { 

      $('#add_event_textarea').addClass('blue_drop_shadow');

      setTimeout( function() {

        var new_gray_bar_top = $(window).height() - gray_bar_height;

        $('#add_event_gray_bar').css( { 'top': new_gray_bar_top } );

      }, 750);

    } );



    // text area on blur

    $('#add_event_textarea').on('blur',  function() { 

      $('#add_event_textarea').removeClass('blue_drop_shadow'); 

      setTimeout( function() {

        var new_gray_bar_top = $(window).height() - gray_bar_height;

        $('#add_event_gray_bar').css( { 'top': new_gray_bar_top } );

      }, 500);

    } );



    $('#comment_shade').fadeTo(200, 1);

    $('#add_event_background').fadeTo(200, 1);


    comment_shade_added = 1;


  }

}



function submit_case() {

  console.log('submit case');

  case_title_input_added = 1;
  case_summary_input_added = 1;
  case_event_input_added = 1;

  var case_id = global_current_case_id;


  // check for title == ''

  var case_title = $('#case_input_row_0').text();

  if ( case_title == '' ) {

    show_case_title_error_message();

    return;

  }


  // update global case info from global case input info

  global_case_info[case_id].tags[0] = 'case ' + case_id;


  // the input div contains row and row date divs
  // do not check the row date divs
  // i is the original loop variable

  var i = -1;

  var rows = $('#case_input_slider').children();

  for (var j in rows) {

    if ( /[a-z]/.test(j) ) { continue; }

    if ( /row_date/.test( rows[j].id ) ) { continue; }

    if ( ( typeof rows[j] ) == 'function' ) { continue; }

    i++;

    // i == 0


    // console.log('submit, row j is ' + j + ', ' + rows[j].id );


    var row_id = 'case_input_row_' + i;

    var text = $('#' + row_id).text();


    if (i == 0) { global_case_info[case_id].title   = text; }
    if (i == 1) { global_case_info[case_id].summary = text; }


    if ( 
         ( ( typeof global_case_info[case_id].events[i] ) == 'undefined' )
      && ( 
           ( ( typeof global_case_input_info.events[i] ) != 'undefined' ) || ( text != '' ) 
         )
       ) {

      var paragraph_info = {};
      global_case_info[case_id].events[i] = paragraph_info;

    }


    // row text and date

    if ( text != '' ) {

      global_case_info[case_id].events[i].text = text;

    }

    

    // row icon, category ui sets the icon in global case input info
    // if 'delete draft' is hit, the global case info case_id should not be changed

    // submit case

    if ( ( typeof global_case_input_info.events[i] ) != 'undefined' ) {

      // row category, type

      if ( ( typeof global_case_input_info.events[i].type ) != 'undefined' ) { 
        global_case_info[case_id].events[i].type = global_case_input_info.events[i].type;
      }


      // date, changed to user date, time, and timezone

      if ( ( typeof global_case_input_info.events[i].user_date ) != 'undefined' ) {
        global_case_info[case_id].events[i].user_date     = global_case_input_info.events[i].user_date;
        global_case_info[case_id].events[i].user_time     = global_case_input_info.events[i].user_time;
        global_case_info[case_id].events[i].user_timezone = global_case_input_info.events[i].user_timezone;
      } else {
        // global_case_info[case_id].events[i].date = todays_date();
      }


      // images

      if ( ( typeof global_case_input_info.events[i].image ) != 'undefined' ) {
        global_case_info[case_id].events[i].image = global_case_input_info.events[i].image.slice(0);
      } 


      // tags on the event

      if ( ( typeof global_case_input_info.events[i].tags ) != 'undefined' ) {
        global_case_info[case_id].events[i].tags = global_case_input_info.events[i].tags.slice(0);
      }


    } 

    // no date on the event if the paragraph date is blank
    // add an event timestamp, add field to the global case info

    /*

    if ( ( typeof( global_case_input_info.events[i] ) == 'undefined' ) && ( text != '' ) ) {

      global_case_info[case_id].events[i].date = todays_date();

    }

    */

  }

  // end of for var r in rows



  // tags on the case

  if ( ( typeof global_case_input_info.tags ) != 'undefined' ) {
    global_case_info[case_id].tags = global_case_input_info.tags.slice(0);
  }



  // submit button sets status to active

  global_case_info[case_id].status = 'active';



  // if global case info = '', set to global case input info or default

  // if ( global_case_info[case_id].owner == '' ) {
    if ( ( typeof global_case_input_info.owner ) != 'undefined' ) {
      global_case_info[case_id].owner = global_case_input_info.owner;
    } else {
      global_case_info[case_id].owner = global_user_name;
    }
  // }


  // if ( global_case_info[case_id].name == '' ) {
    if ( ( typeof global_case_input_info.name ) != 'undefined' ) {
      global_case_info[case_id].name = global_case_input_info.name;
    } else {
      global_case_info[case_id].name = 'Anonymous Patient';
    }
  // }


  // if ( global_case_info[case_id].picture == '' ) {
    if ( ( typeof global_case_input_info.picture ) != 'undefined' ) {
      global_case_info[case_id].picture = global_case_input_info.picture;
    } else {
      global_case_info[case_id].picture = 'tabeeb-anonymous-patient.png';
    }
  // }


  // if ( global_case_info[case_id].age == '' ) {
    if ( ( typeof global_case_input_info.age ) != 'undefined' ) {
      global_case_info[case_id].age = global_case_input_info.age;
    } else {
      // global_case_info[case_id].age = 'Age unknown';
      global_case_info[case_id].age = '';
    }
  // }


  //if ( global_case_info[case_id].gender == '' ) {
    if ( ( typeof global_case_input_info.gender ) != 'undefined' ) {
      global_case_info[case_id].gender = global_case_input_info.gender;
    } else {
      // global_case_info[case_id].gender = 'Gender unknown';
      global_case_info[case_id].gender = '';
    }
  // }



  // save global case info to local storage

  localStorage.setItem( 'global_case_info', JSON.stringify(global_case_info) );



  // update case

  $.ajax( { contentType: 'application/json',
            type: 'POST',
            url: '/api/update_case.json',
            data: JSON.stringify( global_case_info[case_id] ),

            success: function( data, textStatus ) {

              console.log('update case, ajax success, textStatus ' + textStatus + ', data ' + JSON.stringify( data, undefined, 2 ) );

              // update server timestamp

            },

            error: function( jqXHR, textStatus, errorThrown ) {

              console.log('update case, ajax error, textStatus ' + textStatus + ', errorThrown ' + errorThrown );

            },

            dataType: 'json',
            processData: false

  } );



  // case list or case events for active cases

  global_case_list_filter_option_status = 'active';

  if ( global_case_info[global_current_case_id].status == 'active' ) {
    load_page('case_events');
  } else {
    load_page('case_list');
  }

}



function create_case_cancel_button_menu(cancel_button_top, cancel_button_left, cancel_button_width, cancel_button_height, button_font_size) {

  // check global_case_info[ global_current_case_id ].status
  // if status is active, 2 buttons, 'discard changes' and 'save for later' as draft
  // if status is new, 2 buttons, 'delete draft' and 'save draft'
  // if status is draft, 3 buttons, 'delete draft', 'discard changes' and 'save draft'


  var distance_above_button = 13;

  var menu_width  = cancel_button_width * 1.65;
  var menu_height = menu_width * 0.68;

  var original_menu_height = menu_height;

  if ( global_case_info[ global_current_case_id ].status == 'draft' ) { menu_height = menu_width * 0.99; }


  var menu_difference = 0;

  if ( ( global_case_info[ global_current_case_id ].status == 'active' ) 
    || ( global_case_info[ global_current_case_id ].status == 'draft' ) ) { 
  
    menu_difference = ( Math.floor( cancel_button_width * 1.2 ) - cancel_button_width ) / 2;

    menu_width = Math.floor( menu_width * 1.2 ); 
    cancel_button_width = Math.floor( cancel_button_width * 1.2 ); 
  }


  var menu_left   = ( ( cancel_button_left + ( cancel_button_width / 2 ) ) - ( menu_width / 2 ) ) - menu_difference;
  // var menu_top    = cancel_button_top - ( menu_height + distance_above_button );

  // create case v 07, menu is under the button

  var menu_top    = cancel_button_top + cancel_button_height + distance_above_button;


  $('body').append('<div id="cancel_button_menu"></div>');

  var cbm_css = { position: 'absolute',
                  top: menu_top,
                  left: menu_left,
                  width: menu_width,
                  height: menu_height,
                 'border-radius': 4,
                 'background-color': '#ffffff',
                 'box-shadow': '0px 0px 4px 2px #c4c5c7' };

  $('#cancel_button_menu').css( cbm_css );



  // rotated div for triangle

  var square_edge = 10;

  // var triangle_top  = menu_height - ( square_edge / 2 );
  var triangle_top  = 0 - ( square_edge / 2 );

  var triangle_left = ( menu_width / 2 ) - ( square_edge / 2 );


  // create case v 07, cancel button is on the left side of the screen

  var mode = get_orientation_mode();

  var cancel_button_move_right = 35;

  // pass this from case create functions instead of setting it here also

  if ( mode != 'pc' ) { cancel_button_move_right = 40; }

  triangle_left = triangle_left - cancel_button_move_right;


  $('#cancel_button_menu').append('<div id="cancel_button_triangle"></div>');

  var cbt_css = { position: 'absolute',
                  top: triangle_top,
                  left: triangle_left,
                  width: square_edge,
                  height: square_edge,
                 'z-index': 3,
                 'background-color': '#ffffff',
                  transform: 'rotate(45deg)',
                 'box-shadow': '0px 0px 4px 2px #c4c5c7' };

  $('#cancel_button_triangle').css( cbt_css );



  // either put the rotated div inside one with overflow hidden, or put another div on the menu one

  $('#cancel_button_menu').append('<div id="cancel_button_menu_div"></div>');

  var cbd_css = { position: 'absolute',
                  top: 0,
                  left: 0,
                  width: menu_width,
                  height: menu_height,
                 'z-index': 4,
                 'border-radius': 4,
                 'background-color': '#ffffff',
                 'font-family': 'Droid Sans',
                 'font': button_font_size + 'px "Droid Sans", sans-serif' };

  $('#cancel_button_menu_div').css( cbd_css );



  // buttons

  var button_top_space = Math.floor( ( original_menu_height - ( cancel_button_height * 2 ) ) / 3 );

  var delete_button_top = button_top_space;
  var discard_button_top;
  var save_button_top   = cancel_button_height + ( button_top_space * 2 );


  if ( global_case_info[ global_current_case_id ].status == 'draft' ) {

    discard_button_top = save_button_top;
    save_button_top = ( cancel_button_height * 2 ) + ( button_top_space * 3 ); 

  }



  // button text

  var discard_button_text = 'Discard Changes';

  var delete_button_text = 'Delete Draft';
  if ( global_case_info[ global_current_case_id ].status == 'active' ) { delete_button_text = discard_button_text; }

  // save for later should be removed ?  active cases should not be set to draft status, just updated

  var save_button_text = 'Save Draft';
  if ( global_case_info[ global_current_case_id ].status == 'active' ) { save_button_text = 'Save For Later'; global_previous_screen = 'case_list'; }


  var button_top_padding = Math.floor( cancel_button_height * 0.24 );
  var button_height      = cancel_button_height - button_top_padding;
  var button_width       = menu_width - ( button_top_space * 2 );


  $('#cancel_button_menu_div').append('<div id="delete_draft_button"><center>' + delete_button_text + '</center></div>');

  if ( global_case_info[ global_current_case_id ].status == 'draft' ) {
    $('#cancel_button_menu_div').append('<div id="discard_changes_button"><center>' + discard_button_text + '</center></div>');
  }

  $('#cancel_button_menu_div').append('<div id="save_draft_button"><center>' + save_button_text + '</center></div>');

  var ddb_css = { position: 'absolute',
                  top: delete_button_top,
                  left: button_top_space,
                  width: button_width,
                  height: button_height,
                 'padding-top': button_top_padding,
                 'border-radius': 4,
                  border: '1px solid #c0b1b2',
                 'background-color': '#c38284',
                  color: '#ffffff' };

  var dcb_css = { position: 'absolute',
                  top: discard_button_top,
                  left: button_top_space,
                  width: button_width,
                  height: button_height,
                 'padding-top': button_top_padding,
                 'border-radius': 4,
                  border: '1px solid #c0b1b2',
                 'background-color': '#c38284',
                  color: '#ffffff' };

  var sdb_css = { position: 'absolute',
                  top: save_button_top,
                  left: button_top_space,
                  width: button_width,
                  height: button_height,
                 'padding-top': button_top_padding,
                 'border-radius': 4,
                  border: '1px solid #d7d8da',
                 'background-color': '#f6f6f6',
                  color: '#545456' };

  $('#delete_draft_button').css( ddb_css );

  if ( global_case_info[ global_current_case_id ].status == 'draft' ) { 
    $('#discard_changes_button').css( dcb_css ); 
  }

  $('#save_draft_button').css( sdb_css );



  // if status is draft, delete button sets the status to deleted

  if ( global_case_info[ global_current_case_id ].status == 'draft' ) {

    $('#delete_draft_button').on('click',    function() { cancel_button_delete_draft( 'delete' ); } );
    $('#discard_changes_button').on('click', function() { cancel_button_delete_draft(); } );
    $('#save_draft_button').on('click',      function() { cancel_button_submit_as_draft(); } );

  } else {

    $('#delete_draft_button').on('click', function() { cancel_button_delete_draft(); } );
    $('#save_draft_button').on('click',   function() { cancel_button_submit_as_draft(); } );

  }


  global_cancel_button_menu_state = 'hidden';

  $('#cancel_button_menu').hide();

}



function toggle_cancel_button_menu() {

  console.log('global_cancel_button_menu_state ' + global_cancel_button_menu_state);

  if ( global_cancel_button_menu_state == 'hidden' ) {

    // add shade div to cover the page, on click call this again

    $('body').append('<div id="cancel_button_menu_shade"></div>');

    $('#cancel_button_menu_shade').css( { position: 'absolute',
                                          top: 0,
                                          left: 0,
                                         'z-index': 2,
                                          width: $(window).width(),
                                          height: $(window).height(),
                                         'background-color': '#000000',
                                          opacity : 0 } );

    $('#cancel_button_menu_shade').on('click', function() { toggle_cancel_button_menu(); } );

    $('#cancel_button_menu_shade').fadeTo(200, 0.3);


    // set z index of menu

    var shade_index = $('#cancel_button_menu_shade').css('z-index');
    var menu_index = shade_index + 1;

    $('#cancel_button_menu').css( { 'z-index': menu_index } );



    $('#cancel_button_menu').show();

    global_cancel_button_menu_state = 'showing';


    // set last selected row to gray

    if ( typeof( global_last_row_selected != 'undefined' ) ) {
      $('#' + global_last_row_selected).css( { 'color': '#b3b4b6' } );
    }


    // hide buttons if they are showing

    if ( global_button_has_focus || global_icon_has_focus ) {

      global_icon_has_focus = 0;
      global_button_has_focus = 0;

      /* 

      $('#take_a_photo_button').hide();
      $('#attach_a_photo_button').hide();
      $('#calendar_button').hide();
      $('#category_button').hide();

      */

    }


  } else {

    $('#cancel_button_menu').hide();

    $('#cancel_button_menu_shade').fadeTo(200, 0, function() { $('#cancel_button_menu_shade').remove(); } );

    global_cancel_button_menu_state = 'hidden';

  }

}



function cancel_button_submit_as_draft() {

  console.log('cancel_button_submit_as_draft');

  $('#cancel_button_menu').hide();

  global_cancel_button_menu_state = 'hidden';

  cancel_submit_case();
  
}



function cancel_button_delete_draft( delete_flag ) {

  console.log('cancel_button_delete_draft');

  $('#cancel_button_menu').hide();

  global_cancel_button_menu_state = 'hidden';

  cancel_delete_case( delete_flag );

}

 

// save case as draft

function cancel_submit_case() {

  console.log('cancel submit case, save draft');

  case_title_input_added = 1;
  case_summary_input_added = 1;
  case_event_input_added = 1;

  var case_id = global_current_case_id;

  global_case_info[case_id].id = case_id;

  // added to json from the api

  global_case_info[case_id].case_id = case_id;


  console.log('cancel_submit_case, global_current_case_id is ' + global_current_case_id );


  var new_case = true;

  if ( typeof( global_case_info[case_id].server_timestamp ) != 'undefined' ) {

    new_case = false;

  }

  console.log('new_case is ' + new_case);

  // global_case_info[case_id].tags[0] = 'case ' + case_id;


  var rows = $('#case_input_slider').children();

  for (var i in rows) {

    if ( /[a-z]/.test(i) ) { continue; }

    var row_id = 'case_input_row_' + i;

    var text = $('#' + row_id).text();


    if (i == 0) { global_case_info[case_id].title = text; }
    if (i == 1) { global_case_info[case_id].summary = text; }


    if (
         ( ( typeof global_case_info[case_id].events[i] ) == 'undefined' )
      && (
           ( ( typeof global_case_input_info.events[i] ) != 'undefined' ) || ( text != '' )
         )
       ) {

      var paragraph_info = {};
      global_case_info[case_id].events[i] = paragraph_info;

      if ( new_case == true ) {
        global_case_info[case_id].events[i].id = i;
        global_case_info[case_id].events[i].temporary_id = 'true';
        console.log('set temporary_id');
      }

    }


    // row text

    if ( text != '' ) {

      global_case_info[case_id].events[i].text = text;

    }


    // row icon, category ui sets the icon in global case input info

    // save as draft

    if ( ( typeof global_case_input_info.events[i] ) != 'undefined' ) {

      // type

      if ( ( typeof global_case_input_info.events[i].type ) != 'undefined' ) {
        global_case_info[case_id].events[i].type = global_case_input_info.events[i].type;
      }


      // date, changed to user date, time, and timezone

      if ( ( typeof global_case_input_info.events[i].user_date ) != 'undefined' ) {
        global_case_info[case_id].events[i].user_date     = global_case_input_info.events[i].user_date;
        global_case_info[case_id].events[i].user_time     = global_case_input_info.events[i].user_time;
        global_case_info[case_id].events[i].user_timezone = global_case_input_info.events[i].user_timezone;
      } else {

        if ( text != '' ) {
          global_case_info[case_id].events[i].user_date = todays_date();
          global_case_info[case_id].events[i].user_time = '';
          global_case_info[case_id].events[i].user_timezone = get_time_zone_offset();
        }

      }


      // images

      if ( ( typeof global_case_input_info.events[i].image ) != 'undefined' ) {
        global_case_info[case_id].events[i].image = global_case_input_info.events[i].image.slice(0);
      }


      // tags on the event

      if ( ( typeof global_case_input_info.events[i].tags ) != 'undefined' ) {
        global_case_info[case_id].events[i].tags = global_case_input_info.events[i].tags.slice(0);
      }


    }


  }

  // end of for var r in rows



  // tags on the case

  if ( ( typeof global_case_input_info.tags ) != 'undefined' ) {
    global_case_info[case_id].tags = global_case_input_info.tags.slice(0);
  }



  // cancel button sets global case id status to draft

  global_case_info[case_id].status = 'draft';



  // set owner id

  global_case_info[case_id].owner_id = 1;


  // if global case info = '', set to global case input info or default

  // if ( global_case_info[case_id].owner == '' ) { 
    if ( ( typeof global_case_input_info.owner ) != 'undefined' ) {
      global_case_info[case_id].owner = global_case_input_info.owner; 
      global_case_info[case_id].doctor = { name: global_case_input_info.owner };
    } else {
      global_case_info[case_id].owner = global_user_name; 
      global_case_info[case_id].doctor = { name: global_user_name };
    }
  // }



  // add array of patients to case info, if there's a patient name

  if ( ( ( typeof global_case_input_info.name ) != 'undefined' ) && ( global_case_input_info.name != '' ) ) {

    console.log('global_case_input_info.name is ' + global_case_input_info.name );

    if ( ( typeof global_case_info[case_id].patients ) == 'undefined' ) {
      var patient_array = [];
      global_case_info[case_id].patients = patient_array;
    }

    if ( ( typeof global_case_info[case_id].patients[0] ) == 'undefined' ) {
      var patient_0 = {};
      global_case_info[case_id].patients.push( patient_0 );
    }

  }


  // if ( global_case_info[case_id].name == '' ) { 
    if ( ( ( typeof global_case_input_info.name ) != 'undefined' ) && ( global_case_input_info.name != '' ) ) {
      global_case_info[case_id].name = global_case_input_info.name; 
      global_case_info[case_id].patients[0].name = global_case_input_info.name; 

      global_case_info[case_id].patients[0].id = '1';
      global_case_info[case_id].patients[0].temporary_id = true;

    } else {
      // global_case_info[case_id].name = 'Anonymous Patient'; 
      // global_case_info[case_id].patients[0].name = 'Anonymous Patient'; 
    }
  // }


  // if ( global_case_info[case_id].picture == '' ) { 
    if ( ( ( typeof global_case_input_info.picture ) != 'undefined' ) && ( global_case_input_info.name != '' ) ) {
      global_case_info[case_id].picture = global_case_input_info.picture; 
      global_case_info[case_id].patients[0].picture = global_case_input_info.picture; 
    } else {
      // global_case_info[case_id].picture = 'tabeeb-anonymous-patient.png'; 
      // global_case_info[case_id].patients[0].picture = 'tabeeb-anonymous-patient.png'; 
    }
  // }


  // if ( global_case_info[case_id].age == '' ) { 
    if ( ( ( typeof global_case_input_info.age ) != 'undefined' )  && ( global_case_input_info.age != '' ) ) {
      global_case_info[case_id].age = global_case_input_info.age; 
      global_case_info[case_id].patients[0].age = global_case_input_info.age; 
    } else {
      // global_case_info[case_id].age = 'Age unknown'; 
      // global_case_info[case_id].age = ''; 
      // global_case_info[case_id].patients[0].age = ''; 
    }
  // }


  // if ( global_case_info[case_id].gender == '' ) { 
    if ( ( ( typeof global_case_input_info.gender ) != 'undefined' ) && ( global_case_input_info.gender != '' ) ) {
      global_case_info[case_id].gender = global_case_input_info.gender; 
      global_case_info[case_id].patients[0].gender = global_case_input_info.gender; 
    } else {
      // global_case_info[case_id].gender = 'Gender unknown'; 
      // global_case_info[case_id].gender = ''; 
      // global_case_info[case_id].patients[0].gender = ''; 
    }
  // }



  // save global case info to local storage

  localStorage.setItem( 'global_case_info', JSON.stringify(global_case_info) );

  // patient info, case input info



  console.log('case info before calling the api is ' + JSON.stringify( global_case_info[case_id], undefined, 2 ) );


  // ping the server first

  // add the create or update call to the retry function queue
  // start the asynchronous queue handler


  // send case json to create case api
  // this has to run aynchronously, etc


  // ping the server


  $.ajax( { contentType: 'application/json',
            type: 'GET',
            url: '/api/ping_server.json',
            timeout: 4000,
            dataType: 'json',

            success: function( data, textStatus ) {

              console.log('ping_server, textStatus ' + textStatus + ', ' + JSON.stringify( data, undefined, 2 ) );

              global_server_timestamp = data.server_time_stamp;

              if ( new_case == true ) {

                // create case

                $.ajax( { contentType: 'application/json',
                          type: 'POST',
                          url: '/api/create_case.json',
                          data: JSON.stringify( global_case_info[case_id] ),

                          success: function( data, textStatus ) {

                            console.log('create case, ajax success, textStatus ' + textStatus + ', data ' + JSON.stringify( data, undefined, 2 ) );

                            update_case_and_event_ids( data, textStatus, case_id );

                            // case 124 is not being set, so the case id is always getting the test text
                            global_new_case_id++;

                          },

                          dataType: 'json',
                          processData: false
                } );

              } else {

                // update case

                $.ajax( { contentType: 'application/json',
                          type: 'POST',
                          url: '/api/update_case.json',
                          data: JSON.stringify( global_case_info[case_id] ),

                          success: function( data, textStatus ) {

                            console.log('update case, ajax success, textStatus ' + textStatus + ', data ' + JSON.stringify( data, undefined, 2 ) );

                            // update server timestamp

                          },

                          error: function( jqXHR, textStatus, errorThrown ) {

                            console.log('update case, ajax error, textStatus ' + textStatus + ', errorThrown ' + errorThrown );

                          },

                          dataType: 'json',
                          processData: false
                } );

              }


            },

            error: function( jqXHR, textStatus, errorThrown ) {

              console.log('ping_server, textStatus ' + textStatus + ', error from the api');

              // add save draft event to retry queue of asynchronous retry function

            },

            processData: false

  } );



  // list draft cases if returning to case list page

  global_case_list_filter_option_status = 'draft';



  // back to case list or global last page

  if ( ( typeof( global_previous_screen ) == 'undefined' )
    || ( global_previous_screen == 'patient_info' ) ) { 

    load_page('case_list');

  } else {

    load_page(global_previous_screen);

  }


}



function cancel_delete_case( delete_flag ) {

  console.log('cancel delete case, not saving draft');
  console.log('delete flag is ' + delete_flag);


  // if this is a new case, clear global case input info?

  // clear the global case input info
  // clear it from save and submit also


  // if delete flag is set, status to deleted

  if ( ( typeof delete_flag ) != 'undefined' ) {

    global_case_info[ global_current_case_id ].status = 'deleted';


    // ping server





    // update case

    $.ajax( { contentType: 'application/json',
              type: 'POST',
              url: '/api/update_case.json',
              data: JSON.stringify( global_case_info[ global_current_case_id ] ),

              success: function( data, textStatus ) {

                console.log('delete draft, ajax success, textStatus ' + textStatus + ', data ' + JSON.stringify( data, undefined, 2 ) );

                // update server timestamp

              },

              error: function( jqXHR, textStatus, errorThrown ) {

                console.log('delete draft, ajax error, textStatus ' + textStatus + ', errorThrown ' + errorThrown );

              },

              dataType: 'json',
              processData: false
  
    } );

  }


  // back to case list or global last page
  // global_previous_screen

  if ( ( typeof( global_previous_screen ) == 'undefined' ) 
    || ( global_previous_screen == 'patient_info' ) ) {

    load_page('case_list');

  } else {

    load_page(global_previous_screen);

  }


}



function create_case_select_patient() {

  console.log('create case, add patient');

  // add shade div

  $('body').append('<div id="select_patient_shade"></div>');

  // case button bar is set to z-index 10, above the category ui bar

  // shade div is not covering the cancel submit buttons

  $('#select_patient_shade').css( { position: 'absolute',
                                    top: 0,
                                    left: 0,
                                    width: $(window).width(),
                                    height: $(window).height(),
                                   'background-color': '#000000',
                                    opacity : 0 } );

  $('#select_patient_shade').on('click', function() {
    $('#select_patient_shade').remove();
    $('#select_patient_div').remove(); 
  } );

  $('#select_patient_shade').fadeTo(200, 0.3);



  // set last selected row to gray, hide category buttons

  if ( typeof( global_last_row_selected != 'undefined' ) ) {
    $('#' + global_last_row_selected).css( { color: '#b3b4b6' } );
  }


  // hide buttons if they are showing

  if ( global_button_has_focus || global_icon_has_focus ) {

    global_icon_has_focus = 0;
    global_button_has_focus = 0;

    /*

    $('#take_a_photo_button').hide();
    $('#attach_a_photo_button').hide();
    $('#calendar_button').hide();
    $('#category_button').hide();

    */

  }



  // div for select patient

  var comments_width = $('#case_comments').width();
  var comments_left = $('#case_comments').offset().left;

  console.log('comments_left ' + comments_left);

  var case_button_bar_height = $('#case_button_bar').height();

  var select_patient_div_height = global_screen_height - case_button_bar_height;

  $('body').append('<div id="select_patient_div"></div>');

  var spd_css = { position: 'absolute',
               // top: 0,
                  top: case_button_bar_height,
                  left: comments_left,
                  width: comments_width,
                  height: select_patient_div_height,
                 'background-color': '#373538',
                 'font-family': 'Droid Sans',
                  font: button_font_size + 'px "Droid Sans", sans-serif' };

  $('#select_patient_div').css( spd_css );

  // $('#select_patient_div').on('click', function() { $('#select_patient_div').remove(); } );

  // $('#case_button_bar').css( { 'z-index': 2 } );



  // global bar heights, button heights, font sizes



  var button_bar_height = Math.floor( $('#case_button_bar').height() * 0.9 );

  console.log('button_bar_height ' + button_bar_height);



  // < Select Patient

  // put Done button from add patient here instead

  // create case v 07,

  // move done button to the bottom of the screen


  var button_font_size   = 16;
  var button_top_padding = ( button_bar_height / 2 ) - 10;
  var bar_height         = button_bar_height - button_top_padding;

  $('#select_patient_div').append('<div id="select_patient_button"><center>Select Patient</center></div>');

  // $('#select_patient_div').append('<div id="select_patient_button"></div>');

  var spb_css = { position: 'absolute',
                  top: 0,
                  left: 0,
                  width: comments_width,
                 'padding-top': button_top_padding,
                  height: bar_height,
                 'background-color': '#2e2b2c',
                  color: '#abb3b7' };

  $('#select_patient_button').css( spb_css );

  // $('#select_patient_button').on('click', function() { add_patient_to_case(); } );


  // Done button

  var done_button_top         = Math.floor( button_bar_height * 0.15 );
  var done_button_height      = button_bar_height - ( done_button_top * 2 );
  var done_button_top_padding = Math.floor( done_button_top * 1.4 );
  var button_height           = done_button_height - done_button_top_padding;
  var done_button_width;

  // done button should be separated from the submit button ?

  done_button_top = global_screen_height - ( case_button_bar_height + done_button_height + done_button_top_padding );


  var mode = get_orientation_mode();

  if ( mode == 'portrait' )  { done_button_width = Math.floor( comments_width * 0.7 ); }

  if ( mode == 'landscape' ) { 
    done_button_width = Math.floor( comments_width * 0.5 ); 
    done_button_top_padding = Math.floor( done_button_top * 0.9 );
  }

  if ( mode == 'pc' ) {
    done_button_width = Math.floor( comments_width * 0.4 );
    if ( done_button_width > 150 ) { done_button_width = 150; }
  }

  // var done_button_left = comments_width - ( done_button_width + ( done_button_top * 1.4 ) );
  var done_button_left = comments_width - ( done_button_width + ( done_button_top_padding * 1.4 ) );

  var db_css = { position: 'absolute',
                 top: done_button_top,
                 left: done_button_left,
                 width: done_button_width,
                 height: button_height,
                'padding-top': done_button_top_padding,
                'background-color': '#d1d2d4',
                'border-radius': 4,
                 color: '#59536d' };

  $('#select_patient_div').append('<div id="select_patient_done_button"><center>Done</center></div>');

  $('#select_patient_done_button').css( db_css );

  $('#select_patient_done_button').on('click', function() { add_patient_to_case(); } );



  // Search Patients

  var search_bar_height = Math.floor( button_bar_height * 0.9 );

  $('#select_patient_div').append('<div id="search_patient_div"></div>');

  var spd_css = { position: 'absolute',
                  top: button_bar_height,
                  left: 0,
                  width: comments_width,
                 'padding-top': button_top_padding,
                  height: search_bar_height,
                 'border-bottom': '1px solid #7a7c7f',
                  color: '#abb3b7' };

  $('#search_patient_div').css( spd_css );

  var search_input_top_padding  = button_top_padding * 0.6;
  var search_input_left_padding = search_input_top_padding * 2.5;

  var search_input_height = Math.floor( search_bar_height * 0.85 );
  var search_input_radius = search_input_height / 2;
  var search_input_top    = ( search_bar_height - ( search_input_height * 0.75 ) ) / 2;
  var search_input_width  = Math.floor( comments_width - ( search_input_top * 2 ) );

  var input_height = search_input_height - search_input_top_padding;
  var input_width = search_input_width - search_input_left_padding;

  $('#search_patient_div').append('<div id="search_input">Search</div>');

  var si_css = { position: 'absolute',
                 top: search_input_top,
                 left: search_input_top,
                 width: input_width,
                 height: input_height,
                'padding-top': search_input_top_padding,
                'padding-left': search_input_left_padding,
                 border: '1px solid #707174',
                'border-radius': search_input_radius,
                'background-color': '#464748',
                 color: '#abb3b7' };

  $('#search_input').css( si_css );



  // patients list starts below the border of the search input

  var patient_list_start_top = button_bar_height + search_bar_height + ( button_top_padding * 2 );
  var patient_info_height    = Math.floor( button_bar_height * 1.1 );

  var div_id;
  var background_color;
  var color;

  for ( var p in global_patient_info ) {

    div_id = 'patient_' + p;

    if ( p == 0 ) {
      background_color = '#b4d4ef';
      color = '#4a4647';
      select_patient_state[p] = 'on';
      selected_patient = p;
    } else {
      background_color = '';
      color = '#b2b3b7';
      select_patient_state[p] = 'off';
    }


    $('#select_patient_div').append('<div id="' + div_id + '"></div>');

    var p_css = { position: 'absolute',
                  top: patient_list_start_top,
                  height: patient_info_height,
                  width: comments_width,
                 'background-color': background_color,
                  color: color };

    $('#' + div_id).css( p_css );

    $('#' + div_id).on('click', function() { toggle_patient_selection(this); } );



    patient_list_start_top += patient_info_height;


    // append picture div

    $('#' + div_id).append('<div id="patient_picture_' + p + '"></div>');

    var pp_css = { position: 'absolute',
                   top: 0,
                   left: 0,
                   height: patient_info_height,
                   width: patient_info_height };

    $('#patient_picture_' + p).css( pp_css );


    // if ( ( typeof global_patient_info[p].picture ) != 'undefined' ) 



    // append text div

    var patient_info_text;
    var patient = global_patient_info[p];

    if ( ( typeof patient.gender ) == 'undefined' ) {

      if ( ( typeof patient.age ) == 'undefined' ) { patient_info_text = 'Anonymous patient'; }
                                              else { patient_info_text = 'Anonymous ' + patient.age; }

    } else {

      if ( ( typeof patient.age ) == 'undefined' ) { patient_info_text = patient.gender; }
                                              else { patient_info_text = patient.age + '&nbsp;&nbsp;&nbsp;' + patient.gender; }

    }


    $('#' + div_id).append('<div id="patient_text_' + p + '"></div>');

    var patient_text_width       = comments_width - patient_info_height;
    var patient_text_top_padding = Math.floor( patient_info_height * 0.189 );
    var info_height              = patient_info_height - patient_text_top_padding;

    var pt_css = { position: 'absolute',
                   top: 0,
                   left: patient_info_height,
                   height: info_height,
                   width: patient_text_width,
                  'padding-top': patient_text_top_padding };

    $('#patient_text_' + p).css( pt_css );

    $('#patient_text_' + p).html( global_patient_info[p].name );

    $('#patient_text_' + p).append('<div style="font-size: 12px">' + patient_info_text + '</div>');

  }

}



function add_patient_to_case() {

  // console.log('add_patient_to_case id ' + global_patient_info[selected_patient].name );


  if ( ( ( typeof selected_patient ) != 'undefined' ) && ( selected_patient != '' ) ) {

    $('#selected_patient_name').html( global_patient_info[selected_patient].name );


    // set global case input info patient id to global patient info selected_patient .id


    // change case events to show info of global patient info patient_id


    global_case_input_info.name    = global_patient_info[selected_patient].name;
    global_case_input_info.age     = global_patient_info[selected_patient].age;
    global_case_input_info.gender  = global_patient_info[selected_patient].gender;
    global_case_input_info.picture = global_patient_info[selected_patient].picture;

  } else {

    $('#selected_patient_name').html('Select Patient');

    global_case_input_info.name    = '';
    global_case_input_info.age     = '';
    global_case_input_info.gender  = '';
    global_case_input_info.picture = '';

  }


  $('#select_patient_div').remove();
  $('#select_patient_shade').remove();

}



function toggle_patient_selection( div_id ) {

  // console.log('toggle_patient_selection div_id ' + div_id.id);

  var p = div_id.id.split('_');
  var n = p[1];


  // select patient button sets the patient, or these set it on click ?

  console.log('n ' + n + ', ' + global_patient_info[n].name);


  if ( select_patient_state[n] == 'off' ) {

    if ( ( ( typeof selected_patient ) != 'undefined' )
      && ( selected_patient != '' ) ) {
      select_patient_state[selected_patient] = 'off';
      $('#patient_' + selected_patient).css( { 'background-color': '', color: '#b2b3b7' } );
    }

    select_patient_state[n] = 'on';
    $('#patient_' + n).css( { 'background-color': '#b4d4ef', color: '#4a4647' } );

    selected_patient = n;

  } else {

    select_patient_state[n] = 'off';
    $('#patient_' + n).css( { 'background-color': '', color: '#b2b3b7' } );

    if ( selected_patient == n ) {
      selected_patient = '';
    }

  }

}



// change these to create_ instead of submit_

/*

  // moved to case-create-tag-functions.js as create_case_add_tags()

function submit_case_add_tags() {

  console.log('submit case, add tags');

}

*/




function submit_case_invite_doctors() {

  console.log('submit case, invite doctors');

}



function cancel_add_event() {

  console.log('cancel add event');

  comment_shade_added = 0;

  $('#comment_shade').fadeTo(200, 0);
  $('#add_event_background').fadeTo(200, 0);

  setTimeout(function() {

    $('#comment_shade').remove();
    $('#add_event_background').remove();

  }, 300);

}



function update_case_and_event_ids( data, textStatus, case_id ) {

  // data is the case info returned, with id and old_id

  // global case info case_id copied to id from data
  // add entry in global case info for id
  // copy case info case_id to case info id

  var new_id = data.id;

  // global_case_info[ new_id ] = jQuery.extend( true, {}, global_case_info[ case_id ] );

  global_case_info[ new_id ] = jQuery.extend( true, {}, data );

  delete global_case_info[ case_id ];


  // setting the global case info entry to data means id's are there


  // global_case_info[ new_id ].id = new_id;

  // global_case_info[ new_id ].server_timestamp = data.server_timestamp;



  // set ids in global case info events to ids from data

  for ( var i in data.events ) {

    var this_event = data.events[i];
    var current_event_id = this_event.old_id;
    var new_event_id = this_event.id;

    // events[ current event id ] ?  events will be in the same order
    // global_case_info[ new_id ].events[ i ].id = new_event_id;


    // delete temporary id

    delete global_case_info[ new_id ].events[ i ].temporary_id;

  }


}




//---- case-create-error-functions.js ------------------------------------------------------------------------------------




// case-create-error-functions.js



// add shade div and error message when submit button is hit if case title is blank

function show_case_title_error_message() {

  // add shade div to cover the page, on click call this again

  $('body').append('<div id="error_message_shade"></div>');

  $('#error_message_shade').css( { position: 'absolute',
                                   top: 0,
                                   left: 0,
                                   width: $(window).width(),
                                   height: $(window).height(),
                                  'background-color': '#000000',
                                   opacity : 0 } );

  $('#error_message_shade').on('click', function() { remove_case_title_error_message(); } );

  $('#error_message_shade').fadeTo(200, 0.3);


  // error message

  var message_width  = Math.floor( global_screen_width * 0.6 );
  if ( message_width > 400 ) { message_width = 400; }

  var message_height = Math.floor( message_width * 0.3 );
  var message_top    = ( ( global_screen_height - message_height ) / 2 ) - ( message_height * 0.25 );
  var message_left   = ( global_screen_width - message_width ) / 2;

  $('body').append('<div id="error_message"></div>');

  $('#error_message').css( { position: 'absolute',
                             top: message_top,
                             left: message_left,
                             width: message_width,
                             height: message_height,
                            'background-color': '#ffffff',
                            'border-radius': 15,
                            'font-family': 'Droid Sans',
                            'font': '28px "Droid Sans", sans-serif' } );

  var message_text_top = message_height * 0.3;
  var message_text_left = message_width / 7;
  var message_text_width = message_width - ( message_text_left * 2 );
  var message_text_height = message_height - ( message_text_top * 2 );

  $('#error_message').append('<div id="error_message_text"></div>');

  $('#error_message_text').css( { position: 'absolute',
                                  top: message_text_top,
                                  left: message_text_left,
                                  width: message_text_width,
                                  height: message_text_height } );

  $('#error_message_text').html('<center>Please enter a title.<center>');

}



function remove_case_title_error_message() {

  $('#error_message_shade').fadeTo(200, 0, function() { $('#error_message_shade').remove(); } );

  $('#error_message').remove();

}



//---- case-create-input-functions.js ------------------------------------------------------------------------------------




// add editable divs to the case input div.  change font color on focus, add data to each paragraph

// set global case input info, icon and text for each div
// container div with icon div and editable div


// set screen height with keyboard 

// var global_screen_height_with_keyboard = 0;

// var global_keyboard_height = 0;


var global_case_input_slider_start_top;


var global_case_event_focus_was_called = 0;

var global_button_has_focus = 0;


var global_case_tag_check = [];




function add_case_input_divs(case_id) {

  // all editable divs in a slider div, in a container div with margins
  // all icons in another slider div, scrolltop to top position of case input slider

  console.log('add case input divs');


  var div_id = 'case_input';

  var case_input_div = $('#' + div_id);

  var case_input_width        = parseInt( $('#case_input').css('width') );
  var case_input_height       = parseInt( $('#case_input').css('height') );
  var case_input_top_padding  = parseInt( $('#case_input').css('padding-top') );
  var case_input_left_padding = parseInt( $('#case_input').css('padding-left') );

  var case_input_container_width  = case_input_width  - ( case_input_left_padding * 1 );
  var case_input_container_height = case_input_height - ( case_input_top_padding  * 1 );


  // case input container

  case_input_div.append('<div id="case_input_container"></div>');

  var cic_css = { 'position': 'absolute',
                  'top': case_input_top_padding,
                  'left': case_input_left_padding,
                  'width': case_input_container_width,
                  'height': case_input_container_height,
                  'overflow': 'hidden',
                  'background-color': '#ffffff' };

  $('#case_input_container').css( cic_css );



  // case input slider

  $('#case_input_container').append('<div id="case_input_slider"></div>');

  var cis_css = { 'position': 'absolute',
                  'top': 0,
                  'left': 0,
                  'width': case_input_container_width,
                  'min-height': 10,
                  'background-color': '#ffffff' };

  $('#case_input_slider').css( cis_css );

  $('#case_input_slider').on('touchstart', function(event) { case_input_touch_start(event); } );
  $('#case_input_slider').on('touchmove',  function(event) { case_input_touch_move(event);  } );
  $('#case_input_slider').on('touchend',   function(event) { case_input_touch_end(event);  } );



  // create case v 07, button bar is at the top of the screen

  var case_button_bar_height = $('#case_button_bar').height();


  // icon slider container

  var case_input_container_top = parseInt( $('#case_input_container').offset().top );

  $('#case_events').append('<div id="case_event_icon_container"></div>');

  var ceic_css = { 'position': 'absolute',
                   'top': ( case_input_container_top - case_button_bar_height ),
                   'left': 0,
                   'min-width': 50,
                   'height': case_input_container_height };

  $('#case_event_icon_container').css( ceic_css );



  // icon slider

  $('#case_event_icon_container').append('<div id="case_event_icon_slider"></div>');

  var ceis_css = { 'position': 'absolute',
                   'top': 0,
                   'left': 0,
                   'width': 50,
                   'height': 50 };

  $('#case_event_icon_slider').css( ceis_css );



  // icon left 

  var half_of_icon        = ( 29 - 5 ) / 2;
  var vertical_line_width = parseInt( $('#create_case_vertical_line').css('width') );
  var icon_left           = vertical_line_width - half_of_icon;



  // number of events in global current case or n for new case id
  // set text to events of global current case
  // add blank divs at the bottom to prevent the window from scrolling?


  // the last div has to append another div, unbind that keydown event from itself, and bind it to the new div

  // start with focus on the title, and no other divs ?


  var case_event_count = 20;

  if ( typeof( global_case_info[case_id].events ) != 'undefined' ) {

    if ( global_case_info[case_id].events.length > 20 ) {

      case_event_count = global_case_info[case_id].events.length + 20;

    }

  }


  for (var i = 0; i < case_event_count; i++) {

    // paragraph div

    var row_id = 'case_input_row_' + i;
    var row_date_id = 'case_input_row_date_' + i;

    $('#case_input_slider').append('<div id="' + row_id + '"></div>');

    var row_div = $('#' + row_id);

    row_div.css( { 'min-height': 20,
                    width: '95%',
                   'font-family': 'Droid Sans',
                    font: '17px "Droid Sans", sans-serif',
                   'margin-bottom': 1,
                   'margin-left': 0,
                   'padding-top': 2,
                   'padding-bottom': 2,
                    cursor: 'text',
                    outline: '0px',
                   'background-color': '#f4fff4' } );

    if (i == 0) { row_div.css( { 'font': 'bold 36px "Droid Sans", sans-serif' } ); }


    row_div.attr('contentEditable', 'true');

    row_div.on('focus', function() { case_input_on_focus(this); } );
    row_div.on('blur',  function() { case_input_on_blur(this); } );

    row_div.on('keydown',  function(event) { case_input_on_keydown(this); } );
    row_div.on('keypress', function(event) { case_input_on_keypress(this); } );

    // row_div.blur();



    // bind tags check to row id

    global_case_tag_check[i] = new Tag_Check( row_id );



    // date of paragraph

    $('#case_input_slider').append('<div id="' + row_date_id + '" style="color: #c2c4b9; margin-bottom: 10"></div>');

    // console.log('row_id ' + row_id + ' append row_date_id ' + row_date_id);

    // margin-bottom



    // icon on each paragraph div

    var row_top = parseInt( row_div.position().top );
    var icon_id = 'case_input_row_icon_' + i;

    var row_icon = 'tabeeb-select-event.png';
    var row_type;


    if (i == 0) { $('#' + row_id).html( global_case_info[case_id].title ); }

    // summary is not used, if (i == 1) { $('#' + row_id).html( global_case_info[case_id].summary ); }


    if ( ( i > 0 ) && ( typeof( global_case_info[case_id].events[i] ) != 'undefined' ) ) {

      console.log('create case input, event ' + i + ' is ' + global_case_info[case_id].events[i].text );

      // copy type to global case input info

      if ( ( typeof( global_case_info[case_id].events[i].type ) != 'undefined' ) && ( global_case_info[case_id].events[i].type != null ) ) {

        if ( typeof( global_case_input_info.events[i] ) == 'undefined' ) { 
          var events = {};
          global_case_input_info.events[i] = events;
        }

        row_type = global_case_info[case_id].events[i].type;
        row_icon = 'tabeeb-' + row_type.toLowerCase() + '-event.png';

        global_case_input_info.events[i].type = row_type;
        global_case_input_info.events[i].icon = row_icon;

      } else {

        // global case info events i type is undefined, so set input info events i to {}
        global_case_input_info.events[i] = {};

      }



      // text

      $('#' + row_id).html( global_case_info[case_id].events[i].text );

      global_case_input_info.events[i].text = global_case_info[case_id].events[i].text;



      // date of paragraph

      if ( typeof( global_case_info[case_id].events[i].date ) != 'undefined' ) {

        $('#' + row_date_id).html( global_case_info[case_id].events[i].date );

        global_case_input_info.events[i].date = global_case_info[case_id].events[i].date;

      } 



      // images

      if ( typeof( global_case_info[case_id].events[i].image ) != 'undefined' ) {

        // add div for image[i] and set src to global_images_list[ input.files[0].name ] if defined
        add_images_to_create_case_div(row_id, global_case_info[case_id].events[i].image);

        global_case_input_info.events[i].image = global_case_info[case_id].events[i].image.slice(0);

      }



      // tags on events

      if ( typeof( global_case_info[case_id].events[i].tags ) != 'undefined' ) {

        global_case_input_info.events[i].tags = global_case_info[case_id].events[i].tags.slice(0);

      }

    }

    // tags on the case are copied at the end of the rows loop



    $('#case_event_icon_slider').append('<div id="' + icon_id + '"><img src="' + row_icon + '"></img></div>');


    var row_height = row_div.height();
    var icon_div = $('#' + icon_id);

    var id_css = { position: 'absolute',
                   top: row_top,
                   left: icon_left,
                   height: row_height };

    icon_div.css( id_css );

    icon_div.on('click', function() { case_input_icon_click(this); } );

  }

  // end of for i in rows



  // tags on the case

  if ( typeof( global_case_info[case_id].tags ) != 'undefined' ) {

    global_case_input_info.tags = global_case_info[case_id].tags.slice(0);

  }



  // add adjust_icons to blur now that all divs have been created
  // adjust on focus also?

  for (var i = 0; i < case_event_count; i++) {

    var row_id = 'case_input_row_' + i;
    var row_div = $('#' + row_id);

    row_div.on('blur',  function() { adjust_case_input_icons(); } );

    // row_div.on('focus', function() { adjust_case_input_icons(); } );

  }



  // text for case 124

  if ( case_id == 124 ) {

    $('#case_input_row_0').html('Another pulmonary hemosiderosis case');
    $('#case_input_row_1').html('Management recommendations appreciated for 13 yo male with pulmonary hemosiderosis moved to the area after dx and open lung biopsy at age 5 (no cappillaritis reported), very stable for years but restrictive disease present on PFTs, never anemic, normal DLCO.');
    $('#case_input_row_2').html('On routine clinic visit had mild dyspnea and small drop in VC and FEV1. Chest CT showed increased ground glass densities and subpleural emphysema compared to 7 years previously.');
    $('#case_input_row_3').html('Bronchoscopy 3 weeks ago revealed bilateral pulmonary hemorrhage with 90% of macrophages hemosiderin positive. Cultures negative.');
    $('#case_input_row_4').html('Started Prednisone 40 mg BID for one week then reduced to 40 mg daily, repeat bronchoscopy today shows continued hemorrhage on BAL with RBC 9750/mm3, 500 WBC, differential 22 polymorphonuclear leukocytes, 1 lymphocyte 73 histiocytes and 4 eosinophils. Other work up last 2 moths has included Normal angiotensin converting enzyme, CRP at 0.9, C3 134 (normal), C4 27 (normal), ANCA negative, MPO Ab 2 (normal) Serine protease 3=1 (normal) ANA and anticardiolipin Ab negative. UA negative, comprehensive metabolic panel normal. IGE elevated at 398, unexplained.');
    $('#case_input_row_5').html('He has some mild exercise intolerance but has normal oxygen saturation does not have cough and is a very good student. I am planning to give Cytoxan (he is Tanner 2), other ideas?');

  }



  // adjust all icons to top of divs, after enough time for the html to update

  setTimeout(function() { adjust_case_input_icons(); }, 500);


  // $('#case_input_row_0').blur();

}



function case_input_on_focus(row) {

  console.log('case input on focus, row is ' + row.id);


  if ( global_icon_has_focus )   { global_icon_has_focus = 0; }
  if ( global_button_has_focus ) { global_button_has_focus = 0; }


  /*

  $('#take_a_photo_button').show();
  $('#attach_a_photo_button').show();
  $('#calendar_button').show();
  $('#category_button').show();

  */


  // set global case input info current_row to row

  var r = row.id.split('_');
  var num = r[3];
  global_case_input_info.current_row = num;



  if ( row.id != global_last_row_selected ) {

    if ( typeof( global_last_row_selected != 'undefined' ) ) {
      $('#' + global_last_row_selected).css( { 'color': '#b3b4b6' } );
    }

    global_last_row_selected = row.id;

  }


  $('#' + row.id).css( { 'color': '#525157' } );

  $('#case_input').addClass('blue_drop_shadow');




  // set global case input info .row to text of current row

  // set case input category button to category of current row

  set_case_input_category_button(num);

  // set color of category button in category ui also?



  // if screen height is global screen height, wait 200 ms before checking?

  // move category buttons to current screen size - buttons height


  // $('#case_input_row_2').html('global screen height is ' + global_screen_height);


  global_case_event_focus_was_called = 1;

  // when the next paragraph is tapped, blur and focus both fire.
  // don't move buttons from blur if focus was also called

  setTimeout( function() { global_case_event_focus_was_called = 0; }, 500 );


  /* 

  setTimeout( function() {

    move_case_buttons_to_bottom_on_focus();

  }, 60 );

  */


}



function case_input_on_blur(row) {

  $(row).css( { 'color': '#b3b4b6' } );

  $('#case_input').removeClass('blue_drop_shadow');


  // set global case input info rows to divs

  var text = $(row).text();
  var p = row.id.split('_');
  var i = p[3];

  console.log('on blur, row i ' + row.id + ', ' + i + ' has ' + text);

  if ( typeof( global_case_input_info.events[i] ) == 'undefined' ) {
    var event_info = {};
    global_case_input_info.events[i] = event_info;
  }

  global_case_input_info.events[i].text = text;


  // add event tags to case tags if not listed in case tags
  // loop over the array, because .in etc aren't supported in ie 6, 7 ?
  // tag check starts after blur
  // push tags onto input tags in tag check, not here

  /* 

  if ( typeof( global_case_input_info.events[i].tags ) != 'undefined' ) {

    for ( var t in global_case_input_info.events[i].tags ) {

      // loop through case tags

      var found = 0;

      for ( var ct in global_case_input_info.tags ) {

        if ( global_case_input_info.events[i].tags[t].word == global_case_input_info.tags[ct].word ) {
          found = 1;
        }

      }

      if ( found == 0 ) {

        console.log('pushing tag on to input info tags, ' + global_case_input_info.events[i].tags[t].word );

        global_case_input_info.tags.push( global_case_input_info.events[i].tags[t] );

      }

    }

  }

  */



  // move category buttons to global screen size - buttons height


  setTimeout( function() {

    if ( global_case_event_focus_was_called ) {

      // don't move the button bar

    } else {


      if ( global_button_has_focus || global_icon_has_focus ) {

        // don't hide

      } else {

        // hide photo, calendar, and category buttons

        /*

        $('#take_a_photo_button').hide();
        $('#attach_a_photo_button').hide();
        $('#calendar_button').hide();
        $('#category_button').hide();

        */

      }


      // move_case_buttons_to_bottom_on_blur();

      $(window).scrollTop(0)


    }

  }, 50 );

}



function move_case_buttons_to_bottom_on_focus() {

  var bar_height = parseInt( $('#category_ui_container').height() );

  // var screen_height = $(window).height();

  var bar_top = ( global_screen_height_with_keyboard + $(window).scrollTop() ) - bar_height;

  // check if position is already at the bottom

  // set 'bottom' in css ??

  $('#category_ui_container').css('top', bar_top);
  $('#case_button_bar').css('top', bar_top);

}



function move_case_buttons_to_bottom_on_blur() {

  var bar_height = parseInt( $('#category_ui_container').height() );

  // var screen_height = $(window).height();

  // var bar_top = ( global_screen_height + $(window).scrollTop() ) - bar_height;

  // window is not returning to top after the bottom divs are tapped

  var bar_top = global_screen_height - bar_height;

  $(window).scrollTop(0)

  // check if position is already at the bottom


  $('#category_ui_container').css('top', bar_top);
  $('#case_button_bar').css('top', bar_top);

}



// set the text of the global case input info object on each keypress, on change?


function case_input_on_keydown(row) {

  var r = row.id.split('_');

  var current_row = r[3];

  var next_row;

  console.log('key down, ' + event.keyIdentifier);

  if (event.keyIdentifier == 'Up')   { next_row = current_row; next_row--; $('#case_input_row_' + next_row).focus(); }

  if ( (event.keyIdentifier == 'Down')
    || (event.keyIdentifier == 'Enter') ) { 

    next_row = current_row; next_row++; $('#case_input_row_' + next_row).focus(); event.preventDefault();


    // if current row is the last row - n?, append a div


  }

}



function case_input_on_keypress(row) {

  // console.log('key press, ' + event.which);

  if (event.which == 13) { event.preventDefault(); }

}



// case input on change, if my paragraph height is different, adjust all icons for rows current to end
// set height of icon div to row height

function adjust_case_input_icons() {

  var rows = $('#case_input_slider').children();

  console.log('adjust_case_input_icons');


  // case input slider scrolltop

  var case_input_slider_top = parseInt( $('#case_input_slider').position().top );

  console.log('case_input_slider_top ' + case_input_slider_top );


  var case_button_bar_height = $('#case_button_bar').height();


  // the dates are being listed in the rows here

  for (var i in rows) {

    if ( /[a-z]/.test(i) ) { continue; }

    // console.log('rows[i] ' + rows[i]);
    // console.dir(rows[i]);
    // console.log('adjust_case_input_icons i ' + i);

    var row_id = 'case_input_row_' + i;

    var icon_id = 'case_input_row_icon_' + i;

    if ( typeof( $('#' + row_id).position() ) != 'undefined' ) {

      // create case v 07, button bar is at the top of the screen

      // var row_top = parseInt( $('#' + row_id).position().top ) + case_input_slider_top + case_button_bar_height;

      var row_top = parseInt( $('#' + row_id).position().top ) + case_input_slider_top;

      var row_height = $('#' + row_id).height();

      // add date height

      // console.log('adjust_case_input_icons ' + icon_id + ' row_top ' + row_top + ' row_height ' + row_height);

      $('#' + icon_id).css( { top: row_top, height: row_height } );

    }

  }

}



function case_input_touch_start(e) {

  // e.preventDefault();

  var touch = e.originalEvent.touches[0];


  touch_move_start.y = touch.pageY;


  global_case_input_slider_start_top = parseInt( $('#case_input_slider').css('top') );

  // offset?  position?  
  // global_case_input_slider_start_top = parseInt( $('#case_input_slider').offset().top );



  $('#case_button_bar').append('<div id="debug_output" style="position: absolute; top: 12; left: 10; color: #dd8888"></div>');

}



function case_input_touch_move(e) {

  e.preventDefault();

  var touch = e.originalEvent.touches[0];


  var dy = touch.pageY - touch_move_start.y;


  var case_input_slider_offset_top = parseInt( $('#case_input_slider').offset().top );

  var case_input_slider_top = global_case_input_slider_start_top + ( dy * 2 );


  // if offset top < 0,

  // if ( ( case_input_slider_top + case_input_slider_offset_top ) > 0 ) { case_input_slider_top = 0; }


  // else

  if ( case_input_slider_top > 0 ) { case_input_slider_top = 0; }




  // if top < input height - slider height

  var case_input_slider_height = parseInt( $('#case_input_slider').css('height') );
  var case_input_container_height = parseInt( $('#case_input_container').css('height') );

  var case_input_min = case_input_container_height - case_input_slider_height;

  // if offset top < 0

  if ( case_input_slider_top < case_input_min ) { case_input_slider_top = case_input_min; }


  $('#case_input_slider').css( { 'top': case_input_slider_top } )

  $('#case_event_icon_slider').css( { 'top': case_input_slider_top } )



  // $('#debug_output').html('case_input_slider_top ' + case_input_slider_top + ', ' + 'slider offset ' + case_input_slider_offset_top );

}



function case_input_touch_end(e) {

  $('#debug_output').remove();

}



//---- case-create-input-icon-functions.js ------------------------------------------------------------------------------------




// case-create-input-icon-functions.js


// category icon in case create shows category, photo, and calendar buttons

// set the div color to black

// set last selected div to gray


// set the div back to gray from body on click?  check global icon has focus in all the other divs?
// set the div back to gray when category is set, when date is set, when photo is added
// add shade div to the tags column?
// check global icon has focus in case_input_on_focus()


// remove case buttons to bottom on focus and blur from case_input_on_focus, blur



var global_icon_has_focus = 0;

var global_last_row_selected;



// add case input divs sets icon div onclick with this of icon div, has to set row div color

// row_id = 'case_input_row_' + i;
// icon_id = 'case_input_row_icon_' + i;


function case_input_icon_click(row) {

  console.log('case input icon, row is ' + row.id);

  // this is set when category or photo buttons get focus

  if ( global_button_has_focus ) { global_button_has_focus = 0; }

  global_icon_has_focus = 1;


  /*

  $('#take_a_photo_button').show();
  $('#attach_a_photo_button').show();
  $('#calendar_button').show();
  $('#category_button').show();

  */


  // set global case input info current_row to row

  var r = row.id.split('_');
  var num = r[4];
  global_case_input_info.current_row = num;

  var div_row = 'case_input_row_' + num;


  if ( div_row != global_last_row_selected ) { 

    if ( typeof( global_last_row_selected != 'undefined' ) ) {
      $('#' + global_last_row_selected).css( { 'color': '#b3b4b6' } );
    }

    global_last_row_selected = div_row; 

  }


  $('#' + div_row).css( { 'color': '#525157' } );




  // set global case input info .row to text of current row ?


  // set case input category button to category of current row

  set_case_input_category_button(num);

  // set color of category button in category ui also?


}



//---- case-create-input-image-functions.js ------------------------------------------------------------------------------------




// case-create-input-image-functions.js



// add div for image[i] and set src to global_images_list[ input.files[0].name ] if defined


// mulitple images on a paragraph are overlapped, grid, scrollable strip ?

// add_images_to_create_case_div(row_id, global_case_info[case_id].events[i].image);




function add_images_to_create_case_div(row_id, image_array) {

  // console.log('add_images_to_create_case_div, row_id ' + row_id);

  var image_top = $('#' + row_id).offset().top;
  var case_input_width = $('#case_input_container').width();
  var image_left = case_input_width + 20;

  for ( var i in image_array ) {

    var image_name = image_array[i].replace(/\./g, '_');

    image_name = image_name.replace(/ /g, '_');
    image_name = image_name.replace(/\(/g, '_');
    image_name = image_name.replace(/\)/g, '_');

    var image_div = image_name + '_div';

    // if the image is in the images list, src is at the original filename, not the underscore replaced name

    if ( ( typeof global_images_list[ image_array[i] ] ) != 'undefined' ) {
      $('body').append('<div id="' + image_div + '"><img style="width: 50; height: auto;" src="' + global_images_list[ image_array[i] ].src + '" /></div>');
    } else {
      $('body').append('<div id="' + image_div + '"><img style="width: 50; height: auto;" src="' + image_array[i] + '" /></div>');
    }


    var this_image_top = image_top + ( i * 15 );
    var this_image_left = image_left + ( i * 15 );

    var img_div_css = { position: 'absolute',
                        top: this_image_top,
                        left: this_image_left,
                        width: 50,
                        height: 'auto',
                       'z-index': 100,
                       'background-color': '#88aa88' };

    $('#' + image_div).css( img_div_css );

  }

}




//---- case-create-calendar-functions.js ------------------------------------------------------------------------------------




// case-create-calendar-functions.js



// toggle states of sliders and calendar page

var year_state  = [];
var month_state = [];
var day_state   = [];



var days_of_the_week = [ 'Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat' ];

var day_index_of = { 'Sun': 0, 'Mon': 1, 'Tues': 2, 'Wed': 3, 'Thurs': 4, 'Fri': 5, 'Sat': 6 };


var months_of_the_year = [ 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec' ];

var name_of_month = { 'Jan': 'January', 
                      'Feb': 'February', 
                      'Mar': 'March', 
                      'Apr': 'April', 
                      'May': 'May', 
                      'Jun': 'June', 
                      'Jul': 'July', 
                      'Aug': 'August', 
                      'Sep': 'September', 
                      'Oct': 'October', 
                      'Nov': 'November', 
                      'Dec': 'December' };

var short_name_of_month = { 'Jan': 'Jan',
                            'Feb': 'Feb',
                            'Mar': 'March',
                            'Apr': 'April',
                            'May': 'May',
                            'Jun': 'June',
                            'Jul': 'July',
                            'Aug': 'Aug',
                            'Sep': 'Sep',
                            'Oct': 'Oct',
                            'Nov': 'Nov',
                            'Dec': 'Dec' };


var days_in = {};

// days_in { 'march': 31 }


var last_selected_day = 0;
var last_selected_day_div;
var last_selected_day_of_week;
var last_selected_month;
var last_selected_year;

var selected_day = 0;
var selected_day_div;
var selected_day_of_week;
var selected_month;
var selected_year;


var day_row_height, day_column_width;;

var calendar_font_height;

var calendar_font_size;
  
 
var global_year_slider_height;
var global_month_slider_height;

var global_calendar_button_row_height;




function draw_calendar() {

  // add shade div

  $('body').append('<div id="calendar_shade"></div>');

  $('#calendar_shade').css( { position: 'absolute',
                              top: 0,
                              left: 0,
                              width: $(window).width(),
                              height: $(window).height(),
                             'background-color': '#000000',
                              opacity : 0 } );

  $('#calendar_shade').on('click', function() { 
    $('#calendar_shade').remove();
    cancel_calendar();
  } );

  $('#calendar_shade').fadeTo(200, 0.3);



  var calendar_day, calendar_day_of_week, calendar_month, calendar_year;

  var calendar_height;

  if ( global_keyboard_height > 0 ) {

    calendar_height = global_keyboard_height;

  } else { 

    calendar_height = Math.floor( global_screen_height * 0.4 );

  }


  var calendar_top      = global_screen_height - calendar_height;
  var column_width      = global_screen_width / 9;
  var year_column_width = Math.floor( column_width * 1.2 );

  day_column_width = Math.floor( ( global_screen_width - ( year_column_width * 2 ) ) / 7 );

  var day_panel_width       = day_column_width * 7;
  var row_height            = calendar_height / 7;
  var button_row_height     = row_height * 1.2;
  var calendar_dates_height = calendar_height - button_row_height;

  day_row_height = calendar_dates_height / 6;


  global_calendar_button_row_height = button_row_height;


  // font size adjustment, do all sizes based on screen height and width before the page is drawn

  calendar_font_size = 19;



  // get the height of the font

  $('body').append('<div id="font_test"></div>');

  $('#font_test').css( { 'background-color': '#ffffff',
                         'font-family': 'Droid Sans',
                         'font': calendar_font_size + 'px "Droid Sans", sans-serif' } );

  $('#font_test').html('Font');

  calendar_font_height = parseInt( $('#font_test').outerHeight() );

  $('#font_test').remove();


  // font for date selected, calendar page, year and month sliders?




  // get the list of months and number of days in each one

  days_in = get_days_in_each_month();



  // current date

  var currentTime = new Date();

  var current_month = currentTime.getMonth() + 1;
  var current_day   = currentTime.getDate();
  var current_year  = currentTime.getFullYear();

  var current_day_of_week = days_of_the_week[currentTime.getDay()];

  var current_month_name = months_of_the_year[currentTime.getMonth()];


  console.log('today is ' + current_day_of_week + ' ' + current_month_name + ' ' + current_day + ', ' + current_year);
  // Thurs Aug 15, 2013


  // year and month sliders set these

  last_selected_month       = current_month_name;
  last_selected_year        = current_year;


  // calendar is drawn from the current or selected date

  if ( last_selected_day == 0 ) {
    calendar_day         = current_day;
    calendar_day_of_week = current_day_of_week;
    calendar_month       = current_month_name;
    calendar_year        = current_year;
  } else {
    calendar_day         = last_selected_day;
    calendar_day_of_week = last_selected_day_of_week;
    calendar_month       = last_selected_month;
    calendar_year        = last_selected_year;
  }
  


  // move this to create_divs function
  // draw_calendar_ui()


  $('body').append('<div id="calendar_panel"></div>');

  $('#calendar_panel').css( { 'position': 'absolute',
                              'overflow': 'hidden',
                              'top': calendar_top,
                              'left': 0,
                              'width': global_screen_width,
                              'height': calendar_height,
                              'background-color': '#aaffaa',
                              'font-family': 'Droid Sans',
                              'font': calendar_font_size + 'px "Droid Sans", sans-serif' } );


  $('#calendar_panel').append('<div id="calendar_buttons"></div>');

  $('#calendar_buttons').css( { 'position': 'absolute',
                                'top': 0,
                                'left': 0,
                                'width': global_screen_width,
                                'height': button_row_height,
                                'background-color': '#292526' } );



  // close button, div for current selected dates, done button

  $('#calendar_buttons').append('<div id="calendar_close_button_1"  ></div>');
  $('#calendar_buttons').append('<div id="calendar_close_button_2"  ></div>');
  $('#calendar_buttons').append('<div id="calendar_date_selection"></div>');
  $('#calendar_buttons').append('<div id="calendar_done_button"   ></div>');


  // no close button.  done button sets last selected to selected and div html to selected

  // close button

  var cbc_height = Math.floor( button_row_height * 0.11 );
  var cbc_width  = Math.floor( button_row_height * 0.5 );
  var cbc_top    = ( button_row_height / 2 ) - ( cbc_height / 2 );
  var cbc_left   = Math.floor( cbc_top * 1.2 );


  /*

  var cbc1 = { 'position': 'absolute',
               'top': cbc_top,
               'left': cbc_left,
               'width': cbc_width,
               'height': cbc_height,
               'transform': 'rotate(45deg)',
               'background-color': '#aaaaaa' };

  var cbc2 = { 'position': 'absolute',
               'top': cbc_top,
               'left': cbc_left,
               'width': cbc_width,
               'height': cbc_height,
               'transform': 'rotate(-45deg)',
               'background-color': '#aaaaaa' };

  $('#calendar_close_button_1').css( cbc1 );
  $('#calendar_close_button_2').css( cbc2 );

  // on touchstart, click, close keyboard, redraw screen from global screen height

  $('#calendar_close_button_1').on('touchstart click', function() { cancel_calendar(); } );
  $('#calendar_close_button_2').on('touchstart click', function() { cancel_calendar(); } );

  */



  // selected dates

  var cds_top = ( button_row_height / 2 ) - Math.floor( calendar_font_height * 0.5 );
  var cds_left = cbc_left + cbc_width + 100;

  var cds = {  position: 'absolute',
               top: cds_top,
            // left: cds_left,
               left: 20,
               color: '#aaaaaa',
              'font-family': 'Droid Sans',
              'font': calendar_font_size + 'px "Droid Sans", sans-serif' };

  $('#calendar_date_selection').css( cds );



  // done button

  var cdb_top    = Math.floor( button_row_height * 0.15 );
  var cdb_width  = Math.floor( button_row_height * 1.8 );
  var cdb_height = button_row_height - ( cdb_top * 2 );
  var cdb_left   = global_screen_width - ( cdb_width + cdb_top );

  var cdb_padding_top = ( cdb_height / 2 ) - Math.floor( calendar_font_height * 0.5 );

  cdb_height = cdb_height - cdb_padding_top;


  var cdb = { 'position': 'absolute',
              'top': cdb_top,
              'left': cdb_left,
              'width': cdb_width,
              'height': cdb_height,
              'border-radius': 4,
              'color': '#555555',
              'padding-top': cdb_padding_top,
              'background-color': '#bbbbbb' };

  $('#calendar_done_button').css( cdb );
  $('#calendar_done_button').html('<center>Done<center>');

  $('#calendar_done_button').on('click', function() { 
    $('#calendar_shade').remove();
    add_date_to_paragraph(); 
  } );



  // container for year, month, days

  $('#calendar_panel').append('<div id="calendar_dates"></div>');

  $('#calendar_dates').css( { 'position': 'absolute',
                              'top': button_row_height,
                              'left': 0,
                              'width': global_screen_width,
                              'height': calendar_dates_height,
                              'background-color': '#e7e7e8' } );


  // years div

  var year_item_height = 40;

  // year and month div padding top has to be ( item height - font height ) / 2, div height is item height - padding
  // set global minimum sizes for buttons

  $('#calendar_dates').append('<div id="year_slider_container"></div>');

  $('#year_slider_container').css( { 'position': 'absolute',
                                     'top': 0,
                                     'left': 0,
                                     'width': year_column_width,
                                     'height': calendar_dates_height,
                                     'overflow': 'hidden',
                                     'background-color': '#aa8888' } );


  // year slider starts from current year and counts down to 1990

  $('#year_slider_container').append('<div id="year_slider"></div>');

  $('#year_slider').css( { position: 'absolute', top: 0 } );

  bind_calendar_ui_year_events();


  // append years to year slider

  var ending_year = current_year - 25;

  var future_year = current_year + 4;

  for (var i = future_year; i > ending_year; i--) {

    $('#year_slider').append('<div id="year_slider_' + i + '">' + i + '</div>');

    var year_background_color = '#e7e7e8';

    year_state[i] = 'off';

    if ( i == calendar_year ) { 
      year_background_color = '#b4d5f0'; 
      year_state[i] = 'on'; 
      selected_year = i;
    }

    $('#year_slider_' + i).css( { 'height': year_item_height,
                                  'width': year_column_width,
                                  'padding-left': 20,
                                  'padding-top': 12,
                                  'background-color': year_background_color } );

    $('#year_slider_' + i).on('click', function(e) { toggle_calendar_year_state(e, this); } );

  }


  global_year_slider_height = ( year_item_height + 10 ) * 25;



  // months div

  $('#calendar_dates').append('<div id="month_slider_container"></div>');

  $('#month_slider_container').css( { 'position': 'absolute',
                                      'top': 0,
                                      'left': year_column_width,
                                      'width': year_column_width,
                                      'height': calendar_dates_height,
                                      'overflow': 'hidden',
                                      'background-color': '#88aa88' } );

  $('#month_slider_container').append('<div id="month_slider"></div>');

  $('#month_slider').css( { position: 'absolute', top: 0 } );

  bind_calendar_ui_month_events();


  // append months to month slider

  for (var i = 0; i < 12; i++) {

    var month;

    if ( year_column_width < 100 ) {
      month = short_name_of_month[months_of_the_year[i]];
    } else {
      month = name_of_month[months_of_the_year[i]];
    }

    console.log('month is ' + month);

    $('#month_slider').append('<div id="month_slider_' + i + '">' + month + '</div>');

    var month_background_color = '#e7e7e8';

    month_state[i] = 'off';

    if ( months_of_the_year[i] == calendar_month ) { 
      month_background_color = '#b4d5f0'; 
      month_state[i] = 'on';
      selected_month = i;
    }

    $('#month_slider_' + i).css( { 'height': year_item_height,
                                   'width': year_column_width,
                                   'padding-left': 20,
                                   'padding-top': 12,
                                   'border-left': '1px solid #bdbec1',
                                   'background-color': month_background_color } );

    $('#month_slider_' + i).on('click', function(e) { toggle_calendar_month_state(e, this); } );

  }


  global_month_slider_height = ( year_item_height + 12 ) * 12;

  // scroll to current or last selected month
  // index of month, * month height, month slider height - calendar ui height + half of height, 0 if > 0

  $('#month_slider').css( { top: -250 } );



  // days div

  $('#calendar_dates').append('<div id="day_panel"></div>');

  $('#day_panel').css( { 'position': 'absolute',
                         'top': 0,
                         'left': ( year_column_width * 2 ),
                         'width': day_panel_width,
                         'height': 500,
                         'background-color': '#aa44aa' } );


  console.log(calendar_month + ' is calendar_month');

  var previous_month = get_previous_month(calendar_month);

  console.log(previous_month + ' is previous_month');


  // calendar_day is last day selected
  // calendar is drawn from last day selected

  
  var day_start = get_starting_offset(calendar_day_of_week, calendar_day, calendar_month);

  // console.log(day_start + ' is day_start');


  var days_in_this_month     = days_in[calendar_month];
  var days_in_previous_month = days_in[previous_month];

  // console.log(days_in_this_month + ' days in this month');
  // console.log(days_in_previous_month + ' days in previous month');


  // if calendar month and year are the current month and year, pass the current day to be highlighted

  var highlighted_date = 0;

  if ( ( calendar_year == current_year ) && ( calendar_month == current_month_name ) ) {

    highlighted_date = current_day;

  }


  draw_calendar_page(day_start, days_in_previous_month, days_in_this_month, highlighted_date);

}



function draw_calendar_page(day_start, days_in_previous_month, days_in_this_month, highlighted_date) {

  var day_count = 0;

  console.log('highlighted_date is ' + highlighted_date);


  //  add scroll event handlers


  // draw the calendar page

  // rows

  for (var i = 0; i < 7; i++ ) {

    var row_id  = 'row_' + i;
    var div_top = day_row_height * i;

    var days = [];

    day_state[i] = days;


    
    // columns

    for (var j = 0; j < 7; j++ ) {

      var div_id   = 'row_' + i + '_col_' + j;
      var div_left = day_column_width * j;

      var div_padding_top = ( day_row_height / 2 ) - ( calendar_font_height / 2 );
      var div_height      = day_row_height - div_padding_top;

      $('#day_panel').append('<div id="' + div_id + '"></div>');

      $('#' + div_id).css( { 'position': 'absolute',
                             'top': div_top,
                             'left': div_left,
                             'height': div_height,
                             'width': day_column_width,
                             'padding-top': div_padding_top,
                             'border-left': '1px solid #bdbec1',
                             'border-top': '1px solid #bdbec1',
                             'color': '#b3b4b7',
                             'background-color': '#e7e7e8' } );

      if ( i == 0 ) {

        $('#' + div_id).html('<center>' + days_of_the_week[j] + '</center>');

      } else {

        var day_of_month = day_start + day_count;


        // previous calendar month

        if ( day_of_month < 1 ) {

          var day_of_previous_month = day_of_month + days_in_previous_month;

          // $('#' + div_id).html('<center>' + day_of_previous_month + '</center>');

        }


        // this calendar month

        if ( ( day_of_month > 0 ) && ( day_of_month <= days_in_this_month ) ) {

          $('#' + div_id).html('<center>' + day_of_month + '</center>');

          $('#' + div_id).css( { 'color': '#545456' } );


          // set the background darker if day of month is current day, for the current month and year

          // check current_month and calendar_month, year

          if ( ( highlighted_date > 0 ) && ( highlighted_date == day_of_month ) ) {

            $('#' + div_id).css( { 'background-color': '#d0d0d0' } );

          }


          // calendar loads with last selected year and month, selected date is not shown

          /*

          // set the background dark blue if day of month is last selected day, for the current month and year

          if ( ( typeof last_selected_day ) != 'undefined' ) {

            if ( ( last_selected_day > 0 ) && ( last_selected_day == day_of_month ) ) {

              $('#' + div_id).css( { 'background-color': '#9bb7cf' } );

            }

          }

          */


          day_state[i][j] = 'off';

          $('#' + div_id).on('click', function(e) { toggle_calendar_day_state(e, this); } );



          // if > 5 weeks, set top of day panel to day_row_height

          if ( ( i == 6 ) && ( j == 0 ) ) {

            var day_panel_top = parseInt( $('#day_panel').css( 'top' ) );

            day_panel_top -= day_row_height;

            $('#day_panel').css( { top: day_panel_top } )


            $('#calendar_buttons').css( { 'z-index': 2 } );

          }



        } 


        // next calendar month

        if ( day_of_month > days_in_this_month ) {

          var day_of_next_month = day_of_month - days_in_this_month;

          // $('#' + div_id).html('<center>' + day_of_next_month + '</center>');

        }


        day_count++;

      }


    }

  }



}



function toggle_calendar_day_state(event, div) {

  // console.log('day is ' + $('#' + div.id).text() );

  var p = div.id.split('_');

  var row = p[1];
  var col = p[3];

  if ( day_state[row][col] == 'off' ) {

    if ( ( ( typeof selected_day ) != 'undefined' )
      && ( selected_day != '' ) ) {
      day_state[selected_day] = 'off';
      $('#' + selected_day_div).css( { 'background-color': '#e7e7e8' } );
    }

    day_state[row][col] = 'on';
    $('#' + div.id).css( { 'background-color': '#b4d5f0' } );

    selected_day = $('#' + div.id).text();
    selected_day_div = div.id;

    selected_day_of_week = days_of_the_week[col];

  } else {

    day_state[row][col] = 'off';
    $('#' + div.id).css( { 'background-color': '#e7e7e8' } );

    if ( selected_day == $('#' + div.id).text() ) {
      selected_day = '';
    }

  }


  update_calendar_date_selection();

}



function get_days_in_each_month() {

  var list = {};

  var days_in_february = 28;


  // today's date

  var currentTime = new Date();
  var month = currentTime.getMonth() + 1;
  var day = currentTime.getDate();
  var year = currentTime.getFullYear();


  var day_of_week = days_of_the_week[currentTime.getDay()];

  var month_name = months_of_the_year[currentTime.getMonth()];

  // console.log('date is ' + month + "/" + day + "/" + year + ', ' + day_of_week + ', ' + month_name)


  // leap year

  var result_of_4         = year / 4;
  var integer_result_of_4 = Math.floor( result_of_4 );

  var result_of_100         = year / 100;
  var integer_result_of_100 = Math.floor( result_of_100 ); 

  var result_of_400         = year / 400;
  var integer_result_of_400 = Math.floor( result_of_400 );

  var divisible_by_4   = 0;
  var divisible_by_100 = 0;
  var divisible_by_400 = 0;

  if ( result_of_4   == integer_result_of_4 )   { divisible_by_4 = 1; }
  if ( result_of_100 == integer_result_of_100 ) { divisible_by_100 = 1; }
  if ( result_of_400 == integer_result_of_400 ) { divisible_by_400 = 1; }


  if ( divisible_by_4 ) {

    if ( divisible_by_100 ) {

      days_in_february = 28;

      if ( divisible_by_400 ) {

        days_in_february = 28;

      }

    }

  }


  list = { 'Jan': 31,
           'Feb': days_in_february,
           'Mar': 31,
           'Apr': 30,
           'May': 31,
           'Jun': 30,
           'Jul': 31,
           'Aug': 31,
           'Sep': 30,
           'Oct': 31,
           'Nov': 30,
           'Dec': 31 };

  return list;

}



function get_previous_month(month) {

  var list;

  list = { 'Jan': 'Dec',
           'Feb': 'Jan',
           'Mar': 'Feb',
           'Apr': 'Mar',
           'May': 'Apr',
           'Jun': 'May',
           'Jul': 'Jun',
           'Aug': 'Jul',
           'Sep': 'Aug',
           'Oct': 'Sep',
           'Nov': 'Oct',
           'Dec': 'Nov' };

  return list[month];

}



/*

  get the starting offset for the first spot on the calendar page

  get the date of last sunday

  subtract 7 from today's date until you get < 1

  that is the offset to add to the number of days in last month

  var day_start = get_starting_offset(calendar_day_of_week, calendar_day, calendar_month, days_in[previous_month]);

*/

function get_starting_offset(day_of_week, day, month) {

  console.log('get_starting_offset, day_of_week is ' + day_of_week + ', day is ' + day + ', month is ' + month);

  var today_index = day_index_of[day_of_week];
  console.log('today_index is ' + today_index + ', ' + day_of_week);

  var last_sunday = day - today_index;
  console.log('last_sunday is ' + last_sunday);


  var starting_offset = last_sunday;

  while ( starting_offset > 1 ) {

    starting_offset -= 7;

  }

  console.log('starting_offset is ' + starting_offset);   

  return starting_offset;

}



function cancel_calendar() {

  $('#calendar_panel').fadeTo(250, 0, function() { 

    $('#calendar_panel').remove();

  } );

}



function add_date_to_paragraph() {

  var paragraph_date = $('#calendar_date_selection').text();

  console.log('add_date_to_paragraph, paragraph_date ' + paragraph_date );

  var d = paragraph_date.split('.');

  var day = d[0];
  var month = d[1];
  var year = d[2];

  if ( day < 10 ) { day = '0' + day; }

  var user_date = year + '-' + get_number_of_month( month ) + '-' + day;

  var user_time = '';


  var current_date = new Date();
  var timezone_offset = parseInt( -current_date.getTimezoneOffset() / 60) + ':00';

  console.log('add_date_to_paragraph, user_date ' + user_date + ', timezone_offset ' + timezone_offset );



  // if ( paragraph_date == '' ) { return; }
  // no error message

  // add last selected day of week


  // var row_id = 'case_input_row_' + global_case_input_info.current_row;

  var row_date_id = 'case_input_row_date_' + global_case_input_info.current_row;


  $('#' + row_date_id).html(paragraph_date);

  if ( typeof( global_case_input_info.events[global_case_input_info.current_row] ) == 'undefined' ) {

    var event_info = {};
    global_case_input_info.events[global_case_input_info.current_row] = event_info;

  }


  // user date, time, and timezone

  // global_case_input_info.events[global_case_input_info.current_row].date = paragraph_date;

  global_case_input_info.events[ global_case_input_info.current_row ].user_date = user_date;
  global_case_input_info.events[ global_case_input_info.current_row ].user_time = user_time;
  global_case_input_info.events[ global_case_input_info.current_row ].user_timezone = timezone_offset;


  adjust_case_input_icons()


  cancel_calendar(); 

}



function todays_date() {

  var currentTime = new Date();

  var current_month = currentTime.getMonth() + 1;
  var current_day   = currentTime.getDate();
  var current_year  = currentTime.getFullYear();

  var current_day_of_week = days_of_the_week[currentTime.getDay()];

  var current_month_name = months_of_the_year[currentTime.getMonth()];

  if ( current_day < 10 ) { current_day = '0' + current_day; }

  // var today = current_day + '.' + current_month_name + '.' + current_year;

  var today = current_year + '-' + current_month_name + '-' + current_day;

  console.log('today is ' + today );
  // Thurs Aug 15, 2013

  return today;

}



function get_time_zone_offset() {

  var current_date = new Date();

  var timezone = parseInt( -current_date.getTimezoneOffset() / 60) + ':00';

  return timezone;

}




function get_number_of_month( month ) {

  var list;

  list = { 'Jan': '01',
           'Feb': '02',
           'Mar': '03',
           'Apr': '04',
           'May': '05',
           'Jun': '06',
           'Jul': '07',
           'Aug': '08',
           'Sep': '09',
           'Oct': '10',
           'Nov': '11',
           'Dec': '12' };

  return list[month];

}



//---- case-create-calendar-touch-functions.js ------------------------------------------------------------------------------------




// case-create-calendar-touch-functions.js

// year and month slider touch move

// year and month toggle

// move calendar day toggle here ?



var global_calendar_ui_year_start_top;

var global_calendar_ui_month_start_top;



// year and month on click, toggle color, set last selected year and month



function bind_calendar_ui_year_events() {

  console.log('bind_calendar_ui_year_events');

  $('#year_slider').on('touchstart', function(event) { calendar_ui_year_touch_start(event); } );
  $('#year_slider').on('touchmove',  function(event) { calendar_ui_year_touch_move(event);  } );

}



function bind_calendar_ui_month_events() {

  console.log('bind_calendar_ui_month_events');

  $('#month_slider').on('touchstart', function(event) { calendar_ui_month_touch_start(event); } );
  $('#month_slider').on('touchmove',  function(event) { calendar_ui_month_touch_move(event);  } );

}



function calendar_ui_year_touch_start(e) {

  // e.preventDefault();

  var touch = e.originalEvent.touches[0];


  touch_move_start.y = touch.pageY;

  global_calendar_ui_year_start_top = parseInt( $('#year_slider').css('top') );

}



function calendar_ui_month_touch_start(e) {

  // e.preventDefault();

  var touch = e.originalEvent.touches[0];


  touch_move_start.y = touch.pageY;

  global_calendar_ui_month_start_top = parseInt( $('#month_slider').css('top') );

}



function calendar_ui_year_touch_move(e) {

  e.preventDefault();

  var touch = e.originalEvent.touches[0];


  var dy = touch.pageY - touch_move_start.y;


  var year_ui_top = global_calendar_ui_year_start_top + dy;

  if ( year_ui_top > 0 ) { year_ui_top = 0; }


  // add height of calendar button bar

  var year_ui_top_min = global_keyboard_height - global_year_slider_height;

  if ( year_ui_top < year_ui_top_min ) { year_ui_top = year_ui_top_min; }


  $('#year_slider').css( { top: year_ui_top } )

}



function calendar_ui_month_touch_move(e) {

  e.preventDefault();

  var touch = e.originalEvent.touches[0];


  var dy = touch.pageY - touch_move_start.y;


  var month_ui_top = global_calendar_ui_month_start_top + dy;

  if ( month_ui_top > 0 ) { month_ui_top = 0; }


  // add height of calendar button bar

  var month_ui_top_min = ( global_keyboard_height - global_calendar_button_row_height ) - global_month_slider_height;

  if ( month_ui_top < month_ui_top_min ) { month_ui_top = month_ui_top_min; }


  $('#month_slider').css( { top: month_ui_top } )

}



function toggle_calendar_month_state(event, div) {

  console.log('toggle_calendar_month_state div ' + div.id);

  var d = div.id.split('_');
  var n = d[2];

  if ( month_state[n] == 'off' ) {

    if ( ( ( typeof selected_month ) != 'undefined' )
      && ( selected_month != '' ) ) {
      month_state[selected_month] = 'off';
      $('#month_slider_' + selected_month).css( { 'background-color': '#e7e7e8' } );
    }

    month_state[n] = 'on';
    $('#' + div.id).css( { 'background-color': '#b4d5f0' } );

    selected_month = n;

    redraw_calendar_page();

  } else {

    month_state[n] = 'off';
    $('#' + div.id).css( { 'background-color': '#e7e7e8' } );

    if ( selected_month == n ) {
      selected_month = '';
    }

  }


  update_calendar_date_selection();

}



function toggle_calendar_year_state(event, div) {

  console.log('toggle_calendar_year_state div ' + div.id);

  var d = div.id.split('_');
  var n = d[2];

  if ( year_state[n] == 'off' ) {

    if ( ( ( typeof selected_year ) != 'undefined' )
      && ( selected_year != '' ) ) {
      year_state[selected_year] = 'off';
      $('#year_slider_' + selected_year).css( { 'background-color': '#e7e7e8' } );
    }

    year_state[n] = 'on';
    $('#' + div.id).css( { 'background-color': '#b4d5f0' } );

    selected_year = n;

    redraw_calendar_page();

  } else {

    year_state[n] = 'off';
    $('#' + div.id).css( { 'background-color': '#e7e7e8' } );

    if ( selected_year == n ) {
      selected_year = '';
    }

  }


  update_calendar_date_selection();

}



function update_calendar_date_selection() {

  var date_string;

  if ( ( selected_day == '' ) || ( selected_month == '' ) || ( selected_year == '' ) ) {

    // date_string = 'not updating ' + selected_day + '.' + months_of_the_year[selected_month] + '.' + selected_year;

    date_string = '';

  } else {

    date_string = selected_day + '.' + months_of_the_year[selected_month] + '.' + selected_year;

  }

  $('#calendar_date_selection').html(date_string);

}



// add timestamp to paragraphs on blur



// get starting offset, day panel html '', draw calendar page


function redraw_calendar_page() {

  if ( ( selected_month == '' ) || ( selected_year == '' ) ) { return; }

  console.log('redraw_calendar_page ' + selected_day + '.' + selected_month + '.' + selected_year);


  // getDay() of the selected day

  var sel_month = parseInt( selected_month ) + 1;
  var sel_day;

  if ( ( selected_day == '' ) || ( selected_day == 0 ) ) {
    sel_day = 1;
  } else {
    sel_day = selected_day;
  }

  console.log('sel day ' + sel_day + '.' + sel_month + '.' + selected_year);


  var selected_day_of_week = new Date(selected_year + '-' + sel_month + '-' + sel_day).getDay();

  console.log('selected_day_of_week ' + days_of_the_week[selected_day_of_week]);


  // var day_start = get_starting_offset(calendar_day_of_week, calendar_day, calendar_month);
  // get_starting_offset, day_of_week is Wed, day is 18, month is Sep 

  var day_start = get_starting_offset( days_of_the_week[selected_day_of_week], sel_day, months_of_the_year[selected_month] );

  var previous_month = get_previous_month( months_of_the_year[selected_month] );

  var days_in_this_month     = days_in[ months_of_the_year[selected_month] ];
  var days_in_previous_month = days_in[previous_month];



  // set selected_day to '' before drawing page ?

  selected_day = '';

  update_calendar_date_selection();


  $('#day_panel').html('');
  // $('#day_panel').remove();

  $('#day_panel').css( { top: 0 } );



  var highlighted_date = 0;

  // if ( ( calendar_year == current_year ) && ( calendar_month == current_month_name ) ) { highlighted_date = current_day; }

  draw_calendar_page(day_start, days_in_previous_month, days_in_this_month, highlighted_date);

}




//---- case-create-category-functions.js ------------------------------------------------------------------------------------




// category options, slide in buttons, fade out case_button_bar, select category and set option for category button

// if width of the category select buttons is greater than screen width, scroll select buttons
// mouseup, touchend, and distance = 0, tap()



var global_category_info = { 'Category':   { 'icon': 'tabeeb-select-category-icon.png',
                                             'width': 13,
                                             'height': 13,
                                             'icon_top': 11,
                                             'event_icon': 'tabeeb-select-event.png'
                                           },

                             'History':    { 'icon': 'tabeeb-history-category-icon.png',
                                             'width': 17,
                                             'height': 13,
                                             'icon_top': 11,
                                             'event_icon': 'tabeeb-history-event.png'
                                           },

                             'Imaging':    { 'icon': 'tabeeb-imaging-category-icon.png',
                                             'width': 14,
                                             'height': 21,
                                             'icon_top': 7,
                                             'event_icon': 'tabeeb-imaging-event.png'
                                           },

                             'Labs':       { 'icon': 'tabeeb-labs-category-icon.png',
                                             'width': 15,
                                             'height': 17,
                                             'icon_top': 9,
                                             'event_icon': 'tabeeb-labs-event.png'
                                           },

                             'Symptom':    { 'icon': 'tabeeb-symptom-category-icon.png',
                                             'width': 13,
                                             'height': 21,
                                             'icon_top': 7,
                                             'event_icon': 'tabeeb-symptom-event.png'
                                           },

                             'Medicine':   { 'icon': 'tabeeb-medicine-category-icon.png',
                                             'width': 11,
                                             'height': 19,
                                             'icon_top': 8,
                                             'event_icon': 'tabeeb-medications-event.png'
                                           },

                             'Condition':  { 'icon': 'tabeeb-condition-category-icon.png',
                                             'width': 19,
                                             'height': 19,
                                             'icon_top': 8,
                                             'event_icon': 'tabeeb-conditions-event.png'
                                           },

                             'Diagnosis':  { 'icon': 'tabeeb-diagnosis-category-icon.png',
                                             'width': 12,
                                             'height': 19,
                                             'icon_top': 8,
                                             'event_icon': 'tabeeb-diagnosis-event.png'
                                           }

                           };



var global_category_list = [ 'History', 'Imaging', 'Labs', 'Symptom', 'Medicine', 'Condition', 'Diagnosis' ];

var global_category_ui_width;



function show_category_options(width, height) {

  console.log('show_category_options');


  // fade button bar, set display to none

  $('#case_button_bar').fadeTo(200, 0, function() { 

    $('#case_button_bar').css( { 'display': 'none' } );

  } );


  // show category bar

  // $('#category_ui').show();


  // set top to case button bar height

  var case_button_bar_height = $('#case_button_bar').height();

  $('#category_ui').css( { top: ( 0 - case_button_bar_height ) } );


  // slide in category select buttons

  var category_ui_height = parseInt( $('#category_ui').css('height') );

  $('#category_ui').animate( { 'top': '+=' + category_ui_height,
                               'opacity': 1 }, 350 );

}



function set_category(button) {

  var b = button.id.split('_');

  var num = b[2];

  var category = global_category_list[num];

  console.log('set category to ' + category);


  var current_row = global_case_input_info.current_row;

  console.log('global case info current paragraph is ' + current_row);


  // set icon from global info

  var event_icon = global_category_info[category].event_icon;

  console.log('event icon for paragraph is ' + event_icon);


  if ( ( typeof global_case_input_info.events[current_row] ) == 'undefined') {
    var paragraph_info = {};
    global_case_input_info.events[current_row] = paragraph_info;
  }


  // set icon and category, compare with current

  var set_icon;
  var set_category;

  if ( global_case_input_info.events[current_row].type == category ) {

    console.log('current row category is already set to ' + category);

    set_icon = 'tabeeb-select-event.png';
    set_category = 'Category';

  } else {

    console.log('set current row to ' + category);

    set_icon = event_icon;
    set_category = category;

  }

  console.log('current row icon is ' + global_case_input_info.events[current_row].icon + ', set to ' + set_icon);
  console.log('current row type is ' + global_case_input_info.events[current_row].type + ', set to ' + set_category);


  global_case_input_info.events[current_row].icon = set_icon;
  global_case_input_info.events[current_row].type = set_category;



  // add icon to current div paragraph
  // set case input div icon 

  var icon_div = $('#case_input_row_icon_' + current_row);

  icon_div.html('<img src="' + set_icon + '"></img>');



  // set category button icon, width, height, top, and text

  $('#case_category_button_icon').attr('src', global_category_info[set_category].icon);

  var icon_width        = Math.floor(case_button_bar_height * ( global_category_info[set_category].width / 52 ) );
  var icon_height       = Math.floor(case_button_bar_height * ( global_category_info[set_category].height / 52 ) );
  var icon_padding_top  = Math.floor(case_button_bar_height * ( global_category_info[set_category].icon_top / 52 ) );

  $('#case_category_button_icon').css( { 'width': icon_width, 
                                         'height': icon_height,
                                         'padding-top': icon_padding_top } ); 

  $('#case_category_selected').html(set_category);


  close_category_ui();


  /* 

  console.log('close the category ui');

  // set case button bar to display: block

  $('#case_button_bar').css( { 'display': 'block' } );


  // slide the category buttons down by the height of the bar

  var category_ui_height = parseInt( $('#category_ui').css('height') );


  // slide category buttons off, fade in case button bar

  $('#case_button_bar').fadeTo(200, 1);

  $('#category_ui').animate( { 'top': '-=' + category_ui_height,
                               'opacity': 0 }, 350 );


  // set the category ui back to the left side

  // $('#category_ui').css( { left: 0 } );

  */


}



function create_category_ui_div(width, height, bar_height) {

  // console.log('create_category_ui_div');

  // category ui background

  $('body').append('<div id="category_ui_container"></div>');

  var bar_top = height - bar_height;

  var ui_css = { 'position': 'absolute',
              // 'top': bar_top,
                 'top': 0,
                 'left': 0,
                 'width': width,
                 'height': bar_height,
                 'background-color': '#292526' };

  $('#category_ui_container').css(ui_css);



  // button bar, slide in from right side ?

  $('#category_ui_container').append('<div id="category_ui"></div>');

  var ui_css = { 'position': 'absolute',
                 'top': bar_height,
                 'left': 0,
                 'width': width,
                 'height': bar_height,
                 'background-color': '#292526',
                 'opacity': 0 };

  $('#category_ui').css(ui_css);



  // category buttons

  // width - left margin / number of buttons, fixed spacing

  var left_margin        = Math.floor(bar_height * 2.0384);
  var button_width       = Math.floor(bar_height * 2.0961);
  var button_padding_top = Math.floor(bar_height * 0.1900);
  var button_height      = Math.floor(bar_height * 0.6730);
  var button_spacing     = Math.floor(bar_height * 0.1923);
  var button_top         = Math.floor(bar_height * 0.1538);

  if ( ! is_mobile ) { 

    button_width = button_width + 20;

    button_padding_top = button_padding_top * 0.6;

  }

  var button_font_size = 17

  // set global button font size, text size, in init_page instead of in the button create ?


  global_category_ui_width = left_margin + ( ( button_width + button_spacing ) * global_category_list.length );

  console.log('global_category_ui_width ' + global_category_ui_width);


  for (var i = 0; i < global_category_list.length; i++) {

    var category_name = global_category_list[i];
    var div_id = 'category_button_' + i;
    var button_left = left_margin + ( ( button_width + button_spacing ) * i );


    $('#category_ui').append('<div id="' + div_id + '"><center>' + category_name + '</center></div>');

    $('#' + div_id).css( { 'position': 'absolute',
                           'top': button_top,
                           'left': button_left,
                           'width': button_width,
                           'height': button_height,
                           'background-color': '#d2d3d5',
                           'border-radius': 4,
                           'color': '#515254',
                           'font-family': 'Droid Sans',
                           'font': button_font_size + 'px "Droid Sans", sans-serif' } );


    // icon and text for each button

    var icon              = global_category_info[category_name].icon;
    var icon_width        = Math.floor(bar_height * ( global_category_info[category_name].width / 52 ) );
    var icon_height       = Math.floor(bar_height * ( global_category_info[category_name].height / 52 ) );
    var icon_padding_top  = Math.floor(bar_height * ( global_category_info[category_name].icon_top / 52 ) );
    var text_padding_left = Math.floor(bar_height * 0.1538);


    // info div is table row

    $('#' + div_id).html('<center><div id="category_button_' + i + '_info" style="display: table-row"></div></center>');


    // icon and name divs are table cell

    $('#category_button_' + i + '_info').html('<div style="display: table-cell;">'
                                            +     '<div><img id="category_button_' + i + '_icon" src="' + icon + '"></img></div>'
                                            + '</div>'
                                            + '<div style="display: table-cell; vertical-align: top;">'
                                            +     '<div id="category_button_' + i + '_name">' + category_name + '</div>'
                                            + '</div>');

    $('#category_button_' + i + '_icon').css( { 'width': icon_width, 
                                                'height': icon_height,
                                                'padding-top': icon_padding_top } );

    $('#category_button_' + i + '_name').css( { 'padding-left': text_padding_left,
                                                'padding-top': button_padding_top
                                              } );

    $('#' + div_id).on('click', function() { set_category(this); } );


  }


  // close button

  $('#category_ui').append('<div id="category_close_button_1"></div>');
  $('#category_ui').append('<div id="category_close_button_2"></div>');

  var ccb_height = Math.floor( bar_height * 0.11 );
  var ccb_width  = Math.floor( bar_height * 0.5 );
  var ccb_top    = ( bar_height / 2 ) - ( ccb_height / 2 );
  var ccb_left   = Math.floor( ccb_top * 1.2 );

  var ccb1 = { 'position': 'absolute',
               'top': ccb_top,
               'left': ccb_left,
               'width': ccb_width,
               'height': ccb_height,
               'transform': 'rotate(45deg)',
               'background-color': '#aaaaaa' };

  var ccb2 = { 'position': 'absolute',
               'top': ccb_top,
               'left': ccb_left,
               'width': ccb_width,
               'height': ccb_height,
               'transform': 'rotate(-45deg)',
               'background-color': '#aaaaaa' };

  $('#category_close_button_1').css( ccb1 );
  $('#category_close_button_2').css( ccb2 );

  $('#category_close_button_1').on('touchstart click', function() { close_category_ui(); } );
  $('#category_close_button_2').on('touchstart click', function() { close_category_ui(); } );


  bind_category_ui_events();


  $('#category_ui').css( { top: ( 0 - bar_height ) } );

}



function close_category_ui() {

  console.log('close_category_ui');


  $('#case_button_bar').css( { 'display': 'block' } );


  // slide the category buttons down by the height of the bar

  var category_ui_height = parseInt( $('#category_ui').css('height') );


  // slide category buttons off, fade in case button bar

  $('#case_button_bar').fadeTo(200, 1);

  $('#category_ui').animate( { 'top': '-=' + category_ui_height,
                               'opacity': 0 }, 350 );

}



function set_case_input_category_button(current_row) {

  // set the category button icon on focus of each paragraph

  console.log('set case input category button, current row is ' + current_row);


  // bar height 

  var case_button_bar_height = parseInt( $('#case_button_bar').css('height') );

  // console.log('case button bar height is ' + case_button_bar_height);


  // check global info object for category icon

  var category_selected;

  if ( ( typeof global_case_input_info.events[current_row] ) == 'undefined') {
    category_selected = 'Category';
  } else {
    category_selected = global_case_input_info.events[current_row].type;
  }

  if ( ( typeof category_selected ) == 'undefined' ) { category_selected = 'Category'; }



  console.log('set case input category button, category is ' + category_selected);

  var icon = global_category_info[category_selected].icon;

  console.log('set case input category button, icon is ' + icon);
  
  // icon sizes

  $('#case_category_button_icon').attr('src', icon);

  var icon_width        = Math.floor(case_button_bar_height * ( global_category_info[category_selected].width / 52 ) );
  var icon_height       = Math.floor(case_button_bar_height * ( global_category_info[category_selected].height / 52 ) );
  var icon_padding_top  = Math.floor(case_button_bar_height * ( global_category_info[category_selected].icon_top / 52 ) );

  $('#case_category_button_icon').css( { 'width': icon_width,
                                         'height': icon_height,
                                         'padding-top': icon_padding_top } );

  // console.log('width is ' + icon_width);
  // console.log('height is ' + icon_height);

  $('#case_category_selected').html(category_selected);

}



//---- case-create-category-touch-functions.js ------------------------------------------------------------------------------------




// case-create-category-touch-functions.js



var global_category_ui_start_left;




function bind_category_ui_events() {

  console.log('bind_category_ui_events');

  $('#category_ui').on('touchstart', function(event) { category_ui_touch_start(event); } );
  $('#category_ui').on('touchmove',  function(event) { category_ui_touch_move(event);  } );

}




function category_ui_touch_start(e) {

  // e.preventDefault();

  var touch = e.originalEvent.touches[0];


  touch_move_start.x = touch.pageX;

  global_category_ui_start_left = parseInt( $('#category_ui').css('left') );

}



function category_ui_touch_move(e) {

  e.preventDefault();

  var touch = e.originalEvent.touches[0];


  var dx = touch.pageX - touch_move_start.x;


  var category_ui_left = global_category_ui_start_left + dx;

  if ( category_ui_left > 0 ) { category_ui_left = 0; }


  var category_ui_left_min = global_screen_width - global_category_ui_width;

  if ( category_ui_left < category_ui_left_min ) { category_ui_left = category_ui_left_min; }


  $('#category_ui').css( { left: category_ui_left } )

}




function category_ui_touch_end(e) {

}





//---- case-create-tag-functions.js ------------------------------------------------------------------------------------



// case-create-tag-functions.js



// same setup as select patient

// tags list shows case tags



var global_create_case_tags_edit_flag = 0;



function create_case_add_tags() {

  console.log('create case, add tags');
  console.log('global_last_row_selected ' + global_last_row_selected );

  // last event selected is case events event selection
  // last row selected is case input divs
  // console.log('global_last_event_selected ' + global_last_event_selected );



  // add shade div

  $('body').append('<div id="add_tags_shade"></div>');

  $('#add_tags_shade').css( { position: 'absolute',
                              top: 0,
                              left: 0,
                              width: $(window).width(),
                              height: $(window).height(),
                             'background-color': '#000000',
                              opacity : 0 } );

  $('#add_tags_shade').on('click', function() {

    // $('#add_tags_shade').remove();
    // $('#add_tags_div').remove();

    // set last selected row to gray when closing tags div ?

    if ( typeof( global_last_row_selected != 'undefined' ) ) {
      $('#' + global_last_row_selected).css( { color: '#b3b4b6' } );
    }


    global_create_case_tags_edit_flag = 0;


    // compare tags div to case input tags

    check_create_case_tags();

  } );

  $('#add_tags_shade').fadeTo(200, 0.3);



  // set last selected row to black, hide category buttons

  // display tags on that row

  if ( typeof( global_last_row_selected != 'undefined' ) ) {
    $('#' + global_last_row_selected).css( { color: '#000000' } );
  }



  // hide buttons if they are showing

  if ( global_button_has_focus || global_icon_has_focus ) {

    global_icon_has_focus = 0;
    global_button_has_focus = 0;

    /*

    $('#take_a_photo_button').hide();
    $('#attach_a_photo_button').hide();
    $('#calendar_button').hide();
    $('#category_button').hide();

    */

  }



  // tags div
  // appended to body at the offset of the comments column

  var comments_width = $('#case_comments').width();

  var tags_position_left = $('#add_tags').position().left;
  var tags_offset_left   = $('#add_tags').offset().left;

  var add_tags_left_padding = tags_position_left;
  var add_tags_width        = comments_width - ( tags_position_left * 4 );


  // tags bottom, tags top + tags height

  var tags_top    = $('#add_tags').offset().top;
  var tags_height = parseInt( $('#add_tags').outerHeight() );

  var add_tags_top           = tags_top + ( tags_height * 2 );
  var case_button_bar_height = $('#case_button_bar').height();
  var add_tags_height        = global_screen_height - ( add_tags_top + case_button_bar_height + ( add_tags_left_padding * 2 ) );

  var button_font_size = 16;


  $('body').append('<div id="add_tags_div"></div>');

  var atd_css = { position: 'absolute',
                  top: add_tags_top,
                  left: tags_offset_left,
                  width: add_tags_width,
                  height: add_tags_height,
                  padding: add_tags_left_padding,
                 'border-radius': 4,
                 'box-shadow': '0px 0px 5px 4px #2b4d5b',
                 'background-color': '#ffffff',
                 'font-family': 'Droid Sans',
                  font: button_font_size + 'px "Droid Sans", sans-serif' };

  $('#add_tags_div').css( atd_css );



  // global case input info tags

  if ( ( typeof global_case_input_info.tags ) != 'undefined' ) {

    if ( ( typeof global_case_input_info.tags[0] ) != 'undefined' ) {

      $('#add_tags_div').html( global_case_input_info.tags[0].word );

      for ( var j in global_case_input_info.tags ) {

        if ( j == 0 ) { continue; }

        $('#add_tags_div').append(', ' + global_case_input_info.tags[j].word );

      }

    }

  }


  $('#add_tags_div').on('click', function () { edit_create_case_tags(); } )

}



function check_create_case_tags() {

  // compare tags listed to case tags

  // if tags were added, check mongo for the tag
  //   append tag info to case tags

  // if tags were removed, remove the tag from case tags and event tags


  // this should be global

  var tab_api_exacturl = '/tab_api/searchexact/test_tags_data/';



  var tags_div_text = $('#add_tags_div').text();

  console.log('tags_div_text ' + tags_div_text);


  $('#add_tags_shade').remove();
  $('#add_tags_div').remove();


  // split tags on comma

  // remove spaces

  // found tag hash, copy of case input info tags, set to not found before loop

  // loop sets to found

  // if tag not found, add it

  // check for any not found


  var tags_list = tags_div_text.split(',');

  var found_tags = {};

  var new_tags = [];

  var deleted_tags = [];



  // copy of case input info tags
  // global_case_input_info.tags 
  // tags button should be grayed out until the tags have finished

  if ( ( typeof global_case_input_info.tags ) != 'undefined' ) {

    for ( var j in global_case_input_info.tags ) {

      found_tags[ global_case_input_info.tags[j].word ] = 'not found';

    }

  }


  // compare tags_list to found_tags

  for ( var i in tags_list ) {

    tags_list[i] = tags_list[i].replace(/^\s+|\s+$/g,'');

    if ( ( typeof found_tags[ tags_list[i] ] ) != 'undefined' ) {

      found_tags[ tags_list[i] ] = 'found';

    } else {

      new_tags.push( tags_list[i] );

    }

  }


  // are any tags still not found

  for ( var k in found_tags ) {

    if ( found_tags[k] == 'not found' ) {

      deleted_tags.push( k );

    }

  }



  // check mongo for new tags

  for ( var n in new_tags ) { 

    console.log('new tag ' + new_tags[n]); 

    var url = tab_api_exacturl;
    url = url.concat( new_tags[n] );

    var new_tag = new_tags[n];

    // check mongo and add new tag object, or add tag as word

    get_new_tag_from_mongo(url, new_tag);

  }



  // remove object from global input info tags for deleted tags

  for ( var d in deleted_tags ) { 

    console.log('deleted tag ' + deleted_tags[d]); 

    for ( var g in global_case_input_info.tags ) {

      if ( global_case_input_info.tags[g].word == deleted_tags[d] ) {

        global_case_input_info.tags.splice(g, 1);

      }

    }

  }


}



function edit_create_case_tags() {

  if ( global_create_case_tags_edit_flag == 1 ) { return; }

  global_create_case_tags_edit_flag = 1;


  // $('#add_tags_div').css( { 'background-color': '#aabbaa' } );


  var tags_div_text = $('#add_tags_div').text();

  // console.log('tags_div_text ' + tags_div_text);


  // add a comma to the end of tags div

  if ( tags_div_text != '' ) {

    tags_div_text += ', ';

    $('#add_tags_div').html( tags_div_text );

  }


  // set tags div editable

  $('#add_tags_div').attr('contentEditable', 'true');


  // set cursor to the end of the text, 
  // clicking on the div puts the cursor at the end

}





function get_new_tag_from_mongo(url, new_tag) {

  $.get(url, function(data) {

    console.log('get new tag, url is ' + url + ', new_tag is ' + new_tag + ', data is ' + JSON.stringify(data) );

    if ( ( typeof data[0] ) != 'undefined' ) {

      for ( var d in data ) {

        var tags_item = {};

        tags_item.word     = data[d].name;
        tags_item.id       = data[d]._id;
        tags_item.types    = data[d].tag;
        tags_item.tag_data = data[d].tag_data;

        global_case_input_info.tags.push( tags_item );

      }

    } else {

      // push tag to case input tags without data

      global_case_input_info.tags.push( { word: new_tag } );

    }


  });

}



//---- Tag_Check.js ------------------------------------------------------------------------------------




// tag check object, queues, intervals



function Tag_Check( div_id ) {

 
  var text_area_events = 'keypress blur paste change';


  var timeout;
  
  
  var previous_text = '';
  
  
  var unique_words = [];
  
  var sentence_list = [];
  
  
  var tag_check_word_queue = [];
  
  var tag_check_word_queue_interval;
  
  
  var tag_check_sentence_queue = [];
  
  var tag_check_sentence_queue_interval;
  


  
  bind_check( div_id );




  // check calls the tag functions


  function bind_check( div_id ) {
  
    $('#' + div_id).bind(text_area_events, function(event) {
  
      if ( /blur/.test(event.type) ) {

        // $('#activity').html('active');
  
        if (timeout) clearTimeout(timeout);
  
        timeout = setTimeout(function() { check_for_new_text( div_id ); }, 3000);
  
      }
  
    });
  
  
  }



  function check_for_new_text( div_id ) {
  
    var current_text = $('#' + div_id).text();
 
    // $('#current_text').html('current text: ' + current_text);
    // $('#previous_text').html('previous text: ' + previous_text);
  
    if (current_text == previous_text) {
  
      // $('#activity').html('no new text');
      // setTimeout(function() { $('#activity').html('idle'); }, 1000);


      // set global flag here for tagging done
  
      return;
  
    }
  
    previous_text = current_text;
  
    // $('#activity').html('new text found');
  
  
  
    var new_sentences = check_for_new_sentences(current_text.split(/[\.;?]/));
  
    // display_sentence_list();
  
    for (var i in new_sentences) {
      tag_check_sentence_queue.push(new_sentences[i]);
    }
  
    // display_tag_check_sentence_queue();
  
    start_tag_check_sentence_queue_handler();
  
  
  
    for (var s in new_sentences) {
  
      var new_tag_words = new_sentences[s].split(/[\s\.]+/);
  
      for (var i in new_tag_words) {
        tag_check_word_queue.push(new_tag_words[i]);
      }
  
    }
  
    // display_tag_check_word_queue();
  
    start_tag_check_word_queue_handler();
  
  
  
    // setTimeout(function() { $('#activity').html('idle'); }, 1000);
  
  }
  
  
  
  
  function check_for_new_sentences(sentences) {
  
    var new_sentences = [];
  
    var sentences_match = 1;
  
  
    for (var i in sentences) {
  
      sentences[i] = sentences[i].trim();
  
      if (sentences[i] != '') {
  
        var sentence_found = 0;
  
        for (var j in sentence_list) {
          if (sentences[i] == sentence_list[j]) { sentence_found = 1; }
        }
  
        if (sentence_found === 0) {
          sentences_match = 0;
          new_sentences.push(sentences[i]);
          sentence_list.push(sentences[i]);
        }
  
      }
  
    }
  
  
    if ((sentence_list.length == sentences.length) && (sentences_match == 1)) {
      console.log('check sentence tags, sentences match previous sentences');
      return;
    }
  
    return new_sentences;
  
  }
 
 
  
  
  function display_sentence_list() { $('#sentence_list').html('sentence list: ' + sentence_list); }
  
  
  
  function display_spell_check_queue() { 
  
    $('#spell_check_queue').html('spell check queue: '); 
  
    for (var i in spell_check_queue) {
      if (i > 0) { $('#spell_check_queue').append(', '); }
      $('#spell_check_queue').append(spell_check_queue[i]);
    }
  
  }
  
  
  
  function display_tag_check_word_queue() { 
  
    $('#tag_check_word_queue').html('tag check word queue: '); 
  
    for (var i in tag_check_word_queue) {
      if (i > 0) { $('#tag_check_word_queue').append(', '); }
      $('#tag_check_word_queue').append(tag_check_word_queue[i]);
    }
  
  }
  
  
  
  function display_tag_check_sentence_queue() { $('#tag_check_sentence_queue').html('tag check sentence queue: ' + tag_check_sentence_queue); }
  
  
  
  
  function start_tag_check_word_queue_handler() { tag_check_word_queue_interval = setInterval(function() { process_tag_check_word_queue(); }, 400); }
  
  function process_tag_check_word_queue() {
  
    var word = tag_check_word_queue.shift();
  
    if (tag_check_word_queue.length == 0) {
      clearInterval(tag_check_word_queue_interval);
    }
  
    check_word_tags_for(word);
  
    display_tag_check_word_queue();
  
  }
  
  
  
  
  function start_tag_check_sentence_queue_handler() { tag_check_sentence_queue_interval = setInterval(function() { process_tag_check_sentence_queue(); }, 1000); }
  
  function process_tag_check_sentence_queue() {
  
    var sentence = tag_check_sentence_queue.shift();
  
    if (tag_check_sentence_queue.length == 0) {
      clearInterval(tag_check_sentence_queue_interval);
    }
  
    check_sentence_tags_in(sentence);
  
    display_tag_check_sentence_queue();
  
  }
  
  
  
  
  
  // var tab_api_exacturl = '/tab_api/searchexact/tags/';
  // var tab_api_exacturl = '/tab_api/searchexact/test_tags/';
  var tab_api_exacturl = '/tab_api/searchexact/test_tags_data/';
  
  
  var dictionary_tag_list = [];
  var encyclopedia_tag_list = [];
  var substance_tag_list = [];
  var condition_tag_list = [];
  var disease_tag_list = [];
  var test_tag_list = [];
 

  // push tags to global case input info events[i] tags

  // check case tags for existing tag ?  push to case tags also

  console.log('start_tag_check_sentence_queue_handler div_id ' + div_id);

  var d = div_id.split('_');
  var i = d[3];

  var this_event = global_case_input_info.events[i];


  var global_tags = {};
  
  var global_case_tags = [];
  
  
  
  var tag_check_sentence_api_queue = [];
  
  var tag_check_sentence_api_queue_interval;
  
  var tag_check_sentence_api_queue_state = 'stopped';
  
  
  
  function check_sentence_tags_in(sentence) {
  
    var charactersToRemove = 2;
  
    console.log('check sentence tags, sentence is ' + sentence);
  
    var words = sentence.split(" ");
  
    for (var w = 0; w < (words.length - 1); w++) {
  
      var data = {};
  
      var nextWord = words[w+1];
      var nextLength = nextWord.length;
  
      var searchWord;
  
      if (nextWord.length < 4) {
        searchWord = words[w] + ' ' + nextWord.substring(0, 2) + '.*';
      } else {
        searchWord = words[w] + ' ' + nextWord.substring(0, (nextLength - charactersToRemove)) + '.*';
      }
  
      searchWord = searchWord.replace(/\(/g, '.').replace(/\)/g, '.');
  
      console.log('check sentence tags, checking tab_api for \'' + words[w] + ' ' + nextWord + '\', search string is ' + searchWord);
  
      var url = tab_api_exacturl;
      url = url.concat(searchWord);
  
      data.w = w;
      data.url = url;
      data.words = words;
      data.search_words = words[w] + ' ' + words[w+1];
  
      tag_check_sentence_api_queue.push(data);
  
    }
  
    start_tag_check_sentence_api_queue_handler();
  
    // display_tag_check_sentence_api_queue();
  
    console.log('check sentence tags, end');
  
  }
  
  
  
  function get_sentence_search_words_data(w, url, words) {
  
    $.ajax({ type: "GET",
              url: url,
            cache: false,
          success: function(data) {
  
        console.log('get sentence search word data, url is ' + url + ' and data is ' + data);
  
        if (data != '[]') { compare_regex_to_search_results(data, words, w); }
  
      }
  
    });
  
  }
  
  
  
  function compare_regex_to_search_results(data, words, w) {
  
    var maxWordsAhead = 8;
    var charactersToRemove = 2;
  
    var longestStrings = [];
  
    // var json_data = JSON.parse(data);
    var json_data = data;
  
    var regexWords = words[w].replace(/\(/g, '\\(').replace(/\)/g, '\\)');
  
  
    for (var i = (w + 1); i < (w + maxWordsAhead); i++) {
  
      if (i >= words.length) { continue; }
  
      var wLength = words[i].length;
      var wPos = wLength - charactersToRemove;
  
      if (wPos < 2) { wPos = 2; }
  
      var newRegex = regexWords.concat(' ' + words[i].substring(0, wPos).replace(/\(/g, '\\(').replace(/\)/g, '\\)') + '[^ ]*');
      regexWords = newRegex;
  
      console.log('compare regex to search, regex ' + regexWords);
  
      $.each(json_data, function(key, val) {
  
        if (
             ( val.name.match(new RegExp('^' + regexWords + '$', 'i')) )
          || ( val.name.match(new RegExp('^' + regexWords + '\\s+[\\[\\(]', 'i')) )
           ) {
  
          console.log('compare regex to search, ----> ' + val.name + ', ' + val.tag);
  
          var already_listed = 0;
  
          $.each(longestStrings, function(k, v) {
            if ( (v.word == val.name)
              && (v.tags  === val.tag)
               ) { already_listed = 1; console.log('compare regex to search,       ' + val.name + ', ' + val.tag + ', is already in longestStrings'); }
          });
  
          if (already_listed == 0) {
            longestStrings.push({
              word: val.name,
                id: val._id,
              tags: val.tag,
          tag_data: val.tag_data
            });
          }
  
        } 
  
      });
  
    }
  
  
    if (longestStrings.length > 0) {
      console.log('compare regex to search, longestStrings is ' + JSON.stringify(longestStrings));
      parse_sentence_results(longestStrings);
    }
  
  }
  
  
  
  function check_word_tags_for(word) {
  
    var url = tab_api_exacturl;
    url = url.concat(word);
  
    console.log('check word tags, url is ' + url);
  
    $.get(url, function(data) { 

      if (data != "[]") {

        console.log('check word tags, data is ' + JSON.stringify(data) ); 

        parse_word_tag_results(data); 

      }

    });
  
  }
  
  
  
  function parse_sentence_results(data) {
  
    var sentence_tag_results = [];
  
    $.each(data, function(key, val) {
      sentence_tag_results.push({
        word: val.word,
          id: val.id,
        tags: val.tags,
    tag_data: val.tag_data
      });
    });
  
    if (sentence_tag_results.length > 0) {
      display_tag_results(sentence_tag_results);
    }
  
  }
  
  
  
  function parse_word_tag_results(data) {
  
    var word_tag_results = [];
  
    // var json_result = JSON.parse(data);
    var json_result = data;
  
    $.each(json_result, function(key, val) {
      word_tag_results.push({
        word: val.name,
          id: val._id,
        tags: val.tag,
    tag_data: val.tag_data
      });
    });
  
    if (word_tag_results.length > 0) {
      display_tag_results(word_tag_results);
    }
  
  }
  
  
      
  function display_tag_results( tag_results ) {
 
    var d = div_id.split('_');
    var e = d[3];

    this_event = global_case_input_info.events[e];


    // get list of common words to remove from tags returned

    var stop_word = get_stop_word_list();

 
    for ( var i in tag_results ) {
 
      // set variables to fields of tag i
      // use the lowercase name instead of the id
      // set the tag to lowercase also
 
      var r        = tag_results[i], 
       // word     = r.word,
          word     = r.word.toLowerCase(),
       // id       = r.id,
          id       = r.word.toLowerCase(),
          types    = r.tags,
          tag_data = r.tag_data;


      // check stop words, done if the tag is a stop word

      var is_stop_word = 0;

      for ( var s in stop_word ) {
        if ( word == stop_word[s] ) { is_stop_word = 1; }
      }

      if ( is_stop_word == 1 ) { continue; }


      // tag results might have more than one tag with the same name, after lowercase
      // push types and tag data onto arrays of object with the lowercase name
      // change id to lowercase name, id = index name
      // if typeof global tags [ id ] is undefined, add it
      // if not, append tags data and type
      // check event tags and case tags after that, increment count if exists

      console.log('display_tag_results div_id word, id, ' + div_id + ', ' + word + ', ' + id);


      // display tag loading in tags div

      // append_tag_animation ( word );


      // create global tags entry if not defined
      // append tags and tag data if defined

      if ( ( typeof global_tags[id] ) == 'undefined' ) {
  
        var global_tag_item = {};
  
        global_tag_item.word = word;
        global_tag_item.id = id;
        global_tag_item.types = [];
        global_tag_item.tag_data = {};
  
        global_tags[id] = global_tag_item;
 
        append_tag_animation ( id );

      } else {

        // push each tag if not already listed, and each tag_data item

        for ( var type in types ) {

          var type_found = 0;

          for ( var g_type in global_tags[id].types ) {

            if ( types[ type ] == global_tags[id].types[ g_type ] ) { 
              type_found = 1;
            }

          }

          if ( type_found == 0 ) { 
            global_tags[id].types.push( types[ type ] );
          }


          // array for tags.tag_data.type might not exist

          if ( ( typeof global_tags[id].tag_data[ types[ type ] ] ) == 'undefined' ) {
            var tag_array = [];
            global_tags[id].tag_data[ types[ type ] ] = tag_array;
          }

          global_tags[id].tag_data[ types[ type ] ].push( tag_data[ types[ type ] ] );

        }

      }


      // tags have to have count info for weighting
      // this is only adding the tags that aren't in the global tags hash yet

      if ( ( typeof this_event ) == 'undefined' ) {
        var event_object = {};
        this_event = event_object;
      }

      if ( ( typeof this_event.tags ) == 'undefined' ) {
        var tag_array = [];
        this_event.tags = tag_array;
      }


      // check event tags for tag already listed, increment count if so
      // this_event.tags[i].word, global_tag_item.word

      var e_tag_found = -1;

      for ( var w in this_event.tags ) {

        if ( this_event.tags[w].word == global_tag_item.word ) { e_tag_found = w; }

      }

      if ( e_tag_found != -1 ) {

        if ( ( typeof this_event.tags[ e_tag_found ].count ) != 'undefined' ) {
          this_event.tags[ e_tag_found ].count++;
        } else {
          this_event.tags[ e_tag_found ].count = 2;
        }

      } else {

        this_event.tags.push( global_tag_item );

      }


      // check case input tags for tag already listed, increment 
      // global_case_input_info.tags[i].word, global_tag_item.word

      var g_tag_found = -1;

      for ( var v in global_case_input_info.tags ) {

        if ( global_case_input_info.tags[v].word == global_tag_item.word ) { g_tag_found = v; }

      }


      if ( g_tag_found != -1 ) {

        if ( ( typeof global_case_input_info.tags[ g_tag_found ].count ) != 'undefined' ) {
          global_case_input_info.tags[ g_tag_found ].count++;
        } else {
          global_case_input_info.tags[ g_tag_found ].count = 2;
        }

      } else {

        global_case_input_info.tags.push( global_tag_item );

      }

 
      // add tags to lists named with the type
      // types are pushed to the global tags item if defined, earlier
 
      for (var t in types) {
  
        global_tags[id].types.push(types[t]);
        global_tags[id].tag_data[types[t]] = tag_data[types[t]];
  
        var tag_item = {};
        tag_item.word = word;
        tag_item.count = 1;
        tag_item.div_id = id + '_' + types[t];
  
  
        if (types[t] == "dictionary") {
          add_tag_to_list(dictionary_tag_list, tag_item);
          display_tag_div(dictionary_tag_list, '#dic_list', 'dictionary');
        }
  
        if (types[t] == "encyclopedia") {
          add_tag_to_list(encyclopedia_tag_list, tag_item);
          display_tag_div(encyclopedia_tag_list, '#enc_list', 'encyclopedia');
        }
  
        if (types[t] == "substances") {
          add_tag_to_list(substance_tag_list, tag_item);
          display_tag_div(substance_tag_list, '#sub_list', 'substances');
        }
  
        if (types[t] == "conditions") {
          add_tag_to_list(condition_tag_list, tag_item);
          display_tag_div(condition_tag_list, '#con_list', 'conditions');
        }
  
        if (types[t] == "diseases") {
          add_tag_to_list(disease_tag_list, tag_item);
          display_tag_div(disease_tag_list, '#dis_list', 'diseases');
        }
  
        if (types[t] == "tests") {
          add_tag_to_list(test_tag_list, tag_item);
          display_tag_div(test_tag_list, '#tes_list', 'tests');
        }
  
      }
  
    }
  
  }
  
  
  
  function add_tag_to_list(list, tag_item) {
  
    var item_found = 0;
  
    for (var i in list) {
  
      if (list[i].word == tag_item.word) {
        item_found = 1;
        list[i].count++;
      }
  
    }
  
    if (item_found == 0) {
      list.push(tag_item);
    }
  
  }
  
  
  
  function display_tag_div(list, div_name, category) {
  
    $(div_name).html(category);
  
    var sorted_list = list.sort(compare_tag_items);
  
    for (var i in sorted_list) {
  
      var tag_name = sorted_list[i].word;
  
      var div_id = sorted_list[i].div_id;
  
  
      var id_fields = div_id.split('_');
  
      var id       = id_fields[0];
      var category = id_fields[1];
  
  
      $(div_name).append('<div class="tag_div" title="' + tag_name + '" id="' + div_id + '" onclick="show_tag_info(\'' + id + '\', \'' + category + '\')" ondblclick="add_tag_to_case(\'' + id + '\', \'' + category + '\')">(' + sorted_list[i].count + ') ' + tag_name + '</div>');
  
      if (sorted_list[i].count == 2) { $('#' + div_id).css('background', '#d8d8d8'); }
      if (sorted_list[i].count == 3) { $('#' + div_id).css('background', '#b8b8b8'); }
      if (sorted_list[i].count == 4) { $('#' + div_id).css('background', '#989898'); }
      if (sorted_list[i].count == 5) { $('#' + div_id).css('background', '#787878'); }
      if (sorted_list[i].count > 5)  { $('#' + div_id).css('background', '#585858'); }
  
    }
  
  }
  
  
  
  
  function show_tag_info(id, category) {
  
    $('#tag_data_buttons_div').html('<input type="button" value="add to case" onclick="add_tag_to_case(\'' + id + '\', \'' + category + '\');" style="width: 100px;"> <input type="button" value="remove from case" onclick="remove_tag_from_case(\'' + id + '\', \'' + category + '\');" style="width: 140px;">');
  
    // table with column for buttons
  
    $('#tag_data_div').html('');
  
    $('#tag_data_div').append('<div id="tag_data_title_div">' + global_tags[id].word + ', ' + category + '</div>');
    $('#tag_data_div').append('<br>');
  
  
    var tag_data = global_tags[id].tag_data[category];
  
    console.log('tag data is ' + JSON.stringify(tag_data));
  
    if (category == 'substances') {
  
      for (var i in tag_data) {
        $('#tag_data_div').append(tag_data[i].data1 + '<br>' + tag_data[i].data2 + '<br>' + tag_data[i].data3 + '<br><br>');
      }
  
    } else {
  
      for (var i in tag_data) {
        $('#tag_data_div').append('<a href="' + tag_data[i].target_url + '" target="_blank">' + tag_data[i].domain_name + '</a>' + ', <a href="' + tag_data[i].source_url + '" target="_blank">source</a><br>');
      }
      $('#tag_data_div').append('<br>');
  
    }
  
  }
  
  
  
  function add_tag_to_case(id, category) {
  
    console.log('add tag to case, id is ' + id + ', category is ' + category + ', div title is ' + global_tags[id].word);
    // console.dir(global_tags[id]);
  
    var tag_found = 0;
  
    for (t in global_case_tags) {
  
      if ((global_case_tags[t].id == id) && (global_case_tags[t].category == category)) {
        tag_found = 1;
        console.log('add tag to case, already listed');
      }
  
    }
  
  
    if (tag_found == 0) {
  
      var case_tag_item = {};
  
      case_tag_item.id = id;
      case_tag_item.category = category;
  
      global_case_tags.push(case_tag_item);
  
      display_global_case_tags();
  
    }
  
  }
  
  
  
  function remove_tag_from_case(id, category) {
  
    console.log('remove tag from case, id is ' + id + ', category is ' + category + ', div title is ' + global_tags[id].word);
  
    var case_tags = [];
  
    for (t in global_case_tags) {
  
      if ((global_case_tags[t].id == id) && (global_case_tags[t].category == category)) {
        console.log(' remove tag from case, id ' + id + ', ' + category);
      } else {
        case_tags.push(global_case_tags[t]);
      }
  
    }
  
    global_case_tags = case_tags;
  
    display_global_case_tags();
  
  }
  
  
  
  function compare_tag_items(a, b) {
  
    if (a.count < b.count)
       return 1;
  
    if (a.count > b.count)
      return -1;
  
    return 0;
  
  }
  
  
  
  function display_global_case_tags() {
  
    $('#global_case_tags').html('case tags:  ');
  
    for (var t in global_case_tags) {
  
      var id       = global_case_tags[t].id;
      var category = global_case_tags[t].category;
  
      if (t > 0) { $('#global_case_tags').append(', '); }
  
      $('#global_case_tags').append(global_tags[id].word + ' in ' + category);
  
    }
  
  }
  
  
  
  function display_tag_check_sentence_api_queue() { 
  
    var word_pairs = [];
  
    for (var d in tag_check_sentence_api_queue) {
      word_pairs.push(tag_check_sentence_api_queue[d].search_words);
    }
  
    $('#tag_check_sentence_api_queue').html('tag check sentence api queue: ' + word_pairs); 
  
  }
  
  
  
  function start_tag_check_sentence_api_queue_handler() { 
  
    if (tag_check_sentence_api_queue_state != 'running') {
      tag_check_sentence_api_queue_state = 'running';
      tag_check_sentence_api_queue_interval = setInterval(function() { process_tag_check_sentence_api_queue(); }, 750); 
    }
  
  }
  
  
  
  function process_tag_check_sentence_api_queue() {
  
    var data = tag_check_sentence_api_queue.shift();
  
    if (tag_check_sentence_api_queue.length == 0) {
      clearInterval(tag_check_sentence_api_queue_interval);
      tag_check_sentence_api_queue_state = 'stopped';
    }
 
    if ( ( typeof data ) == 'undefined' ) { return; }


    get_sentence_search_words_data(data.w, data.url, data.words);
  
    display_tag_check_sentence_api_queue();
  
  }
  
  
}



//---- tag-check-stopword-list.js ------------------------------------------------------------------------------------



// tag-check-stopword-list.js


// return an array of stop words



function get_stop_word_list() {

  var stop_word = [
                    "a",
                    "about",
                    "above",
                    "after",
                    "again",
                    "against",
                    "all",
                    "am",
                    "an",
                    "and",
                    "any",
                    "are",
                    "aren\'t",
                    "as",
                    "at",
                    "be",
                    "because",
                    "been",
                    "before",
                    "being",
                    "below",
                    "between",
                    "both",
                    "but",
                    "by",
                    "cannot",
                    "can\'t",
                    "could",
                    "couldn\'t",
                    "did",
                    "didn\'t",
                    "do",
                    "does",
                    "doesn\'t",
                    "doing",
                    "don\'t",
                    "down",
                    "during",
                    "each",
                    "few",
                    "for",
                    "from",
                    "further",
                    "had",
                    "hadn\'t",
                    "has",
                    "hasn\'t",
                    "have",
                    "haven\'t",
                    "having",
                    "he",
                    "he\'d",
                    "he\'ll",
                    "her",
                    "here",
                    "here\'s",
                    "hers",
                    "herself",
                    "he\'s",
                    "him",
                    "himself",
                    "his",
                    "how",
                    "how\'s",
                    "i",
                    "i\'d",
                    "if",
                    "i\'ll",
                    "i\'m",
                    "in",
                    "into",
                    "is",
                    "isn\'t",
                    "it",
                    "its",
                    "it\'s",
                    "itself",
                    "i\'ve",
                    "let\'s",
                    "me",
                    "more",
                    "most",
                    "mustn\'t",
                    "my",
                    "myself",
                    "no",
                    "nor",
                    "not",
                    "of",
                    "off",
                    "on",
                    "once",
                    "only",
                    "or",
                    "other",
                    "ought",
                    "our",
                    "ours ",
                    "ourselves",
                    "out",
                    "over",
                    "own",
                    "same",
                    "shan\'t",
                    "she",
                    "she\'d",
                    "she\'ll",
                    "she\'s",
                    "should",
                    "shouldn\'t",
                    "so",
                    "some",
                    "such",
                    "than",
                    "that",
                    "that\'s",
                    "the",
                    "their",
                    "theirs",
                    "them",
                    "themselves",
                    "then",
                    "there",
                    "there\'s",
                    "these",
                    "they",
                    "they\'d",
                    "they\'ll",
                    "they\'re",
                    "they\'ve",
                    "this",
                    "those",
                    "through",
                    "to",
                    "too",
                    "under",
                    "until",
                    "up",
                    "very",
                    "was",
                    "wasn\'t",
                    "we",
                    "we\'d",
                    "we\'ll",
                    "were",
                    "we\'re",
                    "weren\'t",
                    "we\'ve",
                    "what",
                    "what\'s",
                    "when",
                    "when\'s",
                    "where",
                    "where\'s",
                    "which",
                    "while",
                    "who",
                    "whom",
                    "who\'s",
                    "why",
                    "why\'s",
                    "with",
                    "won\'t",
                    "would",
                    "wouldn\'t",
                    "you",
                    "you\'d",
                    "you\'ll",
                    "your",
                    "you\'re",
                    "yours",
                    "yourself",
                    "yourselves",
                    "you\'ve"
  ];

  return stop_word;

}


//---- tag-check-animation.js ------------------------------------------------------------------------------------



// tag-check-animation.js



function append_tag_animation( this_word ) {

 console.log('append_tag_animation ' + this_word );

  var this_tag_id = this_word.replace(/ /g, '_');


  if ( $('#' + this_tag_id ).length > 0 ) { return; }


  $('#case_comments').append('<div id="' + this_tag_id + '">' + this_word + '</div>');

  tag_css = { 
               position: 'relative',
              'offset-top': 200,
              'padding-top': 2,
              'padding-bottom': 4,
              'padding-left': 8,
              'padding-right': 8,
              'border-radius': 30,
               margin: 3,
               opacity: 0,
              'background-color': '#808080',
               color: '#404040',
               float: 'left' };

  $('#' + this_tag_id).css( tag_css );

  $('#' + this_tag_id).animate( { opacity: 1, top: '-=' + 100 }, 500 );

}




//---- Spell_Check.js ------------------------------------------------------------------------------------




// spell check object, queues, intervals



function Spell_Check(div_id) {


  
  var text_area_events = 'keypress blur paste change';
  
  var timeout;
  
  
  var previous_text = '';
  
  
  var unique_words = [];
  
  var sentence_list = [];
  
  
  var spell_check_queue = [];
  
  var spell_check_queue_interval;
  
  
  
  bind_check(div_id);



  function bind_check() {
  
    $('#' + div_id).bind(text_area_events, function(event) {
  
      if ( (/^key[press|up|down]/.test(event.type)) 
        || (/^paste/.test(event.type))
        || (/change/.test(event.type))
         ) {
  
        // $('#activity').html('active');
  
        if (timeout) clearTimeout(timeout);
  
        timeout = setTimeout(function() { check_for_new_text(); }, 3000);
  
      }
  
    });
  
  
  }
  
  
  
  
  function check_for_new_text() {
  
    var current_text = $('#' + div_id).val();
  
    $('#current_text').html('current text: ' + current_text);
    $('#previous_text').html('previous text: ' + previous_text);
  
    if (current_text == previous_text) {
  
      // $('#activity').html('no new text');
      // setTimeout(function() { $('#activity').html('idle'); }, 1000);
  
      return;
  
    }
  
    previous_text = current_text;
  
    console.log('spell check, new text found');
    // $('#activity').html('new text found');
  
  
  
  
    var new_words = check_unique_words(current_text.split(/[\s\.]+/));
  
    display_unique_word_list();
  
    for (var i in new_words) {
      spell_check_queue.push(new_words[i]);
    }
  
    display_spell_check_queue();
  
    start_spell_check_queue_handler();
  
  
  
    // setTimeout(function() { $('#activity').html('idle'); }, 1000);
  
  }
  
  
  
  
  function check_unique_words(words) {
  
    var new_words = [];
  
    $.each(words, function(key, val) {
  
      val = val.replace(/^\?/, '');
  
      val = val.replace(/[;:,]$/, '');
  
      val = val.replace(/^[(]/, '');
  
      if ( ! /[(]/.test(val) ) {
        val = val.replace(/[)]$/, '');
      }
  
  
      var word_found = false;
  
      for (var j in unique_words) {
        if (val === unique_words[j]) {
          word_found = true;
          break;
        }
      }
  
  
      var has_letters = /[a-z]/i;
  
      if ( ( ! word_found ) && (val != '') && has_letters.test(val) ) {
        new_words.push(val);
        unique_words.push(val);
      }
  
    });
  
    return new_words;
  
  }
  
  
  
  
  function display_unique_word_list() { 
  
    $('#unique_word_list').html('unique words: '); 
  
    for (var i in unique_words) {
      if (i > 0) { $('#unique_word_list').append(', '); }
      $('#unique_word_list').append(unique_words[i]); 
    }
  
  }
  
  
  
  function display_sentence_list() { $('#sentence_list').html('sentence list: ' + sentence_list); }
  
  
  
  function display_spell_check_queue() { 
  
    $('#spell_check_queue').html('spell check queue: '); 
  
    for (var i in spell_check_queue) {
      if (i > 0) { $('#spell_check_queue').append(', '); }
      $('#spell_check_queue').append(spell_check_queue[i]);
    }
  
  }
  
  
  
  function start_spell_check_queue_handler() { spell_check_queue_interval = setInterval(function() { process_spell_check_queue(); }, 1000); }
  
  function process_spell_check_queue() {
  
    var word = spell_check_queue.shift();
  
    if (spell_check_queue.length == 0) {
      clearInterval(spell_check_queue_interval);
    }
  
    check_spelling_of(word);
  
    display_spell_check_queue();
  
  }
  
  
  
  
  var spell_check_api = '/hunspell_api';
  
  
  var spell_check_results = [];
  
  
  
  function check_spelling_of(word) {
  
    word = word.replace(/[,;:]$/, '');
  
    word = word.replace(/^[(]/, '');
  
    if ( ! /[(]/.test(word) ) {
      word = word.replace(/[)]$/, '');
    }
  
    $.getJSON(spell_check_api, 
      { word: word }, 
      function(result) { parse_spell_check_results(result); }
    );
  
  }
  
  
  function parse_spell_check_results(result) {
  
    if (result.result == 0) {

      console.log('result is ' + result.word + ', suggestions are ' + result.response);
  
      spell_check_results.push({
        word: result.word,
        suggestions: result.response
      });
  
    }
  
    display_spell_check_results();
  
  }
  
  
  function display_spell_check_results() {
  
    if ( ! spell_check_results.length ) { return; }
 
    console.log('spell check results are ' + spell_check_results);
 
    var $textarea = $('#' + div_id);
  
    var $container = $('#spellcheckresults');
  
    var dl = [], offset = $textarea.offset(), height = $textarea[0].offsetHeight, i, k;
  
  
    if ( ! $container.length ) {
      $container = $('<div id="spellcheckresults"></div>').appendTo('body');
    }
  
    for (i = 0; i < spell_check_results.length; i++) {
  
      var result = spell_check_results[i], suggestions = result.suggestions;
  
      dl.push('<dl><dt>' + result.word + '</dt>');
  
      for (k = 0; k < suggestions.length; k++) {
        dl.push('<dd>' + suggestions[k] + '</dd>');
      }
  
      dl.push('<dd class="ignore">ignore</dd></dl>');
  
    }
  
  
    $container.append(dl.join('')).find('dd').bind('click', function(event) {
  
      var $this = $(this), $parent = $this.parent();
  
      var i = unique_words.indexOf($parent.find('dt').text());
  
      if (i != -1) { 
        unique_words.splice(i, 1); 
        display_unique_word_list();
      }
  
      var regex = new RegExp($parent.find('dt').text(), 'g');
  
      if ( ! $this.is('.ignore') ) {
        $textarea.val( $textarea.val().replace( regex, $this.text() ) );
      }
  
      $parent.remove();
  
      if ( $('#spellcheckresults').is(':empty') )
        $('#spellcheckresults').remove();
  
      this.blur();
  
    }).end().css({ top: offset.top + height, left: offset.left });
  
  
    spell_check_results = [];
  
  }
  
  
}


//---- tabeeb-navigation-header.js ------------------------------------------------------------------------------------




// header slides down when you start to pull down, everywhere on the page

// edit and delete buttons slide down when you pull down, only at the top of the page


// var global_screen_width, global_screen_height;


var navigation_bar_height;


var nav_bar_is_showing, nav_bar_is_down;

var events_bar_is_showing, events_bar_is_down;


var nav_header_top, nav_header_start_top, nav_header_current_top;

var events_slider_top, events_slider_start_top, events_slider_current_top;

var page_container_top;


var events_top_bar_can_slide = 0;

var events_slider_hit_top = 0;
var events_slider_height = 0;
var events_slider_min_y = 0;


var nav_panel_state = 'hidden';

var navigation_panel_height;
var navigation_panel_width;

var navigation_bar_button_height;
var navigation_bar_font_size;


var touch_move_start = { 'x': 0, 'y': 0 };




function add_navigation_header() {


  var screen_height = $(window).height();

  screen_height = global_screen_height;


  console.log('screen_height ' + screen_height);

  // if ( screen_height > global_screen_height ) { global_screen_height = screen_height }

  // create case should use original global screen height

  // load page has to check window height and original global screen height
  // set global screen height to window height



  if (is_mobile) {

    navigation_bar_height = Math.floor( global_screen_width * 0.07 );

    if ( navigation_bar_height < 44 ) { navigation_bar_height = 44; }
    if ( navigation_bar_height > 49 ) { navigation_bar_height = 49; }

  } else {

    navigation_bar_height = Math.floor( global_screen_width * 0.05 );

    if ( navigation_bar_height > 44 ) { navigation_bar_height = 44; }

  }
  

  nav_header_start_top = navigation_bar_height * -1;

  nav_header_top = nav_header_start_top;


  // var events_top_bar_height = 100;
  // var events_bottom_bar_height = 100;

  var events_top_bar_height = 0;
  var events_bottom_bar_height = 0;


  events_slider_start_top = events_top_bar_height * -1;

  events_slider_top = events_slider_start_top;



  // nav header bar div

  $('body').append('<div id="nav_header_bar"></div>');

  $('#nav_header_bar').css( { 'position': 'absolute',
                              'top': nav_header_start_top,
                              'left': 0,
                              'height': navigation_bar_height,
                              'width': global_screen_width,
                              'background-color': '#231f20',
                           // 'box-shadow': '0px 5px 10px rgba(35, 31, 32, 0.5)',
                              'box-shadow': '0px 3px 10px rgba(35, 31, 32, 0.5)',
                              'z-index': 99 } );

  $('#nav_header_bar').html('<center><div id="tabeeb_logo_div"><img id="tabeeb_logo" src="tabeeb-logo.png" height="' + navigation_bar_height + '" ></div></center>');

  var logo_width;

  setTimeout( function() { 
    logo_width = $('#tabeeb_logo').width();
    $('#tabeeb_logo_div').css( { width: logo_width } );
  }, 250 );

  $('#tabeeb_logo').on('click', function() { load_page('dashboard'); } );



  // burger icon on left side of navigation header

  var nav_panel_left_corner_width = Math.floor( navigation_bar_height * 1.1 );

  $('#nav_header_bar').append('<div id="nav_panel_button"></div>');

  $('#nav_panel_button').css( { 'position': 'absolute',
                                'top': 0,
                                'left': 0,
                                'height': navigation_bar_height,
                                'width': nav_panel_left_corner_width,
                                'background-color': '#231f20',
                                'border-right': '1px solid #888888' } );



  var nav_panel_icon_height = Math.floor( navigation_bar_height * 0.6 );
  var nav_panel_icon_width  = Math.floor( navigation_bar_height * 0.8 );
  var nav_panel_icon_top    = ( navigation_bar_height / 2 ) - ( nav_panel_icon_height / 2 );
  var nav_panel_icon_left   = ( nav_panel_left_corner_width / 2 ) - ( nav_panel_icon_width / 2 );


  $('#nav_panel_button').append('<div id="nav_panel_icon"></div>');

  $('#nav_panel_icon').css( { 'position': 'absolute',
                              'top': nav_panel_icon_top,
                              'left': nav_panel_icon_left,
                              'height': nav_panel_icon_height,
                              'width': nav_panel_icon_width,
                              'background-color': '#888888' } );

  var icon_bar_spacing = nav_panel_icon_height * 0.15;

  var icon_bar_height =  ( nav_panel_icon_height - ( icon_bar_spacing * 2 ) ) / 3;


  $('#nav_panel_icon').append('<div style="'
                            + 'position: absolute;'
                            + 'top: ' + icon_bar_height + ';'
                            + 'left: 0;'
                            + 'width: ' + nav_panel_icon_width + ';'
                            + 'height: ' + icon_bar_spacing + ';'
                            + 'background-color: #231f20;'
                            + '"></div>');


  $('#nav_panel_icon').append('<div style="'
                            + 'position: absolute;'
                            + 'top: ' + ( nav_panel_icon_height - ( icon_bar_height + icon_bar_spacing ) ) + ';'
                            + 'left: 0;'
                            + 'width: ' + nav_panel_icon_width + ';'
                            + 'height: ' + icon_bar_spacing + ';'
                            + 'background-color: #231f20;'
                            + '"></div>');


  // on touchstart, toggle the navigation panel, open or closed

  if ( is_mobile ) {

    $('#nav_panel_button').on('touchstart', function() { toggle_nav_panel(); } );

  } else { 

    $('#nav_panel_button').on('click',      function() { toggle_nav_panel(); } );

  }


  // create navigation panel and move it off the left side of the page

  create_navigation_panel(global_screen_width, global_screen_height, navigation_bar_height);


}



function toggle_nav_panel() {

  if ( nav_panel_state == 'hidden' ) { open_nav_panel(); } 
                                else { close_nav_panel(); }

}



function open_nav_panel() {

  $('#navigation_panel').css( { 'box-shadow': '3px 0px 10px rgba(35, 31, 32, 0.5)' } );

  $('#navigation_page_cover').show();
  $('#navigation_button_cover').show();

  $('#navigation_panel').animate( { 'left': '+=' + navigation_panel_width }, 250);

  $('#navigation_page_cover').animate( { 'opacity': 0.3 }, 350 );
  $('#navigation_button_cover').animate( { 'opacity': 0.3 }, 350 );

  nav_panel_state = 'showing';

}



function close_nav_panel() {

  $('#navigation_panel').animate( { 'left': '-=' + navigation_panel_width }, 250, function() {

    $('#navigation_panel').css( { 'box-shadow': '0px 0px 0px #000000' } );

  } );


  $('#navigation_page_cover').animate( { 'opacity': 0 }, 350, function() {

      $('#navigation_page_cover').hide();

  } );


  $('#navigation_button_cover').animate( { 'opacity': 0 }, 350, function() {

      $('#navigation_button_cover').hide();

  } );


  nav_panel_state = 'hidden';

}



function create_navigation_panel(screen_width, screen_height, bar_height) {

  navigation_panel_height = screen_height - bar_height;

  navigation_panel_width = screen_width * 0.3;



  $('body').append('<div id="navigation_panel"></div>');

  $('#navigation_panel').css( { 'position': 'absolute',
                                'top': bar_height,
                                'left': ( navigation_panel_width * -1 ),
                                'width': navigation_panel_width,
                                'height': navigation_panel_height,
                                'background-color': '#231f20',
                                'border-top': '1px solid #888888',
                                'z-index': 99 } );



  // dashboard

  $('#navigation_panel').append('<div id="dashboard_button">Dashboard</div>');

  $('#dashboard_button').css( { 'height': 50,
                                'width': ( navigation_panel_width - 20 ),
                                'padding-top': 25,
                                'padding-left': 20,
                                'border-bottom': '1px solid #888888',
                                'font-family': 'Droid Sans',
                                'font': '21px "Droid Sans", sans-serif',
                                'color': '#aaaaaa' } );

  if ( is_mobile ) {

    $('#dashboard_button').on('touchstart', function(e) { e.preventDefault(); $('#dashboard_button').css( { 'background-color': '#0083cb' } ); } );
    $('#dashboard_button').on('touchend',   function() { $('#dashboard_button').css( { 'background-color': '#231f20' } ); load_page('dashboard'); } );

  } else {

    $('#dashboard_button').on('click', function() { load_page('dashboard'); } );

  }


  // my patients

  $('#navigation_panel').append('<div id="my_patients_button">My Patients</div>');

  $('#my_patients_button').css( { 'height': 50,
                                  'width': ( navigation_panel_width - 20 ),
                                  'padding-top': 25,
                                  'padding-left': 20,
                                  'border-bottom': '1px solid #888888',
                                  'font-family': 'Droid Sans',
                                  'font': '21px "Droid Sans", sans-serif',
                                  'color': '#aaaaaa' } );

  if ( is_mobile ) {

    $('#my_patients_button').on('touchstart', function(e) { e.preventDefault(); $('#my_patients_button').css( { 'background-color': '#0083cb' } ); } );
    $('#my_patients_button').on('touchend',   function() { $('#my_patients_button').css( { 'background-color': '#231f20' } ); load_page('patient_list'); } );

  } else {

    $('#my_patients_button').on('click', function() { load_page('patient_list'); } );

  }


  // cases

  $('#navigation_panel').append('<div id="cases_button">Cases</div>');

  $('#cases_button').css( { 'height': 50,
                            'width': ( navigation_panel_width - 20 ),
                            'padding-top': 25,
                            'padding-left': 20,
                            'font-family': 'Droid Sans',
                            'font': '21px "Droid Sans", sans-serif',
                            'color': '#aaaaaa' } );

  // position of nav panel, opacity, state of nav header, reset during init?

  if ( is_mobile ) {

    $('#cases_button').on('touchstart', function(e) { e.preventDefault(); $('#cases_button').css( { 'background-color': '#0083cb' } ); } );
    $('#cases_button').on('touchend',   function() { $('#cases_button').css( { 'background-color': '#231f20' } ); load_page('case_list'); } );

  } else {

    $('#cases_button').on('click', function() { load_page('case_list'); } );

  }




  // cases participating in

  $('#navigation_panel').append('<div id="cases_participating"></div>');

  $('#cases_participating').css( { 'height': ( navigation_panel_height - ( ( 50 + 25 ) * 5 ) ),
                                   'width': navigation_panel_width,
                                   'font-family': 'Droid Sans',
                                   'font': '21px "Droid Sans", sans-serif',
                                   'background-color': '#444444',
                                   'box-shadow': 'inset 10px 5px 10px rgba(35, 31, 32, 0.5), inset 10px -5px 10px rgba(35, 31, 32, 0.5)',
                                   'color': '#aaaaaa' } );

  // appending divs to a div changes its height?


  $('#cases_participating').append('<div id="nav_case_1">Progressive respiratory failure in a patient with lung transplant</div>');

  $('#nav_case_1').css( { 'padding-top': 30,
                          'padding-left': 20,
                          'padding-right': 20,
                          'font-family': 'Droid Sans',
                          'font': '21px "Droid Sans", sans-serif',
                          'color': '#aaaaaa' } );

  $('#cases_participating').append('<div id="nav_case_1_info">Updated 32 mins ago</div>');

  $('#nav_case_1_info').css( { 'padding-top': 10,
                               'padding-left': 20,
                               'padding-right': 20,
                               'font-family': 'Droid Sans',
                               'font': '15px "Droid Sans", sans-serif',
                               'color': '#aaaaaa' } );


  // onclick, set global current case id from the div id, load_page case_events

  // check global case info for case id, get case, load page





  // your profile, "eric benoit"

  $('#navigation_panel').append('<div id="my_profile_button">My Profile</div>');

  $('#my_profile_button').css( { 'height': 50,
                                 'width': ( navigation_panel_width - 20 ),
                                 'padding-top': 25,
                                 'padding-left': 20,
                                 'border-bottom': '1px solid #888888',
                                 'font-family': 'Droid Sans',
                                 'font': '21px "Droid Sans", sans-serif',
                                 'color': '#aaaaaa' } );

  if ( is_mobile ) {

    $('#my_profile_button').on('touchstart', function(e) { e.preventDefault(); $('#my_profile_button').css( { 'background-color': '#0083cb' } ); } );
    $('#my_profile_button').on('touchend',   function() { $('#my_profile_button').css( { 'background-color': '#231f20' } ); global_previous_screen = 'dashboard'; global_dr_profile = global_user_name; load_page('dr_profile'); } );

  } else {

    $('#my_profile_button').on('click', function() { global_previous_screen = 'dashboard'; global_dr_profile = global_user_name; load_page('dr_profile'); } );

  }



  // fade the rest of the page?

  $('body').append('<div id="navigation_page_cover"></div>');

  $('#navigation_page_cover').css( { 'position': 'absolute',
                                     'top': bar_height,
                                     'left': 0,
                                     'width': screen_width,
                                     'height': navigation_panel_height,
                                     'background-color': '#000000',
                                     'opacity': 0,
                                     'z-index': 98 } );


  // add a div for the navigation bar button and the logo

  $('body').append('<div id="navigation_button_cover"></div>');

  $('#navigation_button_cover').css( {  position: 'absolute',
                                        top: 0,
                                        left: $('#nav_panel_button').width(),
                                        width: ( screen_width - $('#nav_panel_button').width() ),
                                        height: bar_height,
                                       'background-color': '#000000',
                                        opacity: 0,
                                       'z-index': 100 } );





  if ( is_mobile ) {

    $('#navigation_page_cover').on('touchstart', function() { close_nav_panel(); } );
    $('#navigation_button_cover').on('touchstart', function() { close_nav_panel(); } );

  } else {

    $('#navigation_page_cover').on('click', function() { close_nav_panel(); } );
    $('#navigation_button_cover').on('click', function() { close_nav_panel(); } );

  }


  $('#navigation_page_cover').hide();
  $('#navigation_button_cover').hide();

}



//---- patient-functions.js ------------------------------------------------------------------------------------



// init patient profile, add patient info




function init_patient_info_page() {

  console.log('patient info');


  add_navigation_header();

  $('#nav_header_bar').css( { 'top': 0 } );

  nav_panel_state = 'hidden';

  var nav_header_height = $('#nav_header_bar').height();



  // add create case button to header

  var button_top_padding = 6;
  var button_font_size = 16;

  if (nav_header_height > 40) {

    var bar_height_difference = nav_header_height - 40;

    // var font_size_increase = Math.floor(bar_height_difference / 6);
    // button_font_size = button_font_size + font_size_increase;

    var padding_increase = Math.floor(bar_height_difference / 3);
    button_top_padding = button_top_padding + padding_increase;

  }


  var button_width = 120;

  var button_css = { 'width': button_width,
                     'height': ( nav_header_height - ( 10 + button_top_padding ) ),
                     'border-radius': 4,
                     'color': '#eeeeee',
                     'background-color': '#999999',
                     'font-family': 'Droid Sans',
                     'font': button_font_size + 'px "Droid Sans", sans-serif' };


  $('#nav_header_bar').append('<div id="add_new_case"><center>Create Case</center></div>');

  $('#add_new_case').css(button_css);

  $('#add_new_case').css( { 'position': 'absolute',
                            'top': 5,
                            'padding-top': button_top_padding,
                            'left': ( global_screen_width - ( button_width + 5 ) )
                           } );

  $('#add_new_case').on('click', function() {

    global_current_case_id = '';

    global_case_input_info = {};

    var events_array = [];

    global_case_input_info.events = events_array;

    // create case on patient info screen returns to dashboard?
    // global_previous_screen = 'dashboard';

    global_previous_screen = 'patient_info';

    load_page('create_case');

  } );






  var patient_info_left = ( global_screen_width - ( 200 + 50 + 50 ) ) / 2;

  $('#patient_info').append('<div style="background-color: #dddddd; position: absolute; left: ' + patient_info_left + '; top: 160; width: 200; height: 100; padding: 50;">Patient info, ' + global_patient_name + '</div>');

  // global current patient id, global current case id ?


  $('#patient_info').on('click', function() { 

    if ( ( ( typeof global_previous_screen ) != 'undefined' ) && ( global_previous_screen != '' ) ) {
      load_page(global_previous_screen);
    } else {
      load_page('case_events');
    }

  } );

  console.log('patient_info_left ' + patient_info_left);
  console.log('global_screen_width ' + global_screen_width);

}




//---- patient-list-functions.js ------------------------------------------------------------------------------------




// patient-list-functions.js


// hgraph.min, hgraph.max, hgraph.data ?


var global_patient_info = [
                            { name: 'Benoit, Eric',
                              id: 123,
                              country: 'USA',
                              picture: 'tabeeb-eric-benoit.png',
                              age: '28yo',
                              gender: 'Male',
                              hgraph: [ 
                                        [ 10, 14, 15 ],
                                        [ 10, 8,  15 ],
                                        [ 10, 14, 15 ],
                                        [ 10, 14, 15 ],
                                        [ 10, 15, 15 ],
                                        [ 10, 10, 15 ],
                                        [ 10, 11, 15 ],
                                        [ 10, 12, 15 ],
                                      ]
                            },

                            { name: 'Sonin, Juhan',
                              id: 124,
                              country: 'USA',
                              age: '40yo',
                              gender: 'Male' },

                            { name: 'Kaiser, Sarah',
                              id: 125,
                              country: 'USA',
                              age: '24yo',
                              gender: 'Female' },

                            { name: 'Knowles, Jason',
                              id: 126,
                              country: 'USA',
                              picture: 'tabeeb-jason-knowles.png',
                              age: '4mo',
                              gender: 'Male' },

                            { name: 'Anonymous 1',
                              id: 127,
                              picture: 'tabeeb-anonymous-patient.png' }
                          ];




function init_patient_list_page() {

  console.log('patient list');

  if ( typeof global_screen_height == 'undefined' ) { get_global_variables(); }

  if ( isNaN( global_screen_height ) ) { load_page('login'); return; }

  set_cookie('last_page_state', 'patient_list', 365)


  add_navigation_header();

  $('#nav_header_bar').css( { 'top': 0 } );

  nav_panel_state = 'hidden';

  var nav_header_height = $('#nav_header_bar').height();



  // Add Patient button on nav header

  var button_top_padding = 6;
  var button_font_size = 16;

  if (nav_header_height > 40) {

    var bar_height_difference = nav_header_height - 40;

    // var font_size_increase = Math.floor(bar_height_difference / 6);
    // button_font_size = button_font_size + font_size_increase;

    var padding_increase = Math.floor(bar_height_difference / 3);
    button_top_padding = button_top_padding + padding_increase;

  }


  var button_width = 120;

  var button_css = { 'width': button_width,
                     'height': ( nav_header_height - ( 10 + button_top_padding ) ),
                     'border-radius': 4,
                     'color': '#eeeeee',
                     'background-color': '#999999',
                     'font-family': 'Droid Sans',
                     'font': button_font_size + 'px "Droid Sans", sans-serif' };


  $('#nav_header_bar').append('<div id="add_patient"><center>Add Patient</center></div>');

  $('#add_patient').css(button_css);

  $('#add_patient').css( { 'position': 'absolute',
                           'top': 5,
                           'padding-top': button_top_padding,
                           'left': ( global_screen_width - ( button_width + 5 ) ) } );

  $('#add_patient').on('click', function() { load_page('add_patient'); } );



  // under construction text

  $('body').append('<br><br><br><center><div style="font: 18px \'Droid Sans\';">This feature is under construction.</div><center>');


  // list of patients

  $('body').append('<br><div style="margin-left: 10; font-size: 22px;">' + global_patient_info.length + ' patients</div><br>');

  for ( var p in global_patient_info ) {

    $('body').append('<div id="patient_list_' + p + '" style="margin-left: 100; padding-top: 20; font-size: 22px">' + global_patient_info[p].name + '</div>');


    // on click list_patient_info(this)
    // set global patient id, or this.text()?  id?

    $('#patient_list_' + p).on('click', function() { load_patient_info(this); } );



    var patient_info_text;

    var patient = global_patient_info[p];

    if ( ( typeof patient.gender ) == 'undefined' ) {

      if ( ( typeof patient.age ) == 'undefined' ) { patient_info_text = 'Anonymous patient'; }
                                              else { patient_info_text = 'Anonymous ' + patient.age; }

    } else {

      if ( ( typeof patient.age ) == 'undefined' ) { patient_info_text = patient.gender; }
                                              else { patient_info_text = patient.age + ' ' + patient.gender; }

    }


    $('body').append('<div style="margin-left: 100; padding-top: 5">'  + patient_info_text + '</div>');

  }


}



function load_patient_info( div ) {

  console.log('load_patient_info ' + $('#' + div.id).text() );

  global_previous_screen = 'patient_list';

  global_patient_name = $('#' + div.id).text();

  load_page('patient_info');

}




//---- patient-add-functions.js ------------------------------------------------------------------------------------



// add patient

// add an anonymous patient to the global patient info

// check patients named anonymous, get the max # from the names



var global_new_anonymous_patient;

var global_new_anonymous_patient_id;




function init_add_patient_page() {

  console.log('add patient');

  if ( typeof global_screen_height == 'undefined' ) { get_global_variables(); }

  if ( isNaN( global_screen_height ) ) { load_page('login'); return; }

  set_cookie('last_page_state', 'add_patient', 365)


  add_navigation_header();

  $('#nav_header_bar').css( { 'top': 0 } );

  nav_panel_state = 'hidden';

  var nav_header_height = $('#nav_header_bar').height();



  // add submit button to header
  // remove button from header

  // copy the create case Cancel and Submit buttons to this page
  // edit patient info should look the same as add patient ?


  var button_top_padding = 6;
  var button_font_size = 16;

  if (nav_header_height > 40) {

    var bar_height_difference = nav_header_height - 40;

    // var font_size_increase = Math.floor(bar_height_difference / 6);
    // button_font_size = button_font_size + font_size_increase;

    var padding_increase = Math.floor(bar_height_difference / 3);
    button_top_padding = button_top_padding + padding_increase;

  }


  var button_width = 120;

  var button_css = { 'width': button_width,
                     'height': ( nav_header_height - ( 10 + button_top_padding ) ),
                     'border-radius': 4,
                     'color': '#eeeeee',
                     'background-color': '#999999',
                     'font-family': 'Droid Sans',
                     'font': button_font_size + 'px "Droid Sans", sans-serif' };


  // no button on the nav header
  // does the add patient page have the nav header?

  /*

  $('#nav_header_bar').append('<div id="add_patient_button"><center>Submit</center></div>');

  $('#add_patient_button').css(button_css);

  $('#add_patient_button').css( { position: 'absolute',
                                  top: 5,
                                 'padding-top': button_top_padding,
                                  left: ( global_screen_width - ( button_width + 5 ) )
                                } );

  $('#add_patient_button').on('click', function() { load_page('patient_list'); } );

  */



  // cancel and save buttons at the bottom of the page

  case_button_bar_height = Math.floor(global_screen_width * 0.0556);

  if (case_button_bar_height < 52) { case_button_bar_height = 52; }
  if (case_button_bar_height > 80) { case_button_bar_height = 80; }

  var case_button_bar_top = global_screen_height - case_button_bar_height;

  $('body').append('<div id="case_button_bar"></div>');

  $('#case_button_bar').css( { 'position': 'absolute',
                               'top': case_button_bar_top,
                               'left': 0,
                               'width': global_screen_width,
                               'height': case_button_bar_height,
                               'background-color': '#292526' } );


  // from create case,

  var case_input_button_height = Math.floor(case_button_bar_height * 0.6730);
  var photo_button_top_margin  = Math.floor(case_button_bar_height * 0.1538);

  var button_top_padding = 8;
  var button_font_size = 16;


  if (case_button_bar_height > 52) {

    var bar_height_difference = case_button_bar_height - 52;

    var font_size_increase = Math.floor(bar_height_difference / 6);
    button_font_size = button_font_size + font_size_increase;

    var padding_increase = Math.floor(bar_height_difference / 3);
    button_top_padding = button_top_padding + padding_increase;

  }



  // submit case button, save new patient info

  var submit_button_width        = Math.floor(case_button_bar_height * 2.7307);
  var submit_button_height       = case_input_button_height;
  var submit_button_right_margin = Math.floor(case_button_bar_height * 0.1346);

  var submit_button_top_margin   = photo_button_top_margin;
  var submit_button_left         = global_screen_width - ( submit_button_width  + submit_button_right_margin );
  var submit_button_color        = '#0083cb';


  $('#case_button_bar').append('<div id="add_new_patient"></div>');

  $('#add_new_patient').css( {  position: 'absolute',
                                top: submit_button_top_margin,
                                left: submit_button_left,
                               'background-color': submit_button_color,
                                width: submit_button_width,
                                height: submit_button_height,
                               'border-radius': 4,
                                color: '#ffffff',
                               'font-family': 'Droid Sans',
                                font: 'bold ' + button_font_size + 'px "Droid Sans", sans-serif' } );

  $('#add_new_patient').html('<center><div style="padding-top: ' + button_top_padding + ';">Save</div></center>');
  $('#add_new_patient').on('click', function() { add_new_patient_info() } );



  // cancel button

  var cancel_button_width        = Math.floor(case_button_bar_height * 1.6346);
  var cancel_button_right_margin = Math.floor(case_button_bar_height * 0.1538);

  var cancel_button_height       = case_input_button_height;
  var cancel_button_top_margin   = photo_button_top_margin;
  var cancel_button_color        = '#d2d3d5';
  var cancel_button_left         = global_screen_width - ( submit_button_width  + submit_button_right_margin + cancel_button_width + cancel_button_right_margin )

  $('#case_button_bar').append('<div id="cancel_add_patient"></div>');

  $('#cancel_add_patient').css( {  position: 'absolute',
                                   top: cancel_button_top_margin,
                                   left: cancel_button_left,
                                  'background-color': cancel_button_color,
                                   width: cancel_button_width,
                                   height: cancel_button_height,
                                  'border-radius': 4,
                                   color: '#5c5d5f',
                                  'font-family': 'Droid Sans',
                                   font: button_font_size + 'px "Droid Sans", sans-serif' } );

  $('#cancel_add_patient').html('<center><div style="padding-top: ' + button_top_padding + ';">Cancel</div></center>');

  $('#cancel_add_patient').on('click', function() { load_page('patient_list'); } );




  // last anonymous patient is, adding new anonymous patient n

  var patient_info_left    = 40;
  var patient_info_padding = 30;
  var patient_info_width   = global_screen_width - ( ( patient_info_left * 2 ) + ( patient_info_padding * 2 ) );

  var patient_text_top = nav_header_height * 1.6;

  $('#patient_info').append('<div style="position: absolute; left: 40; top: ' + patient_text_top + '; font-size: 34px">Add Your First Patient</div>');

  var patient_info_top = patient_text_top * 2.2;

  $('#patient_info').append('<div id="patient_info_output" style="background-color: #eeeeee; position: absolute; left: ' + patient_info_left + '; top: ' + patient_info_top + '; width: ' + patient_info_width + '; height: 100; padding: ' + patient_info_padding + ';"></div>');


  // global current patient id, set patient info to anonymous from save button

  var anonymous_number = 0;
  var max_anonymous_number = 0;
  var max_patient_id = 0;

  // $('#patient_info_output').append('Current anonymous patients are:<br>');

  for ( var p in global_patient_info ) {

    if ( global_patient_info[p].id > max_patient_id ) { max_patient_id = global_patient_info[p].id; }

    if ( /^Anonymous/.test( global_patient_info[p].name ) ) {

      // $('#patient_info_output').append('&nbsp;&nbsp;' + global_patient_info[p].name + '<br>');

      var n = global_patient_info[p].name.split(' ');
      anonymous_number = n[1];

      if ( anonymous_number > max_anonymous_number ) { max_anonymous_number = anonymous_number; }

    }

  }

  max_anonymous_number++;
  max_patient_id++;

  $('#patient_info_output').append('<br>Adding Anonymous ' + max_anonymous_number + ' as patient id ' + max_patient_id + '<br>');

  global_new_anonymous_patient = max_anonymous_number;
  global_new_anonymous_patient_id = max_patient_id;



  // patient info does not load another page

  // $('#patient_info').on('click', function() { load_page('patient_list'); } );

}



function add_new_patient_info() {

  console.log('add_new_patient_info, adding anonymous patient ' + global_new_anonymous_patient);

  var patient_info = {};

  patient_info.name    = 'Anonymous ' + global_new_anonymous_patient;
  patient_info.id      = global_new_anonymous_patient_id;
  patient_info.picture = 'tabeeb-anonymous-patient.png';

  var n = global_patient_info.length;

  global_patient_info[n] = patient_info;


  load_page('patient_list');  

}



//---- doctor-functions.js ------------------------------------------------------------------------------------



// init dr profile page, list events reversed



function init_dr_profile_page() {

  add_navigation_header();

  $('#nav_header_bar').css( { 'top': 0 } );

  var nav_header_height = $('#nav_header_bar').height();


  // set the panel to hidden because the button on the nav panel doesn't close it

  nav_panel_state = 'hidden';


  // add create case button to header, long press to go to case list with filter set to draft

  var button_top_padding = 6;
  var button_font_size = 16;

  if (nav_header_height > 40) {

    var bar_height_difference = nav_header_height - 40;

    // var font_size_increase = Math.floor(bar_height_difference / 6);
    // button_font_size = button_font_size + font_size_increase;

    var padding_increase = Math.floor(bar_height_difference / 3);
    button_top_padding = button_top_padding + padding_increase;

  }


  var button_width = 120;

  var button_css = { 'width': button_width,
                     'height': ( nav_header_height - ( 10 + button_top_padding ) ),
                     'border-radius': 4,
                     'color': '#eeeeee',
                     'background-color': '#999999',
                     'font-family': 'Droid Sans',
                     'font': button_font_size + 'px "Droid Sans", sans-serif' };


  $('#nav_header_bar').append('<div id="add_new_case"><center>Create Case</center></div>');

  $('#add_new_case').css(button_css);

  $('#add_new_case').css( { 'position': 'absolute',
                            'top': 5,
                            'padding-top': button_top_padding,
                            'left': ( global_screen_width - ( button_width + 5 ) )
                           } );

  $('#add_new_case').on('click', function() {

    global_current_case_id = '';

    global_case_input_info = {};

    var events_array = [];

    global_case_input_info.events = events_array;

    global_previous_screen = 'dashboard';

    load_page('create_case');

  } );



  var doctor_info_left = ( global_screen_width - ( 200 + 50 + 50 ) ) / 2;

  $('#dr_profile').append('<div style="background-color: #dddddd; position: absolute; left: ' + doctor_info_left + '; top: 100; width: 200; height: 100; padding: 50;">Dr profile, ' + global_dr_profile + '</div>');

  $('#dr_profile').on('click', function() { 

    if ( ( ( typeof global_previous_screen ) != 'undefined' ) && ( global_previous_screen != '' ) ) {

      load_page( global_previous_screen ); 

    } else {

      load_page('case_events'); 

    }

  } );

}




//---- dashboard-functions.js ------------------------------------------------------------------------------------




// dashboard



var page_container_top, page_container_start_top, page_container_current_top;

var page_container_min_y;






function init_dashboard_page() {

  console.log('init_dashboard');

  console.log('global_screen_height ' + global_screen_height);

  if ( typeof global_screen_height == 'undefined' ) { get_global_variables(); }

  if ( isNaN( global_screen_height ) ) { load_page('login'); return; }

  set_cookie('last_page_state', 'dashboard', 365)


  add_navigation_header();

  $('#nav_header_bar').css( { 'top': 0 } );

  var nav_header_height = $('#nav_header_bar').height();


  nav_panel_state = 'hidden';

  nav_header_start_top = 0;

  nav_header_current_top = nav_header_start_top;


  page_container_start_top = nav_header_current_top + nav_header_height;

  $('#page_container').css( { position: 'absolute',
                              top: page_container_start_top,
                              left: 0,
                             'background-color': '#888888',
                             'min-height': global_screen_height,
                              width: global_screen_width,
                             'font-family': 'Droid Sans' } );


  add_dashboard_columns();

  // dashboard news column is blank for phase 1 ?



  var dashboard_output_top = global_screen_height;

  $('#page_container').append('<div id="output"></div>');

  $('#output').css( { position: 'absolute',
                      top: dashboard_output_top,
                      left: 30,
                     'background-color': '#dddddd',
                     'word-wrap': 'break-word',
                     'min-height': 0,
                      width: ( global_screen_width - 100 ) } );



  // add create case button to header

  var button_top_padding = 6;
  var button_font_size = 16;

  if (nav_header_height > 40) {

    var bar_height_difference = nav_header_height - 40;

    // var font_size_increase = Math.floor(bar_height_difference / 6);
    // button_font_size = button_font_size + font_size_increase;

    var padding_increase = Math.floor(bar_height_difference / 3);
    button_top_padding = button_top_padding + padding_increase;

  }


  var button_width = 120;

  var button_css = { 'width': button_width,
                     'height': ( nav_header_height - ( 10 + button_top_padding ) ),
                     'border-radius': 4,
                  // 'color': '#eeeeee',
                  // 'background-color': '#999999',
                     'color': '#414141',
                     'background-color': '#d1d3d4',
                     'font-family': 'Droid Sans',
                     'font': button_font_size + 'px "Droid Sans", sans-serif' };

  // calendar buttons should be the same size

  navigation_bar_button_height = ( nav_header_height - ( 10 + button_top_padding ) );
  navigation_bar_font_size = button_font_size;
  
  $('#nav_header_bar').append('<div id="add_new_case"><center>Create Case</center></div>');

  $('#add_new_case').css(button_css);

  $('#add_new_case').css( { 'position': 'absolute',
                            'top': 5,
                            'padding-top': button_top_padding,
                            'left': ( global_screen_width - ( button_width + 5 ) )
                           } );

  if ( is_mobile ) {

    // $('#add_new_case').on('touchstart', function(e) { $('#add_new_case').css( { 'background-color': '#686868' } ); } );

    // $('#add_new_case').on('touchstart', function(e) { $('#add_new_case').css( { 'background-color': '#edeeee' } ); } );
    // $('#add_new_case').on('touchend',   function()  { $('#add_new_case').css( { 'background-color': '#999999' } ); } );

    $('#add_new_case').on('touchstart', function(e) { $('#add_new_case').css( { 'background-color': '#eaeced' } ); } );
    $('#add_new_case').on('touchend',   function()  { $('#add_new_case').css( { 'background-color': '#d1d3d4' } ); } );

  }



  $('#add_new_case').on('click', function() { 

    global_current_case_id = ''; 

    global_case_input_info = {};

    var events_array = [];

    global_case_input_info.events = events_array;

    global_previous_screen = 'dashboard';

    load_page('create_case'); 

  } );



  bind_dashboard_touch_events();


  add_dashboard_buttons();
  

  set_page_height();


  // test of font size

  $('#page_container').append('<div id="test_h1">H1 36px font</div>');

  $('#test_h1').css( { position: 'absolute',
                       top: 70,
                       left: 30,
                       font: 'bold 36px "Droid Sans", sans-serif' } );

  $('#page_container').append('<div id="test_h2">H2 24px font</div>');

  $('#test_h2').css( { position: 'absolute',
                       top: 140,
                       left: 30,
                       font: 'bold 24px "Droid Sans", sans-serif' } );

  $('#page_container').append('<div id="test_body">body 16px font</div>');

  $('#test_body').css( { position: 'absolute',
                         top: 200,
                         left: 30,
                         font: '16px "Droid Sans", sans-serif' } );

  $('#page_container').append('<div id="test_small">small 10px font</div>');

  $('#test_small').css( { position: 'absolute',
                          top: 250,
                          left: 30,
                          font: '10px "Droid Sans", sans-serif' } );

}



function bind_dashboard_touch_events() {

  // remove previous event handlers

  $('#page_container').on('touchstart', function(event) { dashboard_touch_start(event); } );
  $('#page_container').on('touchmove',  function(event) { dashboard_touch_move(event);  } );
  $('#page_container').on('touchend',   function(event) { dashboard_touch_end(event);   } );

}



function add_dashboard_columns() {

  var events_column_width = Math.floor( global_screen_width * 0.75 );

  var news_column_width = global_screen_width - events_column_width;

  var nav_header_height = $('#nav_header_bar').height();

  var dashboard_column_height = global_screen_height - nav_header_height;


  $('#page_container').append('<div id="events_column"></div>');

  $('#events_column').css( { position: 'absolute',
                             top: 0,
                             left: 0,
                            'background-color': '#ffffff',
                            'height': dashboard_column_height,
                             width: events_column_width } );


  $('#page_container').append('<div id="news_column"></div>');

  $('#news_column').css( { position: 'absolute',
                           top: 0,
                           left: events_column_width,
                          'background-color': '#373637',
                          'height': dashboard_column_height,
                           width: news_column_width } );


  $('#news_column').append('<div id="news_column_title">News</div>');

  $('#news_column_title').css( { position: 'absolute',
                                 top: 15,
                                 left: 12,
                                 color: '#ffffff',
                                 font: '18px "Droid Sans", sans-serif' } );

}



function add_dashboard_buttons() {

  var dashboard_button_top = global_screen_height - 40;


  $('#page_container').append('<div id="show_globals_button"><center>show global variables</center></div>');

  $('#show_globals_button').css( { position: 'absolute',
                                   top: dashboard_button_top,
                                   left: 30,
                                   border: '1px solid black',
                                  'border-radius': 8,
                                   color: '#ffffff',
                                  'background-color': '#0083cb',
                                  'padding-top': 9,
                                  'height': 26,
                                   width: 200 } );

  $('#show_globals_button').on('click touchstart', function() { show_global_variables(); } );



  $('#page_container').append('<div id="show_cookies_button"><center>show cookies</center></div>');

  $('#show_cookies_button').css( { position: 'absolute',
                                   top: dashboard_button_top,
                                   left: 260,
                                   border: '1px solid black',
                                  'border-radius': 8,
                                   color: '#ffffff',
                                  'background-color': '#0083cb',
                                  'padding-top': 9,
                                  'height': 26,
                                   width: 140 } );

  $('#show_cookies_button').on('click touchstart', function() { show_cookies(); } );



  $('#page_container').append('<div id="clear_cookies_button"><center>clear cookies</center></div>');

  $('#clear_cookies_button').css( { position: 'absolute',
                                    top: dashboard_button_top,
                                    left: 430,
                                    border: '1px solid black',
                                   'border-radius': 8,
                                    color: '#ffffff',
                                   'background-color': '#0083cb',
                                   'padding-top': 9,
                                   'height': 26,
                                    width: 140 } );
 
  $('#clear_cookies_button').on('click touchstart', function() { clear_cookies(); } );

}



function show_global_variables() {

  $('#output').css( { padding: 20 } );

  $('#output').html('');

  $('#output').append('global screen height ' + global_screen_height + '<br>');
  $('#output').append('global screen width '  + global_screen_width + '<br>');
  $('#output').append('global screen height with keyboard ' + global_screen_height_with_keyboard + '<br>');
  $('#output').append('global keyboard height ' + global_keyboard_height + '<br>');
  $('#output').append('<br>');
  $('#output').append('window height ' + $(window).height() + '<br>');
  $('#output').append('window width ' + $(window).width() + '<br>');
  $('#output').append('<br>');
  $('#output').append('navigation bar height ' + navigation_bar_height + '<br>');
  $('#output').append('navigation bar button height ' + navigation_bar_button_height + '<br>');
  $('#output').append('navigation bar font size ' + navigation_bar_font_size + '<br>');
  $('#output').append('<br>');
  $('#output').append('<br>');
  $('#output').append('global server timestamp ' + global_server_timestamp + '<br>');
  $('#output').append('<br>');
  $('#output').append('global last page state ' + global_last_page_state + '<br>');
  $('#output').append('global last event selected ' + global_last_event_selected + '<br>');
  $('#output').append('global last row selected ' + global_last_row_selected + '<br>');
  $('#output').append('<br>');
  $('#output').append('global user name ' + global_user_name + '<br>');
  $('#output').append('<br>');
  $('#output').append('global patient name ' + global_patient_name + '<br>');
  $('#output').append('<br>');

  $('#output').append('global current case id ' + global_current_case_id + '<br>');
  $('#output').append('global new case id ' + global_new_case_id + '<br>'); 
  $('#output').append('<br>');
  $('#output').append('global year slider height ' + global_year_slider_height + '<br>'); 
  $('#output').append('global month slider height ' + global_month_slider_height + '<br>'); 
  $('#output').append('<br>');
  $('#output').append('last selected day of week ' + last_selected_day_of_week + '<br>'); 
  $('#output').append('last selected day ' + last_selected_day + '<br>'); 
  $('#output').append('last selected month ' + last_selected_month + '<br>'); 
  $('#output').append('last selected year ' + last_selected_year + '<br>'); 
  $('#output').append('<br>');
  $('#output').append('global images list<br>');
  for ( var i in global_images_list ) {
    $('#output').append('&nbsp;&nbsp;' + i + ', type is ' + global_images_list[i].type + '<br>');
  }
  $('#output').append('<br>');

  $('#output').append('global patient info is<br><pre>' + JSON.stringify(global_patient_info, undefined, 2) + '</pre><br>' );
  $('#output').append('<br>');

  $('#output').append('window case info is<br><pre>' + JSON.stringify(window.case_info, undefined, 2) + '</pre><br>' );
  $('#output').append('<br>');

  $('#output').append('global case input info is<br><pre>' + JSON.stringify(global_case_input_info, undefined, 2) + '</pre><br>' );
  $('#output').append('<br>');

  $('#output').append('global case info is<br><pre>' + JSON.stringify(global_case_info, undefined, 2) + '</pre><br>' );

  set_page_height();

}



function show_cookies() {

  $('#output').css( { padding: 20 } );

  $('#output').html('');


  $('#output').append('cookies: <br><br>');

  var ca = document.cookie.split(';');

  for (var i in ca) {

    $('#output').append(ca[i] + '<br>');
    $('#output').append('<br>');

  }

  set_page_height();

}



function clear_cookies() {

  $('#output').css( { padding: 20 } );

  $('#output').html('');

  $('#output').append('cookies cleared');


  erase_cookie('user_name');
  erase_cookie('last_page_state');

  var mode = get_orientation_mode();

  console.log('clear_cookies, mode ' + mode);

  var screen_height_cookie          = mode + '_screen_height';
  var screen_width_cookie           = mode + '_screen_width';
  var screen_height_keyboard_cookie = mode + '_screen_height_with_keyboard';
  var keyboard_height_cookie        = mode + '_keyboard_height';

  erase_cookie(screen_height_cookie);
  erase_cookie(screen_width_cookie);
  erase_cookie(screen_height_keyboard_cookie);
  erase_cookie(keyboard_height_cookie);

}



function set_page_height() {

  var nav_header_height = $('#nav_header_bar').height();

  var output_height = $('#output').height();

  var page_max_y = global_screen_height + output_height + ( nav_header_height * 2 );


  if ( output_height == 0 ) { 

    page_container_min_y = -2 * nav_header_height;

  } else { 

    page_container_min_y = global_screen_height - page_max_y;

  }

  // $('#page_container').append('<br>set page height, page_container_min_y is ' + page_container_min_y);
  // $('#page_container').append('<br>set page height, page_max_y is ' + page_max_y);

  $('#page_container').css( { height: page_max_y } );

}



function dashboard_touch_start(e) {

  e.preventDefault();

  var touch = e.originalEvent.touches[0];


  touch_move_start.y = touch.pageY;


  global_event_dy = 0;

}



function dashboard_touch_move(e) {

  e.preventDefault();

  var touch = e.originalEvent.touches[0];


  var dy = touch.pageY - touch_move_start.y;

  global_event_dy = dy;


  nav_header_current_top = nav_header_start_top + dy;

  if ( nav_header_current_top > 0 ) { nav_header_current_top = 0; }

  if ( nav_header_current_top < nav_header_top ) { nav_header_current_top = nav_header_top; }

  $('#nav_header_bar').css( { 'top': nav_header_current_top } );



  page_container_current_top = page_container_start_top + ( dy * 2 );

  if ( page_container_current_top > ( navigation_bar_height + nav_header_current_top ) ) {

    page_container_current_top = ( navigation_bar_height + nav_header_current_top );

  }

  if ( page_container_current_top < page_container_min_y ) { page_container_current_top = page_container_min_y; }

  $('#page_container').css( { 'top': page_container_current_top } );

}



function dashboard_touch_end(e) {

  e.preventDefault();

  nav_header_start_top = nav_header_current_top;

  page_container_start_top = page_container_current_top;

};



//---- camera-functions.js ------------------------------------------------------------------------------------




// camera-functions.js



var global_images_list = {};

var global_input_image_list = [];

var global_create_case_images = 0;



// this function is called by create case and new comment
// should be two separate functions


function preview_input_image(input) {

  // $('body').append('<div><pre>previewImage, input files is ' + JSON.stringify( input.files, undefined, 2 ) + '</pre></div>');

  if (input.files && input.files[0]) {

    var reader = new FileReader();

    reader.onload = function (e) {

      // $('#preview').attr( 'src', e.target.result );

      // add to global images object
      // save to api, get filename back from api ?
      // change global case info to filename instead of images object index

      var image_info = {};

      image_info.src  = e.target.result;
      image_info.type = 'input';

      global_images_list[ input.files[0].name ] = image_info;


      // var n = input.files[0].name.split('.');
      // replace dot, space, parens, ?

      var image_name = input.files[0].name.replace(/\./g, '_');

      image_name = image_name.replace(/ /g, '_');
      image_name = image_name.replace(/\(/g, '_');
      image_name = image_name.replace(/\)/g, '_');

      console.log('image_name ' + image_name);

      var image_div = image_name + '_div';


      if ( global_create_case_images == 1 ) {

        // called from create case


        var this_row = global_case_input_info.current_row;

        if ( ( typeof global_case_input_info.events[ this_row ] ) == 'undefined' ) {
          var event_info = {};
          global_case_input_info.events[ this_row ] = event_info;
        }

        if ( ( typeof global_case_input_info.events[ this_row ].image ) == 'undefined' ) {
          var image_info = [];
          global_case_input_info.events[ this_row ].image = image_info;
        }


        // add the new div at the end of the current images on the paragraph

        var current_images = global_case_input_info.events[ this_row ].image.length;


        // add image to global case input info

        global_case_input_info.events[ this_row ].image.push( input.files[0].name )


        // add a div to the input text area at the height of the top of the paragraph
        // adjust icons has to move these also

        var image_top = $('#case_input_row_' + this_row).offset().top + ( current_images * 15 );
        var case_input_width = $('#case_input_container').width();
        var image_left = case_input_width + 20 + ( current_images * 15 );

        $('body').append('<div id="' + image_div + '"><img style="width: 50; height: auto;" src="' + global_images_list[ input.files[0].name ].src + '" /></div>');

        var img_div_css = { position: 'absolute',
                            top: image_top,
                            left: image_left,
                            width: 50,
                            height: 'auto',
                           'z-index': 100,
                           'background-color': '#88aa88' };

        $('#' + image_div).css( img_div_css );



        // get urls for original and thumbnail from image api

        // update image names in the image array of this event, global_case_input_info.events[ this_row ].image

        // remove entry from global images list

        // this_row, input.files[0].name, image_info





      } else {

        // called from add comment

        global_input_image_list.push( input.files[0].name );


        // add a div at the right side of the add comment input box

        // both of these have to check for images already in events.image

        var image_top = $('#add_new_comment_dialog').offset().top + 50;
        var dialog_width = $('#add_new_comment_dialog').width();
        var dialog_left = $('#add_new_comment_dialog').offset().left;
        var image_left = dialog_left + dialog_width - 30;

        $('body').append('<div id="' + image_div + '"><img style="width: 50; height: auto;" src="' + global_images_list[ input.files[0].name ].src + '" /></div>');

        var img_div_css = { position: 'absolute',
                            top: image_top,
                            left: image_left,
                            width: 50,
                            height: 'auto',
                           'z-index': 101,
                           'background-color': '#88aa88' };

        $('#' + image_div).css( img_div_css );


        // get urls for original and thumbnail from image api

        // update images names for this comment

        // remove entry from global images list

        // pass comment id ? , input.files[0].name, image_info




      }

    };

    reader.readAsDataURL(input.files[0]);

  }

}



function set_preview_onload() {

  $('#preview').on('load', function() {

    var css;
    var div_css;

    var ratio = $(this).width() / $(this).height();
    var pratio = $(this).parent().width() / $(this).parent().height();

    if (ratio < pratio) {

      css = { width: 'auto', height: '100%' };
      div_css = { height: 200 };

    } else {

      css = { width: '100%', height: 'auto' };
      div_css = { width: 200 };

    }

    $('#preview_div').css(div_css);
    $('#preview').css(css);

    $('#preview_div').show();

  });

}




//---- login-and-set-globals.js ------------------------------------------------------------------------------------




// check and set global variables

// global screen height, width

// height with keyboard in portrait and landscape

// write to local storage



var global = {};

var global_screen_mode;

var global_screen_width;
var global_screen_height;

var global_screen_height_with_keyboard;

var global_keyboard_height;


var global_user_name;




function init_login_page() {

  check_global_variables();

}



function check_global_variables() {

  var mode = get_orientation_mode();

  var screen_height_cookie = mode + '_screen_height';

  var screen_height = get_cookie(screen_height_cookie);

  console.log('cookie screen_height is ' + screen_height);


  if ( screen_height == null ) {

    console.log('set_global_variables');

    set_global_variables();

  } else {

    console.log('get_global_variables');

    get_global_variables();

  }


}



function set_global_variables() {

  // user name input, keyboard height

  $('body').append('<div id="input_div">Tabeeb user name <input id="text_input" type="text" name="text_input"></div>');

  $('#input_div').css( { position: 'absolute', top: 60, left: 60 } );


  $('body').append('<div id="login"><center>log in</center></div>');

  $('#login').css( { position: 'absolute', 
                     top: 100, 
                     left: 60,
                    'padding-top': 10, 
                     height: 30,
                     width: 80,
                    'border-radius': 8, 
                    'background-color': '#aaaadd',
                     border: '1px solid black' } );


  $('#login').on('click', function() {

    var user_name = $('#text_input').val();

    if ( user_name == '' ) {

      o.append('<br>user name is blank');

      $('#text_input').focus();

    } else {

      o.append('<br>log in ' + user_name);

      o.append('<br>window width is '  + global[mode].screen_width );
      o.append('<br>window height is ' + global[mode].screen_height );

      o.append('<br>window height with keyboard ' + global[mode].screen_height_with_keyboard );
      o.append('<br>keyboard height is ' + global[mode].keyboard_height );


      // set cookies

      var screen_height_cookie = mode + '_screen_height';
      var screen_width_cookie  = mode + '_screen_width';

      set_cookie(screen_height_cookie, global[mode].screen_height);
      set_cookie(screen_width_cookie,  global[mode].screen_width);


      var screen_height_keyboard_cookie = mode + '_screen_height_with_keyboard';
      var keyboard_height_cookie        = mode + '_keyboard_height';

      set_cookie(screen_height_keyboard_cookie, global[mode].screen_height_with_keyboard);
      set_cookie(keyboard_height_cookie,        global[mode].keyboard_height);

      set_cookie('user_name', user_name);


      // set global variables

      global_screen_width                = parseInt( global[mode].screen_width );
      global_screen_height               = parseInt( global[mode].screen_height );
      global_screen_height_with_keyboard = parseInt( global[mode].screen_height_with_keyboard );
      global_keyboard_height             = parseInt( global[mode].keyboard_height );

      global_user_name = user_name;


      load_page('dashboard');

    }

  } );



  $('body').append('<div id="output"></div>');

  $('#output').css( { position: 'absolute', top: 160, left: 60 } );

  var o = $('#output');


  // get screen height before text input gets focus

  var mode = get_orientation_mode();

  var info = {};


  $('#text_input').blur();

  setTimeout( function() {

    info.screen_width  = $(window).width();
    info.screen_height = $(window).height();

    global[mode] = info;

    o.append('<br>' + mode + ', screen_height ' + info.screen_height );

  }, 500 );



  $('#text_input').focus( function() {

    setTimeout( function() {

      if ( mode != 'pc' ) {

        global[mode].screen_height_with_keyboard = $(window).height();
        global[mode].keyboard_height = global[mode].screen_height - global[mode].screen_height_with_keyboard;

        o.append('<br>' + mode + ', screen_height ' + $(window).height() );

      }


    }, 500 );

  } );


}



function get_global_variables() {

  // get cookie values

  var mode = get_orientation_mode();

  var info = {};

  global[mode] = info;


  var screen_height_cookie = mode + '_screen_height';
  var screen_width_cookie  = mode + '_screen_width';

  global[mode].screen_height = get_cookie(screen_height_cookie);
  global[mode].screen_width  = get_cookie(screen_width_cookie);

  
  var screen_height_keyboard_cookie = mode + '_screen_height_with_keyboard';
  var keyboard_height_cookie        = mode + '_keyboard_height';

  global[mode].screen_height_with_keyboard = get_cookie(screen_height_keyboard_cookie);
  global[mode].keyboard_height             = get_cookie(keyboard_height_cookie);


  global_user_name = get_cookie('user_name');

  global_screen_width                = parseInt( global[mode].screen_width );
  global_screen_height               = parseInt( global[mode].screen_height );
  global_screen_height_with_keyboard = parseInt( global[mode].screen_height_with_keyboard );
  global_keyboard_height             = parseInt( global[mode].keyboard_height );


  if ( global_last_page_state == 'login' ) { load_page('dashboard'); }

}



function get_orientation_mode() {

  var mode;
  var rotation = window.orientation;

  if ( typeof rotation == 'undefined') { 

    mode = 'pc'; 

  } else {

    if ( $(window).height() > $(window).width() ) { mode = 'portrait'; }

    if ( $(window).height() < $(window).width() ) { mode = 'landscape'; }

  }

  return mode;


  // the xoom calls landscape mode 0 rotation

  var rotation = window.orientation;

  if ( typeof rotation == 'undefined') { mode = 'pc'; }

  if ( ( rotation == 0 )  || ( rotation == 180 ) ) { mode = 'portrait'; }
  if ( ( rotation == 90 ) || ( rotation == -90 ) || ( rotation == 270 ) ) { mode = 'landscape'; }

  return mode;

}



function set_cookie(name, value, days) {

  if (days) {

    var date = new Date();

    date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));

    var expires = "; expires=" + date.toGMTString();

  } else var expires = "";

  document.cookie = escape(name) + "=" + escape(value) + expires + "; path=/";

}



function get_cookie(name) {

  var nameEQ = escape(name) + "=";
  var ca = document.cookie.split(';');


  for (var i = 0; i < ca.length; i++) {

    var c = ca[i];

    while (c.charAt(0) == ' ') c = c.substring(1, c.length);

    if (c.indexOf(nameEQ) == 0) return unescape(c.substring(nameEQ.length, c.length));

  }

  return null;

}



function erase_cookie(name) {

  set_cookie(name, "", -1);

}



//---- page-handler.js ------------------------------------------------------------------------------------



// page-handler.js
// get the page state, load the page template, call the page load function



// set all page distances in load_page.  
// screen width and height, timeline, events, and comments width.  
// button bar and nav header height
// font size corrections


var global_timeline_width;
var global_events_width;
var global_events_width;

var global_button_bar_height;
var global_navigation_header_height;

var global_screen_width;
var global_screen_height;


var global_last_page_state;



var is_mobile = 0;


function init_page() {

  // check device type

  var mobile = (/iphone|ipad|ipod|android|blackberry|mini|windows\sce|palm/i.test(navigator.userAgent.toLowerCase()));
  if (mobile) { is_mobile = 1; }


  window.onbeforeunload = function() { return 'Hit \"Stay on this Page\" or \"Don\'t Reload\" unless you want to leave Tabeeb.'; }


  var current_page = get_page_state();

  load_page(current_page);

}



function get_page_state() {

  global_last_page_state = get_cookie('last_page_state');


  // check local storage if null

  if ( global_last_page_state == null ) { global_last_page_state = 'login'; }


  return global_last_page_state;

}



function load_page(page) {

  // get page template from api?

  console.log('load_page ' + page);

  var template = '<div></div>';

  switch(page) {

    case 'case_events':
      template = get_case_events_template();
      draw_page(template);
      init_case_events_page();
      break;      

    case 'dr_profile':
      template = get_dr_profile_template();
      draw_page(template);
      init_dr_profile_page();
      break;

    case 'patient_info':
      template = get_patient_info_template();
      draw_page(template);
      init_patient_info_page();
      break;

    case 'patient_list':
      template = get_patient_list_template();
      draw_page(template);
      init_patient_list_page();
      break;

    case 'add_patient':
      template = get_add_patient_template();
      draw_page(template);
      init_add_patient_page();
      break;

    case 'case_list':
      template = get_case_list_template();
      draw_page(template);
      init_case_list_page();
      break;

    case 'create_case':
      template = get_create_case_template();
      draw_page(template);
      init_create_case_page();
      break;

    case 'dashboard':
      template = get_dashboard_template();
      draw_page(template);
      init_dashboard_page();
      break;

    case 'login':
      template = get_login_page_template();
      draw_page(template);
      init_login_page();
      break;

  }

}



function draw_page(template) {

  $('body').html(template);

}



// function get_template(page)



function get_case_events_template() {

  var html = '<div id="page_container"><div id="case_timeline"></div><div id="case_events_container"></div><div id="case_comments"></div></div>';

  return html;

}



function get_dr_profile_template() {

  var html = '<div id="dr_profile">doctor profile</div>';

  return html;

}



function get_patient_info_template() {

  var html = '<div id="patient_info">patient info</div>';

  return html;

}



function get_add_patient_template() {

  var html = '<div id="patient_info"></div>';

  return html;

}



function get_patient_list_template() {

  var html = '<div id="patient_list">patient list</div>';

  return html;

}



function get_case_list_template() {

  var html = '<div id="case_list"></div>';

  return html;

}



function get_create_case_template() {

  var html = '<div id="case_timeline"></div><div id="case_events_container"></div><div id="case_comments"></div>';

  return html;

}



function get_dashboard_template() {

  var html = '<div id="page_container"></div>';

  return html;

}



function get_login_page_template() {

  var html = '';

  return html;

}




